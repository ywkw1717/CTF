Gadgets information
============================================================
0x00000000004296cf : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429739 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c285 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004c4160 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rbp ; add byte ptr [rax], al ; lahf ; ret
0x000000000042fcb5 : adc al, 0x13 ; jmp rdx
0x000000000042e2a5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043fdea : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000049bf7a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e9c8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000418bd7 : adc al, 0x41 ; pop rsp ; ret
0x000000000043bab0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043f348 : adc al, 0x50 ; add byte ptr [rax], al ; ret
0x000000000041fd4a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043f556 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464cfe : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042ab60 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042928e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fcb1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000421597 : adc al, 0xa ; jmp r10
0x000000000042e413 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000441da8 : adc al, 0xc2 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004015a9 : adc al, 0xdd ; fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x0000000000422a71 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c35a : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a3768 : adc al, 0xf8 ; call rax
0x00000000004a39e5 : adc al, 0xf9 ; call qword ptr [rax + 0x10fff913]
0x00000000004a39e1 : adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a3be1 : adc al, 0xf9 ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3bdd : adc al, 0xf9 ; jmp qword ptr [rax]
0x00000000004a3a61 : adc al, 0xf9 ; jmp rdx
0x00000000004c54e1 : adc al, 0xfa ; jmp rdx
0x0000000000476912 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000049189e : adc al, 9 ; ret 0xa074
0x00000000004a35f0 : adc al, ah ; clc ; call rax
0x0000000000429877 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004298e1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046984f : adc al, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046984e : adc al, byte ptr cs:[rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040d747 : adc al, ch ; push rbx ; ret
0x000000000047fd3e : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a39f5 : adc bh, cl ; call qword ptr [rax + 0x10fff911]
0x00000000004a39f1 : adc bh, cl ; call qword ptr [rax]
0x00000000004a3bf1 : adc bh, cl ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3bed : adc bh, cl ; jmp qword ptr [rax]
0x00000000004a3a71 : adc bh, cl ; jmp rdx
0x00000000004c67e0 : adc bh, dl ; cli ; jmp rsi
0x00000000004a3678 : adc bl, ah ; clc ; push rax ; in al, -8 ; call rax
0x00000000004683f2 : adc bl, byte ptr [rsi - 0x39] ; add byte ptr [r8 - 0x77], cl ; ret
0x0000000000426d35 : adc bl, ch ; call 0xffffffffc412f68a
0x0000000000423805 : adc bl, ch ; call 0xffffffffc43ac15a
0x00000000004a3648 : adc bl, ch ; clc ; call qword ptr [rax]
0x0000000000478ec2 : adc bl, ch ; jno 0x478f18 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483964 : adc bl, ch ; ret 0x8348
0x00000000004c86b0 : adc bl, dh ; cld ; call qword ptr [rax]
0x0000000000426724 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b3e6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b457 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b3b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b3e5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000474640 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413046 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044facd : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045062b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044fac6 : adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000047863f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046a8b9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a88d
0x0000000000416a4c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000471684 : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004408c2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000410603 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000478abc : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a36e : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000044fac7 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000418793 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000478640 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412567 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048840a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000047955e : adc byte ptr [rax + 1], cl ; ret
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004749b4 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x000000000042c2a4 : adc byte ptr [rax - 0x73], cl ; jg 0x42c2c1 ; jne 0x42c298 ; ret
0x000000000046aed5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046aed4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440532 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447348 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447cab : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c6ba : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000409957 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c57
0x0000000000463a87 : adc byte ptr [rax - 0x77], cl ; jo 0x463aa5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464dbc : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046a8ba : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a88c
0x0000000000463a47 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e363 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416a4d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000485c8f : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a334 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c789 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000043299f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000438157 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000438193 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400b1a : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420c53 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fc2b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479a99 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bdd58 : adc byte ptr [rax - 3], ah ; call qword ptr [rax]
0x000000000042b12c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429a81 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e48a : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000418b6a : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000478a65 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x00000000004bdd44 : adc byte ptr [rbp + rdi*8 - 1], 0xd0 ; push rsi ; std ; jmp qword ptr [rax]
0x0000000000426848 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c2a8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000004403a7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400bf6 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049ce7c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041eb8b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fcf3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c0982 : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413047 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000416502 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a767 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a781 ; ret
0x000000000043e13a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004bdccc : adc byte ptr [rbx - 3], bh ; push rax ; jl 0x4bdcd7 ; call rax
0x00000000004a339c : adc byte ptr [rbx - 8], al ; jmp qword ptr [rax]
0x00000000004a39ec : adc byte ptr [rbx], dl ; stc ; call qword ptr [rax + 0x10fff912]
0x0000000000410604 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c574 : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000004504c7 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041fa73 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000462150 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a39e4 : adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 0x10fff913]
0x000000000049ed28 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d34c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000418b17 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422af3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494447 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004bff60 : adc byte ptr [rcx - 0xb], 0xff ; ret
0x000000000043e8b4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416505 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420459 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043e99f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a3d1c : adc byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x000000000043bcc3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004978bb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004963bf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004975bf : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496cbf : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496fbf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004966b7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496964 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497564 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497864 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496f64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496c64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000049665c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004956ed : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049550d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495ee5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494e05 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495d05 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044face : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045062c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045004c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004301a9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000485f6a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x000000000042f10b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a39f4 : adc byte ptr [rdx], dl ; stc ; call qword ptr [rax + 0x10fff911]
0x00000000004a39dc : adc byte ptr [rip + 0x1490fff9], dl ; stc ; call qword ptr [rax]
0x000000000042efba : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e5b5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004216e5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042719b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004a3ce0 : adc byte ptr [rsi - 7], dh ; jmp qword ptr [rax]
0x00000000004918cf : adc byte ptr [rsp - 4], al ; ret
0x0000000000491915 : adc byte ptr [rsp - 8], al ; ret
0x0000000000496967 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3a81 : adc cl, bh ; call rdx
0x00000000004a3bc1 : adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3bfd : adc cl, bh ; jmp qword ptr [rax]
0x00000000004a3a05 : adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004526cf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000004237f5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004526d2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000474f9a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b55c : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000479a91 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464664 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004a3644 : adc cl, ch ; clc ; call qword ptr [rax]
0x00000000004a36e0 : adc dh, ah ; clc ; jmp rax
0x00000000004bee80 : adc dh, bh ; hlt ; call qword ptr [rdx]
0x00000000004267b0 : adc dh, bh ; ret
0x000000000041b161 : adc dh, dh ; ret 0xf0f
0x0000000000479403 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004456b3 : adc dword ptr [rax + rbp], edi ; ret
0x0000000000411ba2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f525 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004105f5 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479adc : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f5fc : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417d1e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00000000004164ac : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x000000000047604a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042b12b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000429a17 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b02f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042120b : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x0000000000435b27 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004357c2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000435786 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000402f24 : adc dword ptr [rdi + 0x6cbfe0], edi ; call rax
0x000000000043f407 : adc dword ptr [rdi + rcx*2], 0 ; ret
0x0000000000435c89 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043dd8c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043debf : adc dword ptr [rsi + 3], edx ; ret
0x000000000043df5c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043dd5e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429a16 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a39dd : adc eax, 0x1490fff9 ; stc ; call qword ptr [rax]
0x00000000004a3bd9 : adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3a55 : adc eax, 0x1572fff9 ; stc ; jmp rdx
0x000000000044f506 : adc eax, 0x27c52d ; je 0x44f518 ; ret
0x0000000000444187 : adc eax, 0x285e0c ; pop rbx ; ret
0x000000000047126d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x00000000004711a9 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004295a1 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046e479 : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000046666a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042ae8e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494c29 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041770f : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417736
0x000000000049665f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a3c9 : adc eax, eax ; ret
0x000000000047a506 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x000000000041942f : adc ebp, dword ptr [rbx] ; add byte ptr [rcx - 0x44], al ; jmp qword ptr [rdx]
0x00000000004b93e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046aedc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000049bbc2 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044210f : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000041551a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004472e1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044c844 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452991 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x00000000004a39f9 : adc ecx, edi ; call qword ptr [rax]
0x00000000004a3bf9 : adc ecx, edi ; jmp qword ptr [rax + 0x20fff910]
0x00000000004a3bf5 : adc ecx, edi ; jmp qword ptr [rax]
0x00000000004a3a79 : adc ecx, edi ; jmp rdx
0x00000000004a39ed : adc edi, ecx ; call qword ptr [rax + 0x10fff912]
0x00000000004a39e9 : adc edi, ecx ; call qword ptr [rax]
0x00000000004a3be9 : adc edi, ecx ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3be5 : adc edi, ecx ; jmp qword ptr [rax]
0x00000000004a3a69 : adc edi, ecx ; jmp rdx
0x000000000048e6b4 : adc esi, 0x4b ; add al, ch ; ret
0x00000000004ba8fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049cebc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000496842 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435b26 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004357c1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000435785 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435c88 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043debe : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043df5b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043dd5d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000426723 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494d90 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a505 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004267af : adc sil, r15b ; ret
0x00000000004be6a3 : add ah, ah ; add al, byte ptr [rax] ; add al, ch ; cmp ah, dh ; call qword ptr [rdx]
0x00000000004c2ea3 : add ah, ah ; add byte ptr [rax], al ; sar bpl, 1 ; jmp qword ptr [rdx]
0x00000000004be883 : add ah, al ; add al, 0 ; add byte ptr [rax + 0x64], cl ; hlt ; call qword ptr [rax]
0x00000000004c9183 : add ah, al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; mov byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x000000000043e3ee : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e40e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000046b8aa : add ah, bh ; and eax, 0x5034800 ; ret
0x000000000043e49d : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3cd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c57bb : add ah, bh ; jae 0x4c57c7 ; add al, dl ; and edx, edi ; jmp rdi
0x00000000004c3cbb : add ah, bh ; pop rax ; add byte ptr [rax], al ; add dl, cl ; std ; call qword ptr [rbx]
0x00000000004c3dbb : add ah, bh ; pop rcx ; add byte ptr [rax], al ; loopne 0x4c3d82 ; clc ; jmp qword ptr [rsi]
0x00000000004c269b : add ah, bl ; add byte ptr [rax], al ; xor byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004c6b9b : add ah, bl ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x11], al ; cli ; jmp qword ptr [rdx]
0x00000000004bf9ef : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bfac8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043deba : add ah, byte ptr [rdx - 0xf] ; jl 0x43df0f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c80ab : add ah, ch ; pushfq ; add byte ptr [rax], al ; jo 0x4c80c3 ; cld ; call qword ptr [rax]
0x00000000004c89b3 : add ah, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; std ; call rsp
0x00000000004c4893 : add ah, dl ; add byte ptr fs:[rax], al ; sub ah, ah ; stc ; jmp rax
0x00000000004c5e93 : add ah, dl ; jp 0x4c5e9f ; add al, bh ; push rcx ; cli ; jmp rsp
0x00000000004be885 : add al, 0 ; add byte ptr [rax + 0x64], cl ; hlt ; call qword ptr [rax]
0x0000000000449981 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004499b9 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041bdeb : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x00000000004716e9 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000042322d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bd4f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423251 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cbc1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440d92 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426dc8 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000449ce1 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041825d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402c25 : add al, 0 ; add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x0000000000418d86 : add al, 0 ; add dh, dh ; ret
0x000000000046aedb : add al, 0x11 ; ret
0x000000000043e43d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004745e9 : add al, 0x16 ; jae 0x474597 ; xor eax, eax ; ret
0x000000000042e2a1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042292a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000469fc5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469f96
0x000000000043f27d : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000040995a : add al, 0x24 ; call 0x405c54
0x000000000047168c : add al, 0x24 ; call rax
0x000000000046f9a3 : add al, 0x24 ; lea rdi, qword ptr [rax + 0x6cb1e0] ; call rdx
0x000000000044f56a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047c945 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ea10 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044cf9d : add al, 0x29 ; ret 0x8941
0x00000000004c0dc4 : add al, 0x2a ; add byte ptr [rax], al ; test al, 0xbe ; cmc ; call qword ptr [rcx]
0x00000000004659ee : add al, 0x31 ; ret
0x00000000004658ea : add al, 0x37 ; ret
0x0000000000415bff : add al, 0x3a ; ret
0x0000000000480bfc : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480bd1
0x00000000004667b6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000471271 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043b91b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043ae29 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ae3b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000463f73 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000463eb3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043520a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463d94 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439669 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004655e4 : add al, 0x48 ; xor eax, eax ; ret
0x00000000004745e6 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x47459a ; xor eax, eax ; ret
0x0000000000473ed6 : add al, 0x4c ; cmp edx, eax ; jne 0x473e84 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043ae37 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439677 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044c842 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041bda4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000004667b4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000041ff2a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bfa87 : add al, 0x79 ; ret
0x0000000000475221 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000499f53 : add al, 0x81 ; je 0x499f35 ; ret
0x000000000042928b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000499f4f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x499f39 ; ret
0x000000000042ab63 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e538 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e528 ; ret
0x0000000000428fe7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044934d : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046b130 : add al, 0x85 ; leave ; jne 0x46b0e8 ; xor eax, eax ; ret
0x0000000000466e99 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049ba6b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043ae26 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000439666 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000499fbb : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e23a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000043e53b : add al, 0x8a ; je 0x43e525 ; ret
0x000000000045c450 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041b7a4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000048a003 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c1e50 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c533e : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b4e3 : add al, 0x98 ; add rax, r8 ; jmp rax
0x00000000004be2b4 : add al, 0xd8 ; std ; call rsp
0x000000000047a45d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47a4b9
0x000000000047ff6d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47ffc9
0x000000000047add5 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422a6d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435573 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f2fb : add al, 0xf3 ; ret
0x0000000000426809 : add al, 0xf6 ; ret 0x7408
0x00000000004be311 : add al, 0xfe ; call rax
0x00000000004be30d : add al, 0xfe ; ljmp ptr [rax] ; add al, 0xfe ; call rax
0x00000000004812f8 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000047459c : add al, 1 ; cmp rax, 0xff ; cmove rax, rdx ; ret
0x00000000004bfaff : add al, 2 ; hlt ; ret
0x000000000042f817 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7bd0 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x000000000042130d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042ce38 : add al, 7 ; ret
0x000000000042e40f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c465f : add al, ah ; jg 0x4c4660 ; call rdx
0x00000000004a344f : add al, ah ; pushfq ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004c44cf : add al, ah ; ret
0x00000000004c281f : add al, al ; add eax, edi ; call rsp
0x00000000004c864f : add al, al ; frndint ; call qword ptr [rax]
0x00000000004ae487 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004c26a1 : add al, bh ; call qword ptr [rcx]
0x00000000004c2701 : add al, bh ; call qword ptr [rdi]
0x00000000004c5e97 : add al, bh ; push rcx ; cli ; jmp rsp
0x00000000004c04f7 : add al, bl ; movsxd rsi, ebp ; jmp qword ptr [rax]
0x000000000041ac85 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000443db7 : add al, bpl ; ret 0xfbd9
0x0000000000444267 : add al, bpl ; ret 0xffb0
0x000000000041ade6 : add al, bpl ; ret 0xffff
0x0000000000497742 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004237f1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000004be6a5 : add al, byte ptr [rax] ; add al, ch ; cmp ah, dh ; call qword ptr [rdx]
0x00000000004191ed : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425de3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004106d5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000469dc6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417710 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041f866 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445d1d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451ced : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004233cd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047dbec : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042a921 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004233f1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cbd1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043ff82 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000441202 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440f75 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440e41 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440db9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004666d3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046a4da : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d2c4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000047518d : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x000000000048304e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000418838 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d047 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a63c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000447bcc : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000044724c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044c9d4 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c934e : add al, byte ptr [rax] ; ret
0x000000000044419a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44418e
0x000000000044283e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bf620 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c4f5d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c4d35 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c036d : add al, byte ptr [rdx] ; ret
0x000000000047a995 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c1e54 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000004be6a7 : add al, ch ; cmp ah, dh ; call qword ptr [rdx]
0x00000000004654ce : add al, ch ; in al, dx ; ret 0xfff9
0x0000000000403c2d : add al, ch ; int 0xc3
0x000000000041ac86 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046555e : add al, ch ; pop rsp ; ret 0xfff9
0x0000000000419f17 : add al, ch ; ret
0x000000000048eab8 : add al, ch ; ret 0xf72c
0x000000000047dab8 : add al, ch ; ret 0xf83c
0x000000000046e358 : add al, ch ; ret 0xfaf8
0x0000000000443db8 : add al, ch ; ret 0xfbd9
0x00000000004737f8 : add al, ch ; ret 0xfde8
0x0000000000444268 : add al, ch ; ret 0xffb0
0x000000000041ade7 : add al, ch ; ret 0xffff
0x0000000000472703 : add al, ch ; xlatb ; ret 0xfffc
0x00000000004c8bd7 : add al, cl ; cmp bh, ch ; call rcx
0x00000000004c2a97 : add al, cl ; sbb al, bh ; call qword ptr [rax]
0x00000000004c760f : add al, dh ; cmp bl, bh ; jmp qword ptr [rdx]
0x00000000004c57bf : add al, dl ; and edx, edi ; jmp rdi
0x00000000004a3660 : add bh, ah ; clc ; jmp rax
0x00000000004c6cd2 : add bh, ah ; ret
0x0000000000444a1f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a3245 : add bh, al ; inc eax ; add edi, eax ; jmp rax
0x000000000045f77e : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000410296 : add bh, bh ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000041342a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400b17 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e24f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000402c2c : add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000047a570 : add bh, byte ptr [rax + 1] ; ret
0x0000000000412392 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dc2b : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf223 : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d692 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000470296 : add bh, dh ; ret 0x804
0x00000000004a35bc : add bl, al ; clc ; call qword ptr [rax + 0x20fff8c3]
0x00000000004260c6 : add bl, al ; lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000466e71 : add bl, al ; mov eax, 2 ; ret
0x0000000000421174 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000044414a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c5ac7 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c4d07 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004a3870 : add bl, byte ptr [rcx + rdi*8] ; call qword ptr [rdx + 0x22fff91b]
0x00000000004c5b85 : add bl, byte ptr [rdx + 0xa] ; ret
0x0000000000469fca : add bl, ch ; ret 0x1f0f
0x0000000000406307 : add bl, dh ; ret
0x00000000004654c8 : add byte ptr [r15 + 0x4b287c], dil ; call 0x4017c9
0x000000000047ab40 : add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000047ac6b : add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000045b703 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a6ef : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474621 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425d3f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000468e7e : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x000000000049d58f : add byte ptr [r8 + 1], r9b ; ret
0x00000000004683f5 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000443141 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000459758 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27edf6a
0x0000000000446de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004bc67a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x00000000004bc682 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004c2f4d : add byte ptr [r8], al ; add byte ptr [rcx], dh ; clc ; jmp rsp
0x000000000043f37d : add byte ptr [r8], r8b ; ret
0x00000000004c54df : add byte ptr [rax + 0x14], dh ; cli ; jmp rdx
0x000000000042116f : add byte ptr [rax + 0x16], bh ; ret
0x000000000043dc5f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405437 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044c1f8 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418d45 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b370 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004c89b7 : add byte ptr [rax + 0x36], cl ; std ; call rsp
0x00000000004172db : add byte ptr [rax + 0x39], cl ; ret
0x0000000000483c3b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000417726 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044e9db : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004176e7 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046dda9 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000425d3b : add byte ptr [rax + 0x43d6b0], bh ; cmove rax, rdx ; ret
0x000000000047a816 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004bfe57 : add byte ptr [rax + 0x4e], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000411c58 : add byte ptr [rax + 0x5b004a1c], al ; ret
0x0000000000462e47 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045cefe : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464b3f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000004be887 : add byte ptr [rax + 0x64], cl ; hlt ; call qword ptr [rax]
0x000000000046ab2f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000046ab1f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000046ab3f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000417c82 : add byte ptr [rax + 0x6ca800], bh ; ret
0x00000000004237ef : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000476844 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043b8bf : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040f80a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004c6d47 : add byte ptr [rax + 0xb], ch ; sti ; jmp rsi
0x00000000004671cf : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x0000000000465855 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004435fb : add byte ptr [rax + 0xf], cl ; ret
0x0000000000412707 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425d40 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040f9a9 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000468e7f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426663 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000448aba : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044830d : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044aeca : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000401480 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000474957 : add byte ptr [rax + 1], bh ; ret
0x00000000004c7da7 : add byte ptr [rax + 1], ch ; cld ; jmp qword ptr [rax]
0x0000000000425de5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004106d7 : add byte ptr [rax + 1], cl ; ret
0x0000000000488b8f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b5ac : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f217 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000479a00 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000049acdf : add byte ptr [rax + 5], bh ; ret
0x000000000043e45e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000043e45d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004c8067 : add byte ptr [rax + 9], ch ; cld ; call qword ptr [rdx]
0x00000000004c804f : add byte ptr [rax + 9], dh ; cld ; call qword ptr [rax]
0x00000000004ad42b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041bfc8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c8d9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c3c7b : add byte ptr [rax + rbx*2 - 0x4ce00000], bh ; clc ; call qword ptr [rdi]
0x0000000000471270 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004ae5d7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000049c21f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c6b9f : add byte ptr [rax - 0x11], al ; cli ; jmp qword ptr [rdx]
0x00000000004c4b5f : add byte ptr [rax - 0x14], ah ; stc ; call qword ptr [rsi]
0x0000000000403286 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c4077 : add byte ptr [rax - 0x25], bl ; clc ; call qword ptr [rax]
0x00000000004c405f : add byte ptr [rax - 0x25], dl ; clc ; call qword ptr [rbx]
0x00000000004c408f : add byte ptr [rax - 0x25], dl ; clc ; call qword ptr [rdx]
0x00000000004c101f : add byte ptr [rax - 0x2f], ah ; cmc ; call rdx
0x00000000004c2ea7 : add byte ptr [rax - 0x30], cl ; std ; jmp qword ptr [rdx]
0x000000000043fd41 : add byte ptr [rax - 0x39], cl ; ret
0x00000000004526bf : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dc1f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042104b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f5ff : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004586af : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x00000000004106f7 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004666df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004666bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000046671f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004666cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000046670f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004590a8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044c9ed : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000041da7c : add byte ptr [rax - 0x418aff94], ch ; ret
0x00000000004c0cdf : add byte ptr [rax - 0x46], al ; cmc ; call qword ptr [rax]
0x00000000004c3d5f : add byte ptr [rax - 0x48], al ; clc ; call qword ptr [rcx]
0x00000000004895a2 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004c64ff : add byte ptr [rax - 0x52], dl ; cli ; call rdx
0x00000000004c396f : add byte ptr [rax - 0x66], dh ; clc ; call qword ptr [rdx]
0x00000000004c867f : add byte ptr [rax - 0x6d], dh ; cld ; call qword ptr [rax]
0x000000000044fac3 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000044999f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449983 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004499bb : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047b8aa : add byte ptr [rax - 0x73], cl ; jl 0x47b8da ; js 0x47b8f9 ; call rsp
0x000000000047bbbf : add byte ptr [rax - 0x73], cl ; jl 0x47bbef ; js 0x47bc0e ; call rsp
0x000000000047bf86 : add byte ptr [rax - 0x73], cl ; jl 0x47bfb6 ; js 0x47bfd5 ; call rsp
0x000000000049ac3f : add byte ptr [rax - 0x73], cl ; jl 0x49ac70 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041b15d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000474f97 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049bbbf : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044ca1f : add byte ptr [rax - 0x75], cl ; add eax, 0x27fcd1 ; ret
0x00000000004456af : add byte ptr [rax - 0x75], cl ; add eax, 0x287c11 ; ret
0x00000000004167df : add byte ptr [rax - 0x75], cl ; add eax, 0x2b38d9 ; ret
0x0000000000419bab : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044fadf : add byte ptr [rax - 0x75], cl ; jl 0x44fb10 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004151b6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464df6 : add byte ptr [rax - 0x75], cl ; jp 0x464e41 ; jmp 0x464dc6
0x0000000000464e2f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d6ad : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416d87 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004315df : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e3a7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00000000004451d2 : add byte ptr [rax - 0x75], cl ; ret
0x000000000049c357 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000041680f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040faa2 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041dfb3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000414d22 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414e92 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000469809 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441655 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441555 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000041bded : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x00000000004692d8 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091c2e
0x000000000040f8f1 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000441211 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e660 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004033bc : add byte ptr [rax - 0x77], cl ; ret
0x0000000000417712 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041db8c : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047a933 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000046a09f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x000000000043ed3a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402a2e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c66f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000419a9f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459a29 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044ed34 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004554f1 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043eba3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044f107 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470d77 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000425ceb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a9cf : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000485c64 : add byte ptr [rax - 0x77], cl ; ret 0xe3e8
0x000000000045a134 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413430 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047204f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049e0fd : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000470d13 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004655df : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046801f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000046491a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000443142 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004115a7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x00000000004716eb : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000459759 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27edf69
0x000000000041e578 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042128d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401718 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454fd8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004565ff : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041e6a2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004015ae : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041bd4f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d78f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c729 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000469bff : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040ed9f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475f2f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0a2f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452fdf : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040130f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044bdd0 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000422aef : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464837 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000425fdf : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f6f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047dbee : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000004471df : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000462627 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004849af : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000425580 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429403 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422b13 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046754f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e34f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046571f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c554 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044dfdf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000419f10 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000446acc : add byte ptr [rax - 0x7f], cl ; ret 0x59e0
0x0000000000432d5b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000463ea2 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410222 : add byte ptr [rax - 1], bh ; ret
0x000000000041693e : add byte ptr [rax - 1], dil ; ret
0x00000000004a3d3c : add byte ptr [rax - 7], bh ; jmp qword ptr [rax]
0x0000000000403c2a : add byte ptr [rax], 0 ; add al, ch ; int 0xc3
0x0000000000419f14 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004143f9 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417c7f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca800], bh ; ret
0x0000000000410459 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000048b6d0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041342d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047e0ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000043557b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047841b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046618b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044e973 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041ca73 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417c8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cddb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c555 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042e831 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446fd2 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f80b : add byte ptr [rax], 0 ; je 0x40f820 ; mov eax, edx ; pop rbx ; ret
0x000000000047a817 : add byte ptr [rax], 0 ; je 0x47a828 ; mov eax, edx ; pop rbx ; ret
0x00000000004c26ff : add byte ptr [rax], ah ; clc ; call qword ptr [rdi]
0x00000000004c357f : add byte ptr [rax], ah ; js 0x4c357f ; call qword ptr [rcx]
0x00000000004c3c7f : add byte ptr [rax], ah ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004c67de : add byte ptr [rax], al ; adc bh, dl ; cli ; jmp rsi
0x00000000004c86ae : add byte ptr [rax], al ; adc bl, dh ; cld ; call qword ptr [rax]
0x00000000004bff5e : add byte ptr [rax], al ; adc byte ptr [rcx - 0xb], 0xff ; ret
0x00000000004bee7e : add byte ptr [rax], al ; adc dh, bh ; hlt ; call qword ptr [rdx]
0x00000000004c0dc2 : add byte ptr [rax], al ; add al, 0x2a ; add byte ptr [rax], al ; test al, 0xbe ; cmc ; call qword ptr [rcx]
0x000000000047126f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x0000000000403c2b : add byte ptr [rax], al ; add al, ch ; int 0xc3
0x0000000000419f15 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000046e356 : add byte ptr [rax], al ; add al, ch ; ret 0xfaf8
0x00000000004737f6 : add byte ptr [rax], al ; add al, ch ; ret 0xfde8
0x0000000000472701 : add byte ptr [rax], al ; add al, ch ; xlatb ; ret 0xfffc
0x00000000004603f6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000466e6f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000469fc8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004143fa : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042116d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000045c6db : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000483c39 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044e9d9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000464b3d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000417c80 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043b8bd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000448ab8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044830b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044aec8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000040147e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a5a3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488cb4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488b8d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000049acdd : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000049c21d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x000000000043fd3f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004132dd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004586ad : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041045a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044c9eb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047b8a8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b8dc ; js 0x47b8fb ; call rsp
0x000000000047bbbd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bbf1 ; js 0x47bc10 ; call rsp
0x000000000047bf84 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bfb8 ; js 0x47bfd7 ; call rsp
0x0000000000419ba9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004151b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464df4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x464e43 ; jmp 0x464dc8
0x000000000041680d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000469807 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441653 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441553 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044120f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040f931 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041db8a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000046c66d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000047d6d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043eba1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000425ce9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a9cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000485c62 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe3e8
0x000000000041342e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047204d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000442bac : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d78d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444a23 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475f2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0a2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044bdce : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042aa57 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000425fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004471dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484a8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042aac1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046754d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e34d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044dfdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000434568 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410220 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004167cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047460b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000462d7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004132db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004586ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049ad4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041680b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041db88 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000045e8db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000485c60 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe3e8
0x000000000045809b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d78b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000475f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0a2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000425fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004471db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049a6bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041560b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af2b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004bc67b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x00000000004bc683 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x0000000000416feb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043d9cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b39b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000422acb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042169b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000411ddb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000442d29 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000046669c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004781ff : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047e0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b12dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b048c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000045f804 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043beec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043befc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043bf0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043bf1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bf2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043be6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043be7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043be8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043be9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043beac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bebc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043becc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bedc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043be5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004009fb : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000043b8bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b29c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042116c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000041509c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a5a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049acdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000043557c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047841c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004167fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041680c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004356cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000442d2a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415480 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414c81 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041560d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b02ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af2b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af7a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004b59d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4722
0x00000000004bc67d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x00000000004bc414 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4bb9
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041ca74 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cddc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004bc685 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x000000000045c4ac : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000004426d8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000046204d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000447f72 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e0ba : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004c182e : add byte ptr [rax], al ; add byte ptr [rbp - 0xa], al ; call qword ptr [rsi]
0x000000000043e409 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bbef : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044296c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000434e5d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000411593 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415481 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000412f40 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000460576 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045dd1c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x0000000000443b2d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462ea6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000041660c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000040fc17 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000045d322 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d2a5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403d03 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d9cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b39d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000420738 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440e51 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000440f85 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440dba : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440dc9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004258e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000458a0c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000422acd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042169d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041d0f5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004260f0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426116 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c556 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045b7aa : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000004c2f4e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; clc ; jmp rsp
0x000000000040ec1a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c037 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049c05f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043e365 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043565d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004356cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448b6c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462ac5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411ddd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042601d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004671e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d5a6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000442f84 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bb77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042e832 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f32 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440d93 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049e745 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c90de : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000442d2b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004586fd : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449a05 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000472432 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000004009fc : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004654f0 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004174e8 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000446fd3 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043d121 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485b30 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004c3cbe : add byte ptr [rax], al ; add dl, cl ; std ; call qword ptr [rbx]
0x00000000004c513e : add byte ptr [rax], al ; add dl, dil ; call rsi
0x000000000049ae85 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478977 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000046669e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425de4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043e5de : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043e927 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c288 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040114c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044f8c6 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f3c5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000445717 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478201 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c55e2 : add byte ptr [rax], al ; and al, 0x72 ; add byte ptr [rax], al ; cwde ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004c357e : add byte ptr [rax], al ; and byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000042601e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004238e0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465854 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004be6a6 : add byte ptr [rax], al ; call 0x134bdaea
0x0000000000472702 : add byte ptr [rax], al ; call 0x43e9e4
0x00000000004c3766 : add byte ptr [rax], al ; call 0xffffffffc44c2fff
0x000000000044c6fb : add byte ptr [rax], al ; call r12
0x000000000047ba64 : add byte ptr [rax], al ; call r14
0x000000000044c7d5 : add byte ptr [rax], al ; call r15
0x000000000040166a : add byte ptr [rax], al ; call rax
0x0000000000440d99 : add byte ptr [rax], al ; call rbx
0x00000000004b12de : add byte ptr [rax], al ; call rdi
0x000000000040e9cc : add byte ptr [rax], al ; call rdx
0x00000000004b048e : add byte ptr [rax], al ; call rsp
0x00000000004c5e96 : add byte ptr [rax], al ; clc ; push rcx ; cli ; jmp rsp
0x00000000004c57ba : add byte ptr [rax], al ; cld ; jae 0x4c57c8 ; add al, dl ; and edx, edi ; jmp rdi
0x00000000004c3cba : add byte ptr [rax], al ; cld ; pop rax ; add byte ptr [rax], al ; add dl, cl ; std ; call qword ptr [rbx]
0x00000000004c3dba : add byte ptr [rax], al ; cld ; pop rcx ; add byte ptr [rax], al ; loopne 0x4c3d83 ; clc ; jmp qword ptr [rsi]
0x00000000004c513f : add byte ptr [rax], al ; cli ; call rsi
0x00000000004bfe56 : add byte ptr [rax], al ; cmc ; jmp qword ptr [rcx]
0x00000000004bedae : add byte ptr [rax], al ; cmp ah, 0xf4 ; call qword ptr [rbx]
0x00000000004c64fa : add byte ptr [rax], al ; cmp al, 0x81 ; add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x0000000000410c17 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x410c28 ; pop rbx ; ret
0x00000000004648b5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x4648c9 ; ret
0x00000000004c55e6 : add byte ptr [rax], al ; cwde ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004c6b9a : add byte ptr [rax], al ; fadd qword ptr [rdi - 0x10c00000] ; cli ; jmp qword ptr [rdx]
0x00000000004c269a : add byte ptr [rax], al ; fadd qword ptr [rdx] ; add byte ptr [rax], dh ; add al, bh ; call qword ptr [rcx]
0x00000000004c04f6 : add byte ptr [rax], al ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rax]
0x00000000004be886 : add byte ptr [rax], al ; hlt ; call qword ptr [rax]
0x00000000004c89b2 : add byte ptr [rax], al ; hlt ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; std ; call rsp
0x00000000004c2ea2 : add byte ptr [rax], al ; in al, 0x4a ; add byte ptr [rax], al ; sar bpl, 1 ; jmp qword ptr [rdx]
0x00000000004be6a2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; call 0x134bdaee
0x00000000004c80aa : add byte ptr [rax], al ; in al, dx ; pushfq ; add byte ptr [rax], al ; jo 0x4c80c4 ; cld ; call qword ptr [rax]
0x000000000040f80c : add byte ptr [rax], al ; je 0x40f81f ; mov eax, edx ; pop rbx ; ret
0x0000000000420fd7 : add byte ptr [rax], al ; je 0x420fe4 ; ret
0x000000000047a818 : add byte ptr [rax], al ; je 0x47a827 ; mov eax, edx ; pop rbx ; ret
0x000000000049c21e : add byte ptr [rax], al ; je 0x49c1da ; add rsp, 0x18 ; ret
0x000000000049e746 : add byte ptr [rax], al ; je 0x49e755 ; ret
0x00000000004c513a : add byte ptr [rax], al ; jl 0x4c51b4 ; add byte ptr [rax], al ; add dl, dil ; call rsi
0x0000000000469fc9 : add byte ptr [rax], al ; jmp 0x469f92
0x000000000043ff84 : add byte ptr [rax], al ; jmp rax
0x00000000004c396e : add byte ptr [rax], al ; jo 0x4c3911 ; clc ; call qword ptr [rdx]
0x00000000004c54de : add byte ptr [rax], al ; jo 0x4c54fb ; cli ; jmp rdx
0x00000000004c804e : add byte ptr [rax], al ; jo 0x4c8060 ; cld ; call qword ptr [rax]
0x00000000004c807e : add byte ptr [rax], al ; jo 0x4c8090 ; cld ; call qword ptr [rax]
0x00000000004c80ae : add byte ptr [rax], al ; jo 0x4c80c0 ; cld ; call qword ptr [rax]
0x00000000004c867e : add byte ptr [rax], al ; jo 0x4c861a ; cld ; call qword ptr [rax]
0x00000000004c4166 : add byte ptr [rax], al ; lahf ; ret
0x000000000043beee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043befe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043bf0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043bf1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bf2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043be4d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043be6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043be7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043be8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043be9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043beae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bebe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043bdfa : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bece : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bede : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043be5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000047b8a9 : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x00000000004009fd : add byte ptr [rax], al ; leave ; ret
0x00000000004c396a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rbp ; add byte ptr [rax], al ; jo 0x4c3915 ; clc ; call qword ptr [rdx]
0x00000000004a344e : add byte ptr [rax], al ; loopne 0x4a33f7 ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004c072e : add byte ptr [rax], al ; loopne 0x4c079f ; cmc ; call qword ptr [rdx]
0x00000000004c3dbe : add byte ptr [rax], al ; loopne 0x4c3d7f ; clc ; jmp qword ptr [rsi]
0x00000000004c465e : add byte ptr [rax], al ; loopne 0x4c46e6 ; stc ; call rdx
0x00000000004c70be : add byte ptr [rax], al ; mov al, 0x18 ; sti ; call qword ptr [rax]
0x00000000004c2fde : add byte ptr [rax], al ; mov al, 0x3b ; clc ; call qword ptr [rax]
0x00000000004c17ae : add byte ptr [rax], al ; mov al, 0x3f ; idiv bh ; ret
0x00000000004c455e : add byte ptr [rax], al ; mov al, 0x7d ; stc ; call rdi
0x00000000004c616e : add byte ptr [rax], al ; mov al, 0x7f ; cli ; jmp rdi
0x000000000043adce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000043961e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c9186 : add byte ptr [rax], al ; mov byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x000000000043b8be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b29e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c6eb6 : add byte ptr [rax], al ; mov byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x000000000046498b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b2ae : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004009f8 : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x000000000042116e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000046ab2e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000046ab1e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000046ab3e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x0000000000417c81 : add byte ptr [rax], al ; mov eax, 0x6ca800 ; ret
0x0000000000463ea1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410221 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474956 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049acde : add byte ptr [rax], al ; mov eax, 5 ; ret
0x00000000004164ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e12e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e149 ; ret
0x000000000049e34e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e369 ; ret
0x000000000048862e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x244c2a] ; ret
0x000000000040f621 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc18 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473596 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000040f855 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004449c3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043b2de : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402c26 : add byte ptr [rax], al ; mov edi, 0x6cc720 ; call rbx
0x00000000004726fd : add byte ptr [rax], al ; mov edi, 0x7f ; call 0x43e9e9
0x000000000049c038 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049c060 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434e5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043557e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000473be9 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x43fe09
0x0000000000440d94 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004c357a : add byte ptr [rax], al ; mov esp, 0x20000051 ; js 0x4c3584 ; call qword ptr [rcx]
0x00000000004c3c7a : add byte ptr [rax], al ; mov esp, 0x20000058 ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004c807a : add byte ptr [rax], al ; mov esp, 0x7000009c ; or esp, edi ; call qword ptr [rax]
0x00000000004c867a : add byte ptr [rax], al ; mov esp, 0x700000a2 ; xchg eax, ebx ; cld ; call qword ptr [rax]
0x000000000047afd8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000454f55 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000487f42 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000487fc6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470ce4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042ca6e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c39e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a590 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044f60f : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000041677e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000004666be : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004666ce : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004666de : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004666ee : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004666fe : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000046670e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046671e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414cb9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410c30 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004151b5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047841e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471b1e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000464e2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004167fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c36e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c3ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c40e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c3fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c3be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004456ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287c11] ; ret
0x00000000004167de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b38d9] ; ret
0x00000000004747bf : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c517 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040faa1 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041dfb2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041bfcb : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041680e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e65f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a959 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000464df5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464dc7
0x0000000000440f86 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440e52 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440dca : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440dbb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000441210 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041bdec : add byte ptr [rax], al ; mov rdi, rbx ; call 0x418047
0x00000000004627f6 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000046210b : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004353be : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000417711 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417734
0x000000000049c97e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x00000000004c804a : add byte ptr [rax], al ; mov word ptr [rax + rax - 0x3f69000], ds ; call qword ptr [rax]
0x00000000004c2f4a : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add byte ptr [rax], al ; xor eax, edi ; jmp rsp
0x00000000004c864a : add byte ptr [rax], al ; mov word ptr [rdx - 0x26400000], fs ; cld ; call qword ptr [rax]
0x00000000004c4162 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rbp ; add byte ptr [rax], al ; lahf ; ret
0x000000000049a1df : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000411dde : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000434fee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004356ce : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043565e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c695e : add byte ptr [rax], al ; nop ; fdiv st(2), st(0) ; call rsi
0x0000000000442d2c : add byte ptr [rax], al ; nop ; ret
0x00000000004c6af6 : add byte ptr [rax], al ; or ah, ah ; cli ; jmp qword ptr [rdx]
0x00000000004c7316 : add byte ptr [rax], al ; or byte ptr [rbx], ch ; sti ; call rsp
0x0000000000476914 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c6b9e : add byte ptr [rax], al ; out dx, eax ; cli ; jmp qword ptr [rdx]
0x00000000004be846 : add byte ptr [rax], al ; pop rax ; add edi, esi ; call rdi
0x000000000045c3dd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c4ad : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e40a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000462ea7 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a4ac : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000044296d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000411594 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411b7b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c281a : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], r8b ; rol byte ptr [rcx], 0xf8 ; call rsp
0x00000000004c101a : add byte ptr [rax], al ; pop rsp ; sub al, 0 ; add byte ptr [rax - 0x2f], ah ; cmc ; call rdx
0x00000000004c64fe : add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x00000000004c7312 : add byte ptr [rax], al ; push rsp ; pop qword ptr [rax] ; add byte ptr [rax], cl ; sub edi, ebx ; call rsp
0x00000000004c864e : add byte ptr [rax], al ; rcr cl, 0xfc ; call qword ptr [rax]
0x0000000000401153 : add byte ptr [rax], al ; ret
0x00000000004a7666 : add byte ptr [rax], al ; ret 0
0x00000000004ae5de : add byte ptr [rax], al ; ret 0x10
0x00000000004b02ae : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0a46 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af2b6 : add byte ptr [rax], al ; ret 0x24
0x00000000004af7a6 : add byte ptr [rax], al ; ret 0x33
0x00000000004b59d6 : add byte ptr [rax], al ; ret 0x4722
0x00000000004bc67f : add byte ptr [rax], al ; ret 0x4b
0x00000000004bc416 : add byte ptr [rax], al ; ret 0x4bb9
0x00000000004addde : add byte ptr [rax], al ; ret 0xa
0x00000000004ae1de : add byte ptr [rax], al ; ret 0xd
0x00000000004b1682 : add byte ptr [rax], al ; ret 1
0x00000000004b1882 : add byte ptr [rax], al ; ret 2
0x00000000004b1a82 : add byte ptr [rax], al ; ret 3
0x00000000004b1c82 : add byte ptr [rax], al ; ret 4
0x00000000004b1e82 : add byte ptr [rax], al ; ret 5
0x00000000004ad986 : add byte ptr [rax], al ; ret 6
0x00000000004b2282 : add byte ptr [rax], al ; ret 7
0x00000000004b2482 : add byte ptr [rax], al ; ret 8
0x00000000004b2682 : add byte ptr [rax], al ; ret 9
0x00000000004b1c7e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004c281e : add byte ptr [rax], al ; rol byte ptr [rcx], 0xf8 ; call rsp
0x00000000004ae086 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004c2ea6 : add byte ptr [rax], al ; sar bpl, 1 ; jmp qword ptr [rdx]
0x00000000004c2fda : add byte ptr [rax], al ; sbb al, 0x4c ; add byte ptr [rax], al ; mov al, 0x3b ; clc ; call qword ptr [rax]
0x00000000004c54da : add byte ptr [rax], al ; sbb al, 0x71 ; add byte ptr [rax], al ; jo 0x4c54ff ; cli ; jmp rdx
0x00000000004c67da : add byte ptr [rax], al ; sbb al, 0x84 ; add byte ptr [rax], al ; adc bh, dl ; cli ; jmp rsi
0x0000000000411c57 : add byte ptr [rax], al ; sbb byte ptr [rdx + rcx*2], 0 ; pop rbx ; ret
0x00000000004c19f6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x00000000004bee66 : add byte ptr [rax], al ; sbb dh, bh ; hlt ; call qword ptr [rax]
0x00000000004c57be : add byte ptr [rax], al ; shl byte ptr [rcx], 1 ; cli ; jmp rdi
0x00000000004c89b6 : add byte ptr [rax], al ; std ; call rsp
0x00000000004c4896 : add byte ptr [rax], al ; sub ah, ah ; stc ; jmp rax
0x000000000042f27c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415c06 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000442825 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004671d3 : add byte ptr [rax], al ; syscall ; ret
0x00000000004c0026 : add byte ptr [rax], al ; test al, 0x54 ; cmc ; call qword ptr [rcx]
0x00000000004c6286 : add byte ptr [rax], al ; test al, 0x8b ; cli ; call rsi
0x00000000004c0dc6 : add byte ptr [rax], al ; test al, 0xbe ; cmc ; call qword ptr [rcx]
0x00000000004c6866 : add byte ptr [rax], al ; test al, 0xd8 ; cli ; jmp rdi
0x00000000004c6d42 : add byte ptr [rax], al ; test byte ptr [rcx + 0xb680000], cl ; sti ; jmp rsi
0x00000000004426d9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004bfe52 : add byte ptr [rax], al ; xchg eax, esp ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x4e], cl ; cmc ; jmp qword ptr [rcx]
0x00000000004c04f2 : add byte ptr [rax], al ; xor al, 0x21 ; add byte ptr [rax], al ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rax]
0x00000000004c19f2 : add byte ptr [rax], al ; xor al, 0x36 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x00000000004c6af2 : add byte ptr [rax], al ; xor al, 0x87 ; add byte ptr [rax], al ; or ah, ah ; cli ; jmp qword ptr [rdx]
0x00000000004c269e : add byte ptr [rax], al ; xor byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x0000000000451ba7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ec1b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a4c5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041ca76 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b4e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004133de : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x4133f9 ; ret
0x00000000004c2f4f : add byte ptr [rax], al ; xor eax, edi ; jmp rsp
0x00000000004881b1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440d06 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440d2b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440d4f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440d6f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000425fcd : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004009f9 : add byte ptr [rax], bh ; leave ; ret
0x00000000004c19f7 : add byte ptr [rax], bl ; jbe 0x4c19f5 ; call qword ptr [rax]
0x00000000004c4897 : add byte ptr [rax], ch ; in al, -7 ; jmp rax
0x00000000004bc687 : add byte ptr [rax], ch ; ret 0x4b
0x00000000004c6af7 : add byte ptr [rax], cl ; in al, -6 ; jmp qword ptr [rdx]
0x0000000000476915 : add byte ptr [rax], cl ; je 0x476982 ; pop rbx ; ret
0x000000000049aabe : add byte ptr [rax], cl ; mov byte ptr [rip + 0x232099], 8 ; ret
0x000000000049aac5 : add byte ptr [rax], cl ; ret
0x00000000004c7317 : add byte ptr [rax], cl ; sub edi, ebx ; call rsp
0x00000000004c269f : add byte ptr [rax], dh ; add al, bh ; call qword ptr [rcx]
0x00000000004c229f : add byte ptr [rax], dh ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004c86af : add byte ptr [rax], dl ; cld ; call qword ptr [rax]
0x000000000040103f : add byte ptr [rax], dl ; jmp 0x400fa3
0x00000000004a3a04 : add byte ptr [rax], dl ; stc ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004c67df : add byte ptr [rax], dl ; xlatb ; cli ; jmp rsi
0x0000000000470dcd : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004783ed : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047e24d : add byte ptr [rax], r8b ; call rbx
0x00000000004c2fdd : add byte ptr [rax], r8b ; mov al, 0x3b ; clc ; call qword ptr [rax]
0x0000000000474955 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b2cd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042ca6d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b30d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047ad55 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412bfd : add byte ptr [rax], r8b ; ret
0x00000000004c281d : add byte ptr [rax], r8b ; rol byte ptr [rcx], 0xf8 ; call rsp
0x000000000049a115 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004133bd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000004673f7 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x000000000041b271 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b3ee : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047880c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c3de : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c4ae : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000474727 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x0000000000478692 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000047902f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000478f1f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000478734 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000049eaf5 : add byte ptr [rbp + r8 - 0x18], sil ; ret 0xf7f4
0x000000000049eaf6 : add byte ptr [rbp + rax - 0x18], dh ; ret 0xf7f4
0x00000000004c695b : add byte ptr [rbp + rax*4 - 0x23700000], bl ; cli ; call rsi
0x00000000004c513b : add byte ptr [rbp + rbp*2], bh ; add byte ptr [rax], al ; cli ; call rsi
0x00000000004ae1d7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000464f7e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004c616b : add byte ptr [rbp + rdi*2 + 0x7fb00000], ch ; cli ; jmp rdi
0x00000000004c396b : add byte ptr [rbp + rdx*2 - 0x65900000], ch ; clc ; call qword ptr [rdx]
0x000000000049ecb4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004426da : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae483 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041da7f : add byte ptr [rbp - 0x42], dh ; ret
0x00000000004527e9 : add byte ptr [rbp - 0x75], cl ; jl 0x45281a ; and byte ptr [rax + 1], cl ; ret
0x000000000045ca69 : add byte ptr [rbp - 0x75], cl ; jl 0x45ca9a ; and byte ptr [rax + 1], cl ; ret
0x000000000046204f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000447f74 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e0bc : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004806bf : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004c1830 : add byte ptr [rbp - 0xa], al ; call qword ptr [rsi]
0x0000000000429289 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474948 : add byte ptr [rbx + 0x2568200d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e40b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000470290 : add byte ptr [rbx + 0x25cf6115], cl ; add bh, dh ; ret 0x804
0x0000000000410c18 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416877 : add byte ptr [rbx + 0x2b5d2505], al ; add byte ptr [rcx], al ; ret
0x000000000047bbf1 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044296e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a4ad : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b2df : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043ae0f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000420237 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000434e5f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470dc6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e767 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000412611 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411595 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049e12f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483c35 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f50a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c2f4b : add byte ptr [rbx + rcx*2 + 0x31000000], cl ; clc ; jmp rsp
0x000000000045f77b : add byte ptr [rbx + rcx*2], bh ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000475152 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a4f7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000480007 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000460578 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047c917 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47c931 ; ret
0x0000000000467aea : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410baf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e486 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e47f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e478 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e471 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e46a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e463 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045dd1e : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043e1d5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043e1c0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00000000004749b1 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047521e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000443b2f : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462ea8 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410414 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d2c6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004067c3 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462ad4 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000040a438 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x00000000004429cf : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x000000000041660e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c80c3 : add byte ptr [rbx*4 + 0x9680000], al ; cld ; call qword ptr [rdx]
0x0000000000470d17 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000044ee8f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000046574f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041b1af : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489add : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426946 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e49e : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040fc19 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000040f622 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000047518f : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x00000000004154d6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470dc3 : add byte ptr [rcx + 0x5d5b006c], dh ; jmp rax
0x000000000046498c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fcae : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042e52c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b158 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000049a1e0 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x00000000004c455b : add byte ptr [rcx + 0x7db00000], bl ; stc ; call rdi
0x00000000004405a5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d324 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d2a7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041aea7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f43e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403d05 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d9cf : add byte ptr [rcx + 1], cl ; ret
0x000000000049b39f : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042073a : add byte ptr [rcx + 9], al ; ret
0x0000000000412562 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c64fb : add byte ptr [rcx + rax*4], bh ; add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x00000000004c3d5b : add byte ptr [rcx + rbx*2 - 0x47c00000], bl ; clc ; call qword ptr [rcx]
0x00000000004c3d43 : add byte ptr [rcx + rbx*2 - 0x47c80000], al ; clc ; call qword ptr [rcx]
0x000000000042ca6f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412563 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c6d43 : add byte ptr [rcx + rcx*4 + 0xb680000], al ; sti ; jmp rsi
0x0000000000440e53 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000473bea : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x43fe08
0x000000000047e39f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000440f87 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000445342 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000049c97f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440dbc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000044529c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440dcb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004bc40f : add byte ptr [rcx + rdi*4 + 0x4b], dh ; add byte ptr [rax], al ; ret 0x4bb9
0x00000000004c357b : add byte ptr [rcx + rdx*2 + 0x78200000], bh ; clc ; call qword ptr [rcx]
0x00000000004c54db : add byte ptr [rcx + rsi*2], bl ; add byte ptr [rax], al ; jo 0x4c54fe ; cli ; jmp rdx
0x000000000048ef3b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048c083 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488e83 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b024 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000419431 : add byte ptr [rcx - 0x44], al ; jmp qword ptr [rdx]
0x0000000000405544 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449ce3 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449d00 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449d1d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000483050 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000047fd3b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004408bf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e92f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000442837 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004258e3 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000040fbb7 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411483 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000458a0e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000444027 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445d97 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046c99f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x0000000000422acf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041fd80 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000042169f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041825f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a169 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a173 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047cdf1 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047c91a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004a3398 : add byte ptr [rcx - 8], al ; call qword ptr [rax]
0x00000000004260f2 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426118 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000442f82 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000047494e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x000000000044417c : add byte ptr [rcx], bh ; ret
0x0000000000400c5c : add byte ptr [rcx], bh ; ret 0x860f
0x0000000000468109 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x000000000049c9f0 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045b7ac : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041386a : add byte ptr [rcx], cl ; ret 0x8948
0x00000000004c04f3 : add byte ptr [rcx], dh ; add byte ptr [rax], al ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rax]
0x00000000004c2f50 : add byte ptr [rcx], dh ; clc ; jmp rsp
0x000000000047b517 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec1c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046b0ef : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b0ea ; ret
0x000000000046ad6a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ada1 ; ret
0x0000000000488ba7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004133df : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4133f8 ; ret
0x000000000047a808 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004881b2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000447bce : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446dc7 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000044724e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044419b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000041adfb : add byte ptr [rdi + 0x4a231c], bh ; call 0x417038
0x000000000041adfa : add byte ptr [rdi + 0x4a231c], dil ; call 0x417039
0x000000000041ade2 : add byte ptr [rdi + 0x4a234b], bh ; call 0x417038
0x000000000041ade1 : add byte ptr [rdi + 0x4a234b], dil ; call 0x417039
0x00000000004654c9 : add byte ptr [rdi + 0x4b287c], bh ; call 0x4017c8
0x0000000000432c65 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000445750 : add byte ptr [rdi + 0x6cc6d0], bh ; call rax
0x000000000044574f : add byte ptr [rdi + 0x6cc6d0], r15b ; call rax
0x0000000000402c27 : add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x000000000047ab41 : add byte ptr [rdi + 0x6cc9c0], bh ; call rax
0x000000000047ac6c : add byte ptr [rdi + 0x6cc9c4], bh ; call rdx
0x00000000004726fe : add byte ptr [rdi + 0x7f], bh ; call 0x43e9e8
0x000000000049c039 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049c061 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c6af3 : add byte ptr [rdi + rax*4], dh ; add byte ptr [rax], al ; or ah, ah ; cli ; jmp qword ptr [rdx]
0x000000000045b704 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a6f0 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c7313 : add byte ptr [rdi + rcx*4], dl ; add byte ptr [rax], cl ; sub edi, ebx ; call rsp
0x00000000004c4b5b : add byte ptr [rdi - 0x13a00000], bl ; stc ; call qword ptr [rsi]
0x00000000004a3d18 : add byte ptr [rdi - 7], dh ; call qword ptr [rax]
0x00000000004345fa : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e367 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043565f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004356cf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448b6e : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462ac7 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000042293f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466840 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411ddf : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e53f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042619f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cd9f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042603f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042602f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042601f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004671e7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d5a8 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000004032a3 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000004a3c08 : add byte ptr [rdi], cl ; stc ; push qword ptr [rax + 0xe] ; stc ; call rax
0x000000000044941a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420734 : add byte ptr [rdi], cl ; test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460b49 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451ce9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047dbe8 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042004a : add byte ptr [rdi], cl ; test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000040ed99 : add byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045df4b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467c99 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000442f86 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000467c0d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bb7a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042665e : add byte ptr [rdx + 0x42fb60], bh ; cmove rax, rdx ; ret
0x000000000043adcf : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000043961f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000004c0643 : add byte ptr [rdx + 0x67b80000], al ; cmc ; call qword ptr [rsi]
0x00000000004c465b : add byte ptr [rdx + 0x7fe00000], bl ; stc ; call rdx
0x00000000004449bf : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049c1d6 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c0dc3 : add byte ptr [rdx + rbp], al ; add byte ptr [rax], al ; test al, 0xbe ; cmc ; call qword ptr [rcx]
0x00000000004bfe53 : add byte ptr [rdx + rbx + 0x4e480000], dl ; cmc ; jmp qword ptr [rcx]
0x00000000004addd7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004bee63 : add byte ptr [rdx + rcx - 0x1e80000], ah ; hlt ; call qword ptr [rax]
0x00000000004bee7b : add byte ptr [rdx + rcx - 0x1f00000], bh ; hlt ; call qword ptr [rdx]
0x00000000004bf65b : add byte ptr [rdx + rdx + 0x25300000], bl ; cmc ; jmp qword ptr [rsi]
0x00000000004c760b : add byte ptr [rdx + rdx*4], cl ; add al, dh ; cmp bl, bh ; jmp qword ptr [rdx]
0x00000000004c55e3 : add byte ptr [rdx + rsi*2], ah ; add byte ptr [rax], al ; cwde ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004c864b : add byte ptr [rdx - 0x26400000], cl ; cld ; call qword ptr [rax]
0x00000000004c867b : add byte ptr [rdx - 0x6c900000], bh ; cld ; call qword ptr [rax]
0x0000000000469950 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469965
0x0000000000488f35 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044f60d : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004a37c4 : add byte ptr [rdx], bl ; stc ; call qword ptr [rax + 0x20fff919]
0x000000000042e834 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457de3 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000425f34 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440d95 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000440f82 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000440e4e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440dc6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000441200 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000440f73 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000440e3f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440db7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049e747 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c5273 : add byte ptr [rsi + rbp*2 + 0x5880000], dh ; cli ; jmp rdx
0x00000000004c90e0 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c19f3 : add byte ptr [rsi + rsi], dh ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x0000000000442d2d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004a3cdc : add byte ptr [rsi - 7], dh ; call qword ptr [rax]
0x00000000004a399c : add byte ptr [rsi], bl ; stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004c281b : add byte ptr [rsp + rax*2], bl ; add al, al ; add eax, edi ; call rsp
0x00000000004c6863 : add byte ptr [rsp + rax*4 - 0x27580000], ah ; cli ; jmp rdi
0x00000000004c67db : add byte ptr [rsp + rax*4], bl ; add byte ptr [rax], al ; adc bh, dl ; cli ; jmp rsi
0x00000000004c101b : add byte ptr [rsp + rbp], bl ; add byte ptr [rax - 0x2f], ah ; cmc ; call rdx
0x00000000004c4073 : add byte ptr [rsp + rbx*2 - 0x24a80000], dh ; clc ; call qword ptr [rax]
0x00000000004c405b : add byte ptr [rsp + rbx*2 - 0x24b00000], bl ; clc ; call qword ptr [rbx]
0x00000000004c8063 : add byte ptr [rsp + rbx*4 + 0x9680000], ah ; cld ; call qword ptr [rdx]
0x00000000004c807b : add byte ptr [rsp + rbx*4 + 0x9700000], bh ; cld ; call qword ptr [rax]
0x00000000004c804b : add byte ptr [rsp + rbx*4 + 0x9700000], cl ; cld ; call qword ptr [rax]
0x00000000004c2fdb : add byte ptr [rsp + rcx*2], bl ; add byte ptr [rax], al ; mov al, 0x3b ; clc ; call qword ptr [rax]
0x000000000045c836 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e45c : add byte ptr ds:[rax + 8], dil ; pop rbx ; ret
0x00000000004692d7 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091c2f
0x00000000004692d6 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091c30
0x0000000000467ec3 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000467c98 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467c0c : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046994f : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469966
0x0000000000425ce8 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004426d7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004c4895 : add byte ptr fs:[rax], al ; sub ah, ah ; stc ; jmp rax
0x000000000044574e : add byte ptr fs:[rdi + 0x6cc6d0], r15b ; call rax
0x00000000004133b0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411b13 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c19f5 : add byte ptr ss:[rax], al ; sbb byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x00000000004586ff : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb43c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb43d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046739b : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000464c9a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d360 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041adbd : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472508 : add ch, cl ; ret 0xfffd
0x000000000045a7c9 : add cl, bl ; in eax, -0x21 ; loopne 0x45a75e ; ret 0xe680
0x0000000000439647 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045dc5e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000004895d4 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00000000004895fd : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000004499a3 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046f8fb : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004105f9 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483e95 : add cl, byte ptr [rax + 1] ; ret
0x000000000044d013 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439648 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004395b5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047bf41 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x00000000004164b2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041afa2 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000046b1b9 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000047994c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000423780 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004485b4 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000004237e3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004642c1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bfbf8 : add cl, byte ptr [rbp + 0xa] ; ret
0x0000000000489fc3 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004354a2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041c044 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x000000000043f55f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f4b7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000041b3e8 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462ca5 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000043e13d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c7aff : add cl, byte ptr [rdx] ; ret
0x000000000047661d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x0000000000443d9f : add cl, ch ; ret
0x0000000000408638 : add cl, ch ; ret 0xffe2
0x0000000000472434 : add cl, ch ; ret 0xfffd
0x00000000004009fe : add cl, cl ; ret
0x00000000004bfb00 : add dh, ah ; ret
0x00000000004654f2 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b12d7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435653 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043fdab : add dh, bl ; ret
0x00000000004401bc : add dh, bl ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4401cc ; call rbx
0x00000000004bf9fe : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049e752 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x00000000004174ea : add dh, dh ; ret
0x0000000000446fd5 : add dh, dh ; ret 0x4801
0x00000000004267f8 : add dh, dh ; ret 0x7404
0x0000000000400e9a : add dh, dh ; ret 0x7420
0x000000000043bcf7 : add dh, dh ; ret 0x7501
0x000000000043bd04 : add dh, dh ; ret 0x7502
0x000000000043bd11 : add dh, dh ; ret 0x7504
0x000000000043bcc9 : add dh, dh ; ret 0x7510
0x000000000043bcd6 : add dh, dh ; ret 0x7520
0x000000000043bce3 : add dh, dh ; ret 0x7540
0x000000000041b3e5 : add dh, dh ; ret 0xf02
0x000000000047090a : add dh, dh ; ret 0xf08
0x00000000004bc680 : add dl, al ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004b59ff : add dl, al ; and al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4722
0x00000000004c5141 : add dl, bh ; call rsi
0x00000000004c3cc0 : add dl, cl ; std ; call qword ptr [rbx]
0x00000000004c5140 : add dl, dil ; call rsi
0x00000000004c9347 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000004c1a9c : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449ce6 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000004623de : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462b32 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000449350 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043add1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000415131 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000474799 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004747ab : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479ae0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000045975d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000049cb29 : add dword ptr [rax + 0x63], ecx ; ret
0x000000000047be8d : add dword ptr [rax + 1], ecx ; ret
0x000000000040db86 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049e742 : add dword ptr [rax + 3], edi ; je 0x49e759 ; ret
0x00000000004c4e0e : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000458246 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x0000000000402873 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b48a : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439621 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000047463d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004395b2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000414f33 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004187ae : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004150ca : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000465421 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471c77 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412e1f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000004764c3 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x77], 5 ; ret 0x256c
0x000000000047459d : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004257a2 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000473854 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004623df : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x00000000004505a9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041afa6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000044459c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452a83 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x0000000000446cae : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489eb4 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d6b3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462b33 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000004812fa : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004c64fd : add dword ptr [rax], 0xfaae5000 ; call rdx
0x000000000040f8f6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044c1f6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b36e : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473964 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000411c56 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5b004a1c], al ; ret
0x000000000047ecd7 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421049 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041b15b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004114d6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f105 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049bec5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000464918 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e576 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e6a0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405a57 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c727 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040ed9d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042356d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004497a4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042557e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042bfef : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004234c1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044c552 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000463ea0 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444a21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b12da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b048a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b02b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b02aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0a42 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049c03b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401668 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440d97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000469fc7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469f94
0x000000000049c92d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000049c5a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a58e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000440f84 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440e50 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440dc8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000044120e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000004627f4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000462109 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c4ab : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415533 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e9bc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000444147 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041b3ec : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000049be9e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444233 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467ae8 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410412 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462ad2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000445e1c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fd7e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000044941e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d0eb : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a171 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000468107 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x0000000000413868 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446dc5 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000043bcf5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043bd02 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043bd0f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043bcc7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043bcd4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043bce1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004212b8 : add dword ptr [rax], eax ; ret
0x0000000000425ba1 : add dword ptr [rax], edi ; ret
0x000000000043e177 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x000000000047e392 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000489fa3 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000485ec7 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442649 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000435512 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000046dbc5 : add dword ptr [rbx - 0x77], eax ; je 0x46db56 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046dbc4 : add dword ptr [rbx - 0x77], eax ; je 0x46db57 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000040d5bd : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c9392 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c938f : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000046a0d9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000446dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000447278 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041ba1a : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439651 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000461ef0 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000445dcd : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00000000004042ad : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004588fb : add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x0000000000425597 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041bd25 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000047760b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c6d1d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c6c5d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c6cbd : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c6c6e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c6cce : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6d2e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c290d : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c7afb : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c7a4a : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043e1d8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e1c3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045bc91 : add dword ptr [rdi], ecx ; test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041830e : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a68d : add dword ptr [rdi], ecx ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000041d0f1 : add dword ptr [rdi], ecx ; test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004749b7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475224 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e09d : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000499f50 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000043dc62 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043585d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048842b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bfafe : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046d8e7 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004c0d6d : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6a2d : add dword ptr [rdx], 0x48 ; ret
0x00000000004c911c : add dword ptr [rdx], 0x54 ; ret
0x00000000004c64ec : add dword ptr [rdx], 0x55 ; ret
0x00000000004c6a24 : add dword ptr [rdx], 0x5b ; ret
0x00000000004c90c4 : add dword ptr [rdx], 0x69 ; ret
0x00000000004c4f5c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c4d34 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c036c : add dword ptr [rdx], 2 ; ret
0x00000000004bfc0a : add dword ptr [rdx], ecx ; ret
0x0000000000416878 : add dword ptr [rip + 0x2b5d25], 1 ; ret
0x00000000004bf076 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf08c ; ret
0x00000000004bf084 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439632 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004bff0e : add dword ptr [rsi], 0xa ; ret
0x00000000004bff80 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c1a9d : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400d0d : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c2466 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000497867 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c7b12 : add dword ptr es:[rdx], ecx ; ret
0x0000000000426c58 : add eax, 0x12ad3 ; ret
0x0000000000423728 : add eax, 0x14853 ; ret
0x00000000004260ca : add eax, 0x15e71 ; ret
0x00000000004266a4 : add eax, 0x17647 ; ret
0x00000000004212b5 : add eax, 0x1a966 ; ret
0x00000000004260ae : add eax, 0x1d ; ret
0x000000000044f60c : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c15e4 : add eax, 0x2300e4a ; ret
0x0000000000488631 : add eax, 0x244c2a ; ret
0x0000000000476840 : add eax, 0x2569b2 ; jne 0x476889 ; ret
0x000000000047404c : add eax, 0x258d17 ; mov qword ptr [rsi], rax ; ret
0x0000000000473feb : add eax, 0x258d80 ; ret
0x0000000000473f0a : add eax, 0x258e61 ; add rsp, 8 ; ret
0x000000000044ca22 : add eax, 0x27fcd1 ; ret
0x00000000004456b2 : add eax, 0x287c11 ; ret
0x0000000000444161 : add eax, 0x28914a ; test eax, eax ; je 0x444179 ; ret
0x000000000041dc09 : add eax, 0x2ae9f6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004167e2 : add eax, 0x2b38d9 ; ret
0x00000000004168e6 : add eax, 0x2b5cb9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040154b : add eax, 0x2c8b40 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2ca9a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2cb1f5 ; add ebx, esi ; ret
0x00000000004c1a9b : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x000000000043ae68 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000439698 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b366 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043aee9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004396d9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047a996 : add eax, 0x5b000000 ; ret
0x00000000004b1e7d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418ba5 : add eax, 0x5c415d5b ; ret
0x0000000000426d74 : add eax, 0x67 ; ret
0x000000000048a023 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e097 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042315d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a5e1 : add eax, 0x83480000 ; ret 0xe910
0x00000000004230b1 : add eax, 0x83480000 ; ret 0xeb10
0x00000000004565fd : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043ae6b : add eax, 0x8428d48 ; ret
0x00000000004260c2 : add eax, 0x8449 ; ret
0x000000000048570a : add eax, 0x89000001 ; ret 0x348
0x000000000044999d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449cfe : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449d1b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f56a : add eax, 0xc0310000 ; ret
0x000000000043aeed : add eax, 0xc428d48 ; ret
0x000000000043b9cd : add eax, 0xc478d48 ; ret
0x0000000000441232 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441257 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000004413a0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441439 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000041a167 : add eax, 0xf6410000 ; ret 0xf01
0x0000000000435503 : add eax, 0xf7f0ff3 ; ret
0x000000000047384f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000047897a : add eax, 0xfffffff8 ; ret
0x000000000043e175 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466691 : add eax, 1 ; ret
0x0000000000444a05 : add eax, 2 ; push rax ; call rbx
0x0000000000466688 : add eax, 2 ; ret
0x0000000000421508 : add eax, 3 ; ret
0x0000000000426dc7 : add eax, 4 ; ret
0x000000000044f569 : add eax, dword ptr [0] ; ret
0x0000000000470d18 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418d43 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041780b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000047126e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x000000000044dc28 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046fc53 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004232fd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a781 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423321 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000445656 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049e744 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49e757 ; ret
0x000000000043ff9c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000044177d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004417d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441854 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441954 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000421509 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000476913 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x476984 ; pop rbx ; ret
0x000000000043e1d3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e49c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000442835 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000418312 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000470908 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000445341 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000044529b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444c4a : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e3f0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e410 : add eax, dword ptr [rax] ; ret
0x00000000004c5ec3 : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bfbf2 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047eac1 : add eax, dword ptr [rbx] ; call rax
0x00000000004c6c71 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000411284 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047cd4d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c7bcb : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bf61a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046aeda : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471b25 : add eax, dword ptr [rdi] ; call rax
0x0000000000478724 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475e79 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c6cd1 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6d31 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf36a : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c44e2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bfafa : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c2462 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x000000000047168b : add eax, dword ptr [rsp] ; call rax
0x000000000043e4b8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000499fbe : add eax, eax ; jmp r8
0x000000000049b4e6 : add eax, eax ; jmp rax
0x000000000045a3f8 : add eax, eax ; ret
0x0000000000425ce6 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000049b18e : add eax, ebp ; jmp rax
0x00000000004055b6 : add eax, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x4055c4 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000416553 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000425dea : add eax, ecx ; ret
0x0000000000425de7 : add eax, edi ; add rax, rcx ; ret
0x00000000004c2821 : add eax, edi ; call rsp
0x00000000004a323d : add eax, edi ; jmp qword ptr [rax]
0x0000000000426024 : add eax, edi ; ret
0x00000000004239f6 : add eax, edx ; sub rax, rdi ; ret
0x000000000049ba6e : add eax, esi ; jmp rax
0x0000000000467207 : add eax, esi ; ret
0x000000000045a3f7 : add eax, r8d ; ret
0x0000000000457938 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b78d : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c934a : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000047bd3d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004c934c : add ebp, esi ; add al, byte ptr [rax] ; ret
0x0000000000471687 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000048866a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c6cc2 : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471323 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bfc08 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478a11 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000048548a : add ebx, ebp ; ret 0x8d48
0x00000000004356c3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x0000000000426784 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x426779 ; ret
0x0000000000439685 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000418179 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004499bf : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004642c7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000046dafb : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b48e : add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439689 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047dd08 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d41e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418c68 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000004471e5 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040dffd : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e0d7 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000411a07 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x0000000000489fe3 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435432 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c6c62 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b304 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e35f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000439686 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000004c1e52 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c5340 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b71d : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x0000000000451fcc : add ecx, ebp ; ret
0x000000000042fb8e : add ecx, ebx ; jmp r9
0x000000000042e532 : add ecx, ebx ; jmp rcx
0x000000000049a1e6 : add ecx, esi ; jmp rcx
0x000000000049ed1f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000004a3249 : add edi, eax ; jmp rax
0x000000000042fb8b : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004be849 : add edi, esi ; call rdi
0x000000000047266c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c92bb : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x0000000000476335 : add edx, eax ; jmp 0x47634a
0x00000000004795a2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452993 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x0000000000444250 : add edx, ebx ; loopne 0x4442b4 ; pop rbp ; ret
0x00000000004bf4da : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c255a : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d417 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c9393 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004355e3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f2ac : add esi, ebx ; ret
0x000000000043e4a0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042fb88 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004631f8 : add esi, esi ; ret 0x7420
0x0000000000487bc7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fcf1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e5f9 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420457 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e5e1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473592 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x0000000000473574 : add esp, 0x140 ; pop rbx ; ret
0x0000000000476afd : add esp, 0x18 ; jmp r11
0x000000000043fded : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416cd1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410b77 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f280 : add esp, 0x18 ; ret
0x0000000000444230 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452213 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487f9c : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445771 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414fdf : add esp, 0x20 ; pop rbx ; ret
0x000000000047b029 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040db58 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041483e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487ef1 : add esp, 0x28 ; ret
0x0000000000476e6c : add esp, 0x30 ; jmp r11
0x000000000046ad22 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478609 : add esp, 0x30 ; pop rbx ; ret
0x0000000000476f7e : add esp, 0x30 ; ret
0x000000000043ec40 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478696 : add esp, 0x38 ; ret
0x000000000047851c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046ac92 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478728 : add esp, 0x48 ; ret
0x00000000004784aa : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000488044 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046684c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f530 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478812 : add esp, 0x68 ; ret
0x000000000044264d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f851 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046a9ab : add esp, 0x80 ; pop rbx ; ret
0x00000000004143f7 : add esp, 0x80 ; ret
0x000000000041ff16 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046aaa9 : add esp, 0x90 ; pop rbx ; ret
0x000000000046aac7 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000412f3d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040114f : add esp, 0x98 ; ret
0x000000000044f8c9 : add esp, 0xd0 ; ret
0x000000000040f3c8 : add esp, 0xd8 ; ret
0x00000000004783e5 : add esp, 8 ; jmp rax
0x0000000000410f23 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041ee18 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fd4a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417878 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb80 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f3f3 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487f27 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dd7e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004059a1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401823 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412b88 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000423849 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473e61 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004c6892 : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c7b11 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c7da9 : add esp, edi ; jmp qword ptr [rax]
0x0000000000446cad : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042372a : add qword ptr [rax], rax ; ret
0x000000000041bd24 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c7afa : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000042666c : add r11b, sil ; ret
0x00000000004356c2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435652 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355e2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f77d : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495c90 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000499fbd : add r8, rax ; jmp r8
0x00000000004654cd : add r8b, bpl ; in al, dx ; ret 0xfff9
0x000000000046555d : add r8b, bpl ; pop rsp ; ret 0xfff9
0x0000000000474f36 : add r8b, bpl ; ret
0x000000000048eab7 : add r8b, bpl ; ret 0xf72c
0x000000000047dab7 : add r8b, bpl ; ret 0xf83c
0x000000000042fb8d : add r9, r11 ; jmp r9
0x0000000000449d03 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449d20 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000497442 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000478979 : add rax, -8 ; ret
0x000000000043e174 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466690 : add rax, 1 ; ret
0x0000000000466687 : add rax, 2 ; ret
0x00000000004666a0 : add rax, 3 ; ret
0x000000000044f568 : add rax, qword ptr [0] ; ret
0x000000000047168a : add rax, qword ptr [r12] ; call rax
0x0000000000471b24 : add rax, qword ptr [r15] ; call rax
0x000000000047eac0 : add rax, qword ptr [rbx] ; call rax
0x0000000000478723 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475e78 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f567 : add rax, qword ptr fs:[0] ; ret
0x000000000049ba6d : add rax, r14 ; jmp rax
0x000000000049b4e5 : add rax, r8 ; jmp rax
0x000000000049b18d : add rax, rbp ; jmp rax
0x0000000000425de9 : add rax, rcx ; ret
0x0000000000425de6 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426023 : add rax, rdi ; ret
0x00000000004239f5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047bd3c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x0000000000471686 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e531 : add rcx, r11 ; jmp rcx
0x000000000049a1e5 : add rcx, r14 ; jmp rcx
0x000000000049ed1e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042fb8a : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000047266b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452992 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004795a1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000476334 : add rdx, rax ; jmp 0x47634b
0x0000000000487bc6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fcf0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e5f8 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e5e0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473573 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000476afc : add rsp, 0x18 ; jmp r11
0x000000000043fdec : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410b76 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f27f : add rsp, 0x18 ; ret
0x000000000044422f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452212 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487f9b : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445770 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414fde : add rsp, 0x20 ; pop rbx ; ret
0x000000000047b028 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041483d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487ef0 : add rsp, 0x28 ; ret
0x0000000000476e6b : add rsp, 0x30 ; jmp r11
0x000000000046ad21 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478608 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000476f7d : add rsp, 0x30 ; ret
0x000000000043ec3f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478695 : add rsp, 0x38 ; ret
0x000000000047851b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046ac91 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478727 : add rsp, 0x48 ; ret
0x00000000004784a9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000488043 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046684b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f52f : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478811 : add rsp, 0x68 ; ret
0x000000000044264c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046a9aa : add rsp, 0x80 ; pop rbx ; ret
0x00000000004143f6 : add rsp, 0x80 ; ret
0x000000000046aaa8 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000412f3c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040114e : add rsp, 0x98 ; ret
0x000000000044f8c8 : add rsp, 0xd0 ; ret
0x000000000040f3c7 : add rsp, 0xd8 ; ret
0x00000000004783e4 : add rsp, 8 ; jmp rax
0x0000000000410f22 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041ee17 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fd49 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417877 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb7f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f3f2 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487f26 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dd7d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401822 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412b87 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000423848 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c25e : add sil, sil ; ret 0x7404
0x000000000048842a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a36dc : and ah, ah ; clc ; call qword ptr [rax]
0x0000000000488428 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000488634 : and al, 0 ; ret
0x000000000043f55d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c3e8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000447053 : and al, 0x10 ; call r12
0x000000000041b59d : and al, 0x10 ; call rax
0x0000000000464ea9 : and al, 0x10 ; call rbx
0x0000000000400bf5 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440531 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447347 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447caa : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000487eeb : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049ca95 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x00000000004504c6 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000004654f5 : and al, 0x14 ; add al, ch ; ret
0x0000000000418bd6 : and al, 0x14 ; pop r12 ; ret
0x000000000041dd7b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044b89c : and al, 0x18 ; call r14
0x0000000000400c52 : and al, 0x18 ; call rax
0x0000000000464ea4 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000041b598 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444978 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000448090 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b0f0 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000044704e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000464f82 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418ba2 : and al, 0x1c ; je 0x418bb3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418ba1 : and al, 0x1c ; je 0x418bb4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044734c : and al, 0x20 ; call rax
0x0000000000466a07 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000450ae3 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004b9584 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000478690 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489adb : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004477c7 : and al, 0x28 ; call r12
0x00000000004484f2 : and al, 0x28 ; call r14
0x0000000000446e54 : and al, 0x28 ; call r15
0x0000000000447caf : and al, 0x28 ; call rax
0x000000000044787b : and al, 0x28 ; call rbx
0x0000000000466d22 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466aaf : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041ea93 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048fb6f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044b0dc : and al, 0x30 ; call r14
0x000000000047353f : and al, 0x30 ; call r9
0x00000000004496fa : and al, 0x30 ; call rbx
0x000000000048800f : and al, 0x30 ; je 0x488023 ; mov edi, 0x6cb140 ; call rax
0x000000000040e099 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000004668ed : and al, 0x30 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000449b3a : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446ef1 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447876 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000048217f : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048cd12 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000047883e : and al, 0x38 ; add rsp, 0x68 ; ret
0x000000000047353a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004496f5 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000478519 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004784a7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000448a7a : and al, 0x40 ; call r15
0x0000000000466a0c : and al, 0x40 ; call rbx
0x0000000000448e21 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000476afb : and al, 0x48 ; add esp, 0x18 ; jmp r11
0x000000000043fdeb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f27e : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000476e6a : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x0000000000476f7c : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000041e0a3 : and al, 0x48 ; call rax
0x000000000046f9a4 : and al, 0x48 ; lea edi, dword ptr [rax + 0x6cb1e0] ; call rdx
0x00000000004477c2 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446e4f : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448a75 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000467112 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049df1c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x0000000000403bdf : and al, 0x4c ; mov esi, ebp ; mov rdi, r15 ; call 0x43fec9
0x000000000044b897 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c8bd : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418bd1 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466c20 : and al, 0x60 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e3ab : and al, 0x68 ; call rax
0x000000000041f68b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004c55e4 : and al, 0x72 ; add byte ptr [rax], al ; cwde ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004115ae : and al, 0x74 ; ret 0x8b4c
0x0000000000472bda : and al, 0x75 ; ret
0x000000000047b8ae : and al, 0x78 ; call r12
0x000000000047bd7d : and al, 0x78 ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x00000000004484ed : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b0d7 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b6cf : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c554 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000446fd1 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041bda6 : and al, 0x89 ; ret 0xb48b
0x000000000041bd22 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000043f4b5 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000049bf7b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004786bf : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400bf9 : and al, 0xc ; call r12
0x0000000000400c4d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047bb2a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040884b : and al, 0xe8 ; call rbx
0x00000000004099a4 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004099ba : and al, 0xe8 ; nop ; ret 0xffff
0x000000000040995b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x00000000004099dc : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004099f2 : and al, 0xe8 ; pop rax ; ret 0xffff
0x00000000004098fc : and al, 0xe8 ; ret
0x0000000000409a03 : and al, 0xe8 ; ret 0xffff
0x00000000004098b3 : and al, 0xe8 ; xchg eax, edi ; ret
0x0000000000491958 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049ce75 : and al, 0xf ; ret 0x8348
0x000000000041c247 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x000000000042c366 : and al, 0xf8 ; jne 0x42c242 ; ret
0x0000000000491911 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491917 : and al, 0xf8 ; ret
0x00000000004918cb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004918d1 : and al, 0xfc ; ret
0x000000000044f637 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f63b : and al, 0xfe ; ret
0x0000000000469fc6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044fa4c : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000043e5f6 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047aba2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000440448 : and al, 8 ; call rbx
0x0000000000487f69 : and al, 8 ; je 0x487f7d ; mov edi, 0x6cb140 ; call rax
0x000000000043f5c1 : and al, 8 ; jmp 0x43f538
0x0000000000478250 : and al, 8 ; mov edi, 0x6cb140 ; call rax
0x000000000041b654 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040e256 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004a36f4 : and al, ah ; clc ; push rax ; loope 0x4a36fa ; call rax
0x00000000004a0948 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410c16 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000049ecb3 : and al, byte ptr [rax] ; jne 0x49ec9d ; pop rbx ; ret
0x000000000049e074 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004b5a01 : and al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4722
0x00000000004237fa : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004a36c4 : and al, ch ; clc ; jmp qword ptr [rax]
0x000000000045d35e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a3ccd : and bh, cl ; call rax
0x0000000000474793 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000040dbff : and bl, dh ; ret
0x000000000046743e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000414c04 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000047494b : and byte ptr [rax + 0x25], ch ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000049e914 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000419ea9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004527ee : and byte ptr [rax + 1], cl ; ret
0x00000000004bdcfc : and byte ptr [rax - 0x6e5f0003], dl ; std ; jmp qword ptr [rax]
0x0000000000466a08 : and byte ptr [rax - 0x73], cl ; je 0x466a37 ; call rbx
0x0000000000476e96 : and byte ptr [rax - 0x75], cl ; jg 0x476eca ; call r11
0x0000000000477486 : and byte ptr [rax - 0x75], cl ; jg 0x4774ba ; call r11
0x0000000000477822 : and byte ptr [rax - 0x75], cl ; jg 0x477856 ; call r11
0x000000000041bab3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000040ed03 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469954 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445da4 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000044ef44 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44ef58 ; call rax
0x000000000049d0eb : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000445c3e : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000412402 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004c3580 : and byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000043faaf : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e483 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bdcf4 : and byte ptr [rbp - 0x715f0003], cl ; std ; jmp qword ptr [rax]
0x00000000004c7bce : and byte ptr [rbx + 0x1890304], al ; ret
0x0000000000405ba8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046743f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000445773 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf61d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bfbf5 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000004604be : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000455520 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x00000000004bdd04 : and byte ptr [rbx - 0x6b5f0003], dl ; std ; jmp qword ptr [rax]
0x0000000000462e49 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000049aac3 : and byte ptr [rbx], ah ; add byte ptr [rax], cl ; ret
0x00000000004a3be8 : and byte ptr [rbx], dl ; stc ; jmp qword ptr [rax + 0x20fff912]
0x0000000000414c05 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c4416 : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450ae4 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000452215 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000004a3be0 : and byte ptr [rcx + rdi*8], dl ; jmp qword ptr [rax + 0x20fff913]
0x0000000000491955 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000445d2c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004a3bf8 : and byte ptr [rcx], dl ; stc ; jmp qword ptr [rax + 0x20fff910]
0x00000000004bdce4 : and byte ptr [rdi - 0x775f0003], al ; std ; jmp qword ptr [rax]
0x0000000000445d19 : and byte ptr [rdi], cl ; test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043bcd0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004bdcec : and byte ptr [rdx - 0x745f0003], cl ; std ; jmp qword ptr [rax]
0x00000000004a3bf0 : and byte ptr [rdx], dl ; stc ; jmp qword ptr [rax + 0x20fff911]
0x000000000042e5ca : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c44e5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bdd0c : and byte ptr [rsi - 0x685f0003], dl ; std ; jmp qword ptr [rax]
0x00000000004a39d4 : and byte ptr [rsi], dl ; stc ; jmp qword ptr [rax + 0x10fff915]
0x0000000000466682 : and ch, 0xf ; je 0x4666a9 ; add rax, 2 ; ret
0x00000000004a365c : and ch, ah ; clc ; inc dword ptr [rax] ; out -8, eax ; jmp rax
0x000000000046666d : and cl, 0xf ; je 0x466695 ; ret
0x000000000041c59e : and cl, bpl ; ret 0xfff9
0x000000000047ea03 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004261ad : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041c59f : and cl, ch ; ret 0xfff9
0x0000000000426797 : and dh, dh ; ret 0x7504
0x000000000045d35d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a36c8 : and dl, ch ; clc ; jmp qword ptr [rax]
0x000000000043f43b : and dword ptr [rax], 0x4f ; add byte ptr [rax], al ; ret
0x00000000004c04f5 : and dword ptr [rax], eax ; add al, bl ; movsxd rsi, ebp ; jmp qword ptr [rax]
0x0000000000457799 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bb0a2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415b6c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040fbb9 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000048ed1c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004b8159 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004bb0a1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f56b : and eax, 0 ; ret
0x000000000041687a : and eax, 0x1002b5d ; ret
0x000000000049cc0a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x000000000047c946 : and eax, 0x2d0 ; ret
0x000000000040ea11 : and eax, 0x30 ; call rax
0x000000000040e9c9 : and eax, 0x30 ; call rdx
0x0000000000476843 : and eax, 0x38754000 ; ret
0x000000000043e3ed : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e40d : and eax, 0x3fc00 ; ret
0x000000000043e3cc : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004b59f9 : and eax, 0x47 ; add byte ptr [rax], al ; ret 0x4722
0x00000000004711c0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043f37b : and eax, 0x4f ; add byte ptr [rax], al ; ret
0x000000000046b8ac : and eax, 0x5034800 ; ret
0x000000000047404f : and eax, 0x6894800 ; ret
0x000000000043e440 : and eax, 0x7ff80000 ; ret
0x0000000000474933 : and eax, 0x89485300 ; ret
0x000000000041aea6 : and eax, 0x950f4100 ; ret
0x00000000004428b7 : and eax, 0xc ; cmp eax, 4 ; je 0x4428c8 ; ret
0x0000000000400d0f : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000444366 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000478a0c : and eax, 2 ; sub eax, 1 ; ret
0x0000000000415b6d : and ebp, edi ; pop rbx ; ret
0x0000000000442852 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x442865 ; ret
0x000000000045c8a9 : and ebx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x000000000042fb45 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f278 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000419f2b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041fd4c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041691c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000041ade5 : and ecx, dword ptr [rdx] ; call 0x417035
0x00000000004c57c1 : and edx, edi ; jmp rdi
0x000000000049192e : and esi, 0xe0837fff ; jg 0x491947 ; ret 0x5488
0x000000000043fa59 : and esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000041ade4 : and rcx, qword ptr [r10] ; call 0x417036
0x000000000042cc3a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426020 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426030 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426040 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000426010 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000425f5f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce33 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000423896 : bsf eax, edx ; ret
0x00000000004239f2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042cf50 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004238e2 : bsf rax, rdx ; ret
0x0000000000465857 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465adb : bsr eax, esi ; add rax, rdi ; ret
0x00000000004659e9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004658e5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000465856 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465ada : bsr rax, rsi ; add rax, rdi ; ret
0x00000000004659e8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004658e4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047bc37 : call 0x1009f45e
0x000000000047c59a : call 0x1009fdc1
0x00000000004be6a8 : call 0x134bdae8
0x000000000044b1c8 : call 0x2073518
0x000000000042c574 : call 0x24b750cd
0x00000000004654cf : call 0x4017c2
0x000000000040995c : call 0x405c52
0x000000000044b26e : call 0x40755e
0x000000000041ade8 : call 0x417032
0x000000000041bdf1 : call 0x418042
0x0000000000420491 : call 0x41c722
0x000000000046192c : call 0x41dc22
0x0000000000441ce9 : call 0x41dfc2
0x0000000000408634 : call 0x41dfc6
0x0000000000481f19 : call 0x41e182
0x000000000045c8a8 : call 0x4267d7
0x000000000040ffbf : call 0x42c232
0x0000000000400721 : call 0x43e356
0x0000000000472704 : call 0x43e9e2
0x0000000000473bf0 : call 0x43fe02
0x0000000000403be6 : call 0x43fec2
0x000000000049f5f9 : call 0x441b58
0x0000000000456592 : call 0x4427a2
0x0000000000458616 : call 0x4636f6
0x000000000048cdcc : call 0x479092
0x0000000000434c4a : call 0x4fc25c48
0x0000000000434c49 : call 0x4fc25c49
0x000000000047b79b : call 0xffffffff8a09e0c2
0x000000000047b902 : call 0xffffffff8a09e229
0x000000000047baef : call 0xffffffff8a09e416
0x000000000047c11b : call 0xffffffff8a09ea42
0x000000000047c278 : call 0xffffffff8a09eb9f
0x000000000047c446 : call 0xffffffff8a09ed6d
0x00000000004b8bc3 : call 0xffffffffaf0e2a39
0x000000000047b41a : call 0xffffffffc270fc62
0x000000000041bec8 : call 0xffffffffc27b06d9
0x000000000045975c : call 0xffffffffc27edf66
0x000000000041c788 : call 0xffffffffc2cb0fa1
0x00000000004691bd : call 0xffffffffc37fdaca
0x0000000000485dea : call 0xffffffffc381a9f4
0x0000000000466aec : call 0xffffffffc3a2ac52
0x000000000044fa45 : call 0xffffffffc3f40996
0x0000000000467aec : call 0xffffffffc40dc325
0x0000000000426d37 : call 0xffffffffc412f688
0x0000000000423807 : call 0xffffffffc43ac158
0x00000000004c3768 : call 0xffffffffc44c2ffd
0x0000000000452995 : call qword ptr [r10 + rax*8]
0x00000000004a39f7 : call qword ptr [rax + 0x10fff911]
0x00000000004a39ef : call qword ptr [rax + 0x10fff912]
0x00000000004a39e7 : call qword ptr [rax + 0x10fff913]
0x00000000004a39df : call qword ptr [rax + 0x10fff914]
0x00000000004a35bf : call qword ptr [rax + 0x20fff8c3]
0x00000000004a37c7 : call qword ptr [rax + 0x20fff919]
0x00000000004a399f : call qword ptr [rax + 0x20fff91d]
0x0000000000410457 : call qword ptr [rax + 0x80]
0x00000000004bdd37 : call qword ptr [rax - 0x1f0002b3]
0x00000000004a3747 : call qword ptr [rax - 0x1f000726]
0x00000000004a375b : call qword ptr [rax - 0x1f000734]
0x00000000004a3383 : call qword ptr [rax - 0x1f000775]
0x00000000004a322b : call qword ptr [rax]
0x0000000000400b18 : call qword ptr [rbx + 0x10]
0x00000000004015a8 : call qword ptr [rbx*8 + 0x6c9ed8]
0x000000000047e3a8 : call qword ptr [rbx]
0x00000000004a34fb : call qword ptr [rcx - 0x3d]
0x000000000049a6de : call qword ptr [rcx]
0x00000000004a354f : call qword ptr [rdi]
0x00000000004a3873 : call qword ptr [rdx + 0x22fff91b]
0x0000000000452996 : call qword ptr [rdx + rax*8]
0x00000000004bddef : call qword ptr [rdx - 0x2d00023a]
0x00000000004a3853 : call qword ptr [rdx]
0x00000000004a351f : call qword ptr [rsi + 0x16fff8bf]
0x00000000004a3527 : call qword ptr [rsi + 0x16fff8c0]
0x00000000004a352f : call qword ptr [rsi + 0x16fff8c1]
0x00000000004a354b : call qword ptr [rsi + 0x17fff8c5]
0x00000000004a351b : call qword ptr [rsi - 0x69000742]
0x00000000004928d2 : call qword ptr [rsi]
0x0000000000476e9c : call r11
0x0000000000400bfb : call r12
0x000000000040e020 : call r14
0x0000000000403581 : call r15
0x00000000004627fb : call r8
0x0000000000473541 : call r9
0x00000000004a3317 : call rax
0x0000000000402c2d : call rbx
0x000000000040554a : call rcx
0x0000000000403582 : call rdi
0x000000000040e9ce : call rdx
0x000000000040e021 : call rsi
0x0000000000400bfc : call rsp
0x000000000044f104 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049aac2 : cdq ; and byte ptr [rbx], ah ; add byte ptr [rax], cl ; ret
0x00000000004ba900 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c6fd1 : cdq ; std ; call rcx
0x0000000000485c8e : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041bda3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000458e8a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045dc5d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000040d5bc : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e09c : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047cd4c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x0000000000425de8 : clc ; add rax, rcx ; ret
0x00000000004a35be : clc ; call qword ptr [rax + 0x20fff8c3]
0x00000000004a3746 : clc ; call qword ptr [rax - 0x1f000726]
0x00000000004a375a : clc ; call qword ptr [rax - 0x1f000734]
0x00000000004a3382 : clc ; call qword ptr [rax - 0x1f000775]
0x00000000004a331e : clc ; call qword ptr [rax]
0x00000000004c4062 : clc ; call qword ptr [rbx]
0x00000000004a34fa : clc ; call qword ptr [rcx - 0x3d]
0x00000000004a3506 : clc ; call qword ptr [rcx]
0x00000000004a354e : clc ; call qword ptr [rdi]
0x00000000004c3972 : clc ; call qword ptr [rdx]
0x00000000004a351e : clc ; call qword ptr [rsi + 0x16fff8bf]
0x00000000004a3526 : clc ; call qword ptr [rsi + 0x16fff8c0]
0x00000000004a352e : clc ; call qword ptr [rsi + 0x16fff8c1]
0x00000000004a354a : clc ; call qword ptr [rsi + 0x17fff8c5]
0x00000000004a351a : clc ; call qword ptr [rsi - 0x69000742]
0x00000000004a3522 : clc ; call qword ptr [rsi]
0x00000000004a3316 : clc ; call rax
0x00000000004c2822 : clc ; call rsp
0x000000000042fae9 : clc ; cmp rcx, rax ; jne 0x42fb1b ; xor eax, eax ; ret
0x000000000042fae8 : clc ; cmp rcx, rax ; jne 0x42fb1c ; xor eax, eax ; ret
0x00000000004745a0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421290 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412536 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040171b : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a3576 : clc ; dec dword ptr [rbx + 0x1bfff8c2] ; ret
0x0000000000454fdb : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000456602 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047a80d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a35ea : clc ; inc dword ptr [rax + 0x10fff8ed] ; loopne 0x4a35f4 ; call rax
0x00000000004a362a : clc ; inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3626 : clc ; inc dword ptr [rax - 0x15] ; clc ; inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3656 : clc ; inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a36d6 : clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3742 : clc ; inc dword ptr [rax - 0x27] ; clc ; call qword ptr [rax - 0x1f000726]
0x00000000004a3766 : clc ; inc dword ptr [rax - 0x2f000730] ; sar eax, 1 ; jmp qword ptr [rax]
0x00000000004a334e : clc ; inc dword ptr [rax - 0x2f000786] ; jnp 0x4a3358 ; jmp qword ptr [rax]
0x00000000004a3756 : clc ; inc dword ptr [rax - 0x35] ; clc ; call qword ptr [rax - 0x1f000734]
0x00000000004a337e : clc ; inc dword ptr [rax - 0x76] ; clc ; call qword ptr [rax - 0x1f000775]
0x00000000004a35e6 : clc ; inc dword ptr [rax - 0x7f000715] ; in eax, dx ; clc ; call qword ptr [rax]
0x00000000004a3396 : clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3472 : clc ; inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004a365e : clc ; inc dword ptr [rax] ; out -8, eax ; jmp rax
0x00000000004a35ba : clc ; inc dword ptr [rax] ; ret
0x00000000004a3452 : clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x000000000044e3a9 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a3246 : clc ; inc eax ; add edi, eax ; jmp rax
0x00000000004a335e : clc ; inc eax ; jg 0x4a3360 ; call qword ptr [rax]
0x00000000004a346a : clc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rax
0x00000000004a34f6 : clc ; inc ecx ; ret 0xfff8
0x00000000004a34ba : clc ; inc edx ; mov esi, 0xbc60fff8 ; clc ; call qword ptr [rax]
0x00000000004a353e : clc ; inc esi ; ret
0x0000000000449b8e : clc ; jg 0x449b1d ; ret 0x5c77
0x00000000004a323e : clc ; jmp qword ptr [rax]
0x000000000047e2f8 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004c3dc2 : clc ; jmp qword ptr [rsi]
0x00000000004a374a : clc ; jmp rax
0x00000000004c3a02 : clc ; jmp rbx
0x00000000004a34d2 : clc ; jmp rcx
0x00000000004c2f52 : clc ; jmp rsp
0x000000000042c367 : clc ; jne 0x42c241 ; ret
0x00000000004a35ce : clc ; lcall ptr [rax] ; loopne 0x4a35d0 ; jmp rax
0x00000000004a357a : clc ; lcall ptr [rbx] ; ret
0x000000000049c5f0 : clc ; leave ; ret
0x00000000004b9562 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004315c7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431f37 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432137 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434947 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432337 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348b7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315e3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043582c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c688 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000491912 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a3342 : clc ; push qword ptr [rax + 0x50fff874] ; jbe 0x4a334c ; jmp qword ptr [rax]
0x00000000004a331a : clc ; push qword ptr [rax + 0x64] ; clc ; call qword ptr [rax]
0x00000000004a333a : clc ; push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x00000000004a338a : clc ; push qword ptr [rax + 0x79] ; clc ; jmp rax
0x00000000004a335a : clc ; push qword ptr [rax + 0x7e] ; clc ; inc eax ; jg 0x4a3364 ; call qword ptr [rax]
0x00000000004a36d2 : clc ; push qword ptr [rax - 0x20] ; clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a366e : clc ; push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a3678 ; call qword ptr [rax]
0x00000000004a36ee : clc ; push qword ptr [rax - 0x22] ; clc ; jmp qword ptr [rax]
0x00000000004a35b6 : clc ; push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3672 : clc ; push qword ptr [rax] ; loope 0x4a3674 ; call qword ptr [rax]
0x00000000004a363e : clc ; push qword ptr [rax] ; out -8, eax ; call qword ptr [rax]
0x00000000004a3332 : clc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x0000000000410c1a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415bc0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004429d1 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415b68 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004a34ee : clc ; push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x00000000004a3502 : clc ; push qword ptr [rcx - 0x3c] ; clc ; call qword ptr [rcx]
0x00000000004a34f2 : clc ; push qword ptr [rcx] ; ret 0xfff8
0x0000000000415045 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046aa8c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a353a : clc ; push qword ptr [rsi] ; ret
0x00000000004a3242 : clc ; push rax ; add bh, al ; inc eax ; add edi, eax ; jmp rax
0x00000000004a3392 : clc ; push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a367a : clc ; push rax ; in al, -8 ; call rax
0x00000000004a36f6 : clc ; push rax ; loope 0x4a36f8 ; call rax
0x00000000004a3692 : clc ; push rax ; loopne 0x4a3694 ; call rax
0x00000000004a34ca : clc ; push rax ; mov esi, 0xbc35fff8 ; clc ; jmp rcx
0x00000000004c5e98 : clc ; push rcx ; cli ; jmp rsp
0x0000000000416812 : clc ; ret
0x0000000000478f6a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004781dd : clc ; std ; jbe 0x4781ec ; ret
0x000000000043e3ef : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e40f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c8052 : cld ; call qword ptr [rax]
0x00000000004c806a : cld ; call qword ptr [rdx]
0x0000000000480bff : cld ; cmove rsi, r9 ; jmp 0x480bce
0x000000000047aab0 : cld ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000045c8ab : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004bedb1 : cld ; hlt ; call qword ptr [rbx]
0x000000000047131e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e49e : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3ce : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c57bc : cld ; jae 0x4c57c6 ; add al, dl ; and edx, edi ; jmp rdi
0x0000000000480637 : cld ; jmp 0x480604
0x00000000004c7daa : cld ; jmp qword ptr [rax]
0x0000000000431d52 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f55 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432155 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432355 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043583e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000432888 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431986 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b66 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b66 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ae6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d46 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a66 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317a6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434be6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004918cc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004c3cbc : cld ; pop rax ; add byte ptr [rax], al ; add dl, cl ; std ; call qword ptr [rbx]
0x00000000004c3dbc : cld ; pop rcx ; add byte ptr [rax], al ; loopne 0x4c3d81 ; clc ; jmp qword ptr [rsi]
0x00000000004267b8 : cld ; ret
0x00000000004a384c : cld ; sbb cl, bh ; jmp qword ptr [rdx + 0x12fff918]
0x00000000004b8a16 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bded8 : cld ; xlatb ; std ; call rsp
0x000000000041fd49 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041ff29 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x000000000041da7b : cli ; add byte ptr [rax - 0x418aff94], ch ; ret
0x000000000047c919 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000046739a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004895d3 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00000000004895fc : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000004105f8 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e13c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000044934f : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000004749b6 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475223 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043dc61 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043585c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b78c : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c6502 : cli ; call rdx
0x00000000004c5142 : cli ; call rsi
0x000000000043284b : cli ; jg 0x43285e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000435817 : cli ; jg 0x43582a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043dc21 : cli ; jg 0x43dc33 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dda6 : cli ; jg 0x43ddb8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c55ea : cli ; jmp qword ptr [rax]
0x00000000004c6afa : cli ; jmp qword ptr [rdx]
0x00000000004c57c2 : cli ; jmp rdi
0x00000000004c527a : cli ; jmp rdx
0x00000000004c67e2 : cli ; jmp rsi
0x00000000004c5e9a : cli ; jmp rsp
0x0000000000432158 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004261c8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047b276 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000489f88 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000446ac9 : cli ; pop rcx ; add byte ptr [rax - 0x7f], cl ; ret 0x59e0
0x00000000004bae81 : cli ; push 0x6e ; ja 0x4bae0e ; ret 0x48f
0x0000000000441bc2 : cli ; ret
0x00000000004b9925 : cli ; ret 0xac65
0x00000000004427db : cli ; setae al ; ret
0x0000000000423939 : cli ; test rdx, rdx ; je 0x423959 ; bsf rax, rdx ; ret
0x00000000004656e8 : cli ; test rdx, rdx ; je 0x465719 ; bsf rax, rdx ; ret
0x00000000004b856a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c934d : cmc ; add al, byte ptr [rax] ; ret
0x0000000000495ee8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443b2c : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041ddc0 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bf802 : cmc ; call qword ptr [rax]
0x00000000004c002a : cmc ; call qword ptr [rcx]
0x00000000004c0732 : cmc ; call qword ptr [rdx]
0x00000000004c064a : cmc ; call qword ptr [rsi]
0x00000000004c1022 : cmc ; call rdx
0x00000000004c04fa : cmc ; jmp qword ptr [rax]
0x00000000004bfe5a : cmc ; jmp qword ptr [rcx]
0x00000000004bf662 : cmc ; jmp qword ptr [rsi]
0x00000000004bb2a9 : cmc ; mov ch, 0xab ; ret
0x0000000000400966 : cmc ; mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000434aea : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319de : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043d1b3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b8157 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047aabd : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043d1b7 : cmc ; sub eax, edx ; ret
0x00000000004ba8e5 : cmc ; xlatb ; ret 0x4e27
0x000000000049c9f7 : cmova eax, edx ; ret
0x0000000000467201 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000417019 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417018 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f27b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000464e11 : cmove eax, ecx ; ret
0x000000000043f560 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000421293 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425d42 : cmove eax, edx ; ret
0x0000000000480c01 : cmove esi, ecx ; jmp 0x480bcc
0x0000000000464e10 : cmove r8, rcx ; ret
0x000000000043f27a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b160 : cmove rax, r9 ; ret
0x0000000000421292 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425d41 : cmove rax, rdx ; ret
0x0000000000480c00 : cmove rsi, r9 ; jmp 0x480bcd
0x0000000000414b5b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414b59 ; ret
0x0000000000463a0b : cmovg eax, ecx ; test rdx, rdx ; jne 0x463a09 ; ret
0x00000000004135f3 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421313 : cmovne eax, edx ; ret
0x0000000000421312 : cmovne rax, rdx ; ret
0x0000000000443ad3 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x00000000004565cd : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000446b9c : cmovs eax, edx ; ret
0x0000000000419d50 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049c928 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000480bfe : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480bcf
0x00000000004bedb0 : cmp ah, 0xf4 ; call qword ptr [rbx]
0x00000000004be6a9 : cmp ah, dh ; call qword ptr [rdx]
0x0000000000440491 : cmp al, 0x24 ; call rbx
0x000000000049df1b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000040e09d : cmp al, 0x33 ; call rax
0x00000000004b9560 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000045f77c : cmp al, 0x4b ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004c64fc : cmp al, 0x81 ; add byte ptr [rax], al ; push rax ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x0000000000441c80 : cmp al, 0xc3 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004883ea : cmp al, byte ptr [rdi + 0x24] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000043d676 : cmp al, byte ptr [rsi - 1] ; jne 0x43d69c ; xor eax, eax ; ret
0x0000000000426016 : cmp al, dh ; ret
0x0000000000426015 : cmp al, r14b ; ret
0x00000000004c8bd9 : cmp bh, ch ; call rcx
0x00000000004530d3 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004c7611 : cmp bl, bh ; jmp qword ptr [rdx]
0x0000000000487169 : cmp bl, ch ; ret 0x8148
0x000000000042ca73 : cmp bl, dh ; ret
0x000000000041029b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000040fb77 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401313 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x0000000000426b7f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426057 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000043fb77 : cmp byte ptr [rax - 0x75], cl ; jl 0x43fba8 ; or byte ptr [rax + 0x29], cl ; ret
0x0000000000440444 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041029c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000483177 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426046 : cmp byte ptr [rax], ah ; ret
0x0000000000415013 : cmp byte ptr [rax], al ; je 0x415024 ; ret
0x000000000049c1d5 : cmp byte ptr [rax], al ; je 0x49c24b ; add rsp, 0x18 ; ret
0x0000000000421310 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426036 : cmp byte ptr [rax], dl ; ret
0x0000000000426035 : cmp byte ptr [rax], r10b ; ret
0x0000000000426045 : cmp byte ptr [rax], r12b ; ret
0x000000000042130f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c290c : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c6ccd : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c6d2d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c6c6d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ec42 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000047353b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004614a9 : cmp byte ptr [rbx], cl ; jmp rax
0x00000000004648e7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000476e76 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000414fd8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042efbd : cmp byte ptr [rdi], dl ; ret
0x000000000042fad0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fab9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042faa2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e55e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3350 : cmp byte ptr [rdx - 8], 0xff ; sar byte ptr [rbx - 8], 1 ; jmp qword ptr [rax]
0x000000000046b15c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000449a03 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041a850 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481e5b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000046b15f : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x0000000000489696 : cmp cl, ch ; ret
0x000000000046b12e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b0ea ; xor eax, eax ; ret
0x000000000043585b : cmp dl, 1 ; jb 0x43586d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dc60 : cmp dl, 1 ; jb 0x43dc6e ; mov byte ptr [rdi], cl ; ret
0x000000000043ddda : cmp dl, 1 ; jb 0x43dde8 ; mov byte ptr [rdi], cl ; ret
0x00000000004648b8 : cmp dword ptr [rax + 0x30], 0 ; je 0x4648c6 ; ret
0x00000000004345fc : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046198d : cmp dword ptr [rbx], ecx ; jmp rax
0x000000000045094e : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000415011 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415026 ; ret
0x00000000004429c0 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000049c9f4 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000043f4b3 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047ae89 : cmp eax, 0x251b36 ; call rax
0x000000000047ad4c : cmp eax, 0x251c73 ; jmp rax
0x00000000004781dc : cmp eax, 0xfd ; jbe 0x4781ed ; ret
0x000000000047459f : cmp eax, 0xff ; cmove rax, rdx ; ret
0x0000000000415044 : cmp eax, 0xff ; je 0x415059 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b67 : cmp eax, 0xff ; je 0x415b78 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464aca : cmp eax, 0xff ; je 0x464adb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464b0e : cmp eax, 0xff ; je 0x464b1f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410c19 : cmp eax, 0xff ; jne 0x410c26 ; pop rbx ; ret
0x0000000000415bbf : cmp eax, 0xff ; jne 0x415bb0 ; pop rbx ; ret
0x00000000004429d0 : cmp eax, 0xff ; jne 0x4429d0 ; xor eax, eax ; leave ; ret
0x000000000040dbf9 : cmp eax, 0xfffff000 ; ja 0x40dc28 ; ret
0x000000000043f2a6 : cmp eax, 0xfffff000 ; ja 0x43f2b8 ; ret
0x000000000043f2f5 : cmp eax, 0xfffff000 ; ja 0x43f308 ; ret
0x000000000043f484 : cmp eax, 0xfffff000 ; ja 0x43f4c8 ; ret
0x000000000044f961 : cmp eax, 0xfffff000 ; ja 0x44f978 ; ret
0x000000000046a7d8 : cmp eax, 0xfffff000 ; ja 0x46a7f0 ; pop rbx ; ret
0x000000000046ab66 : cmp eax, 0xfffff000 ; ja 0x46ab78 ; ret
0x000000000046abbb : cmp eax, 0xfffff000 ; ja 0x46abd0 ; ret
0x000000000043e4eb : cmp eax, 2 ; je 0x43e4ff ; xor eax, eax ; ret
0x00000000004428ba : cmp eax, 4 ; je 0x4428c5 ; ret
0x0000000000413045 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413058 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441231 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000004745e8 : cmp eax, dword ptr [rsi + rdx] ; jae 0x474598 ; xor eax, eax ; ret
0x0000000000416919 : cmp eax, ecx ; jae 0x416947 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d693 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004783b4 : cmp eax, esi ; je 0x4783c4 ; ret
0x0000000000442856 : cmp ebx, 0xa ; je 0x442861 ; ret
0x000000000044419e : cmp ebx, eax ; setne dl ; jmp 0x44418a
0x0000000000471681 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000046d5ee : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447c49 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000467200 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000464e0e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042faeb : cmp ecx, eax ; jne 0x42fb19 ; xor eax, eax ; ret
0x0000000000473ec6 : cmp ecx, edx ; jne 0x473ea5 ; ret
0x00000000004c2fe1 : cmp edi, eax ; call qword ptr [rax]
0x000000000045a3e5 : cmp edi, ecx ; ja 0x45a3d0 ; mov eax, r8d ; ret
0x000000000046ad6e : cmp edi, edx ; ja 0x46ad9d ; ret
0x000000000047c918 : cmp edx, 0 ; mov eax, edx ; jle 0x47c930 ; ret
0x000000000041da7a : cmp edx, 0x6ca800 ; jne 0x41da49 ; ret
0x0000000000473ed8 : cmp edx, eax ; jne 0x473e82 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000426788 : cmp edx, ecx ; jne 0x426775 ; ret
0x00000000004427da : cmp edx, edi ; setae al ; ret
0x0000000000466e96 : cmp edx, esi ; je 0x466ea7 ; test edx, edx ; jne 0x466e99 ; ret
0x0000000000416959 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x000000000044d415 : cmp esi, 3 ; je 0x44d426 ; pop rbx ; ret
0x00000000004ba8e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464b6a : cmp esi, ecx ; jb 0x464b67 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415bfa : cmp esi, ecx ; jne 0x415bf7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004648b7 : cmp qword ptr [rax + 0x30], 0 ; je 0x4648c7 ; ret
0x0000000000415010 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415027 ; ret
0x000000000049c9f3 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000042ca72 : cmp r11b, r14b ; ret
0x0000000000442855 : cmp r11d, 0xa ; je 0x442862 ; ret
0x0000000000480bfd : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480bd0
0x00000000004745e7 : cmp r8, qword ptr [rsi + rdx] ; jae 0x474599 ; xor eax, eax ; ret
0x000000000040dbf8 : cmp rax, -0x1000 ; ja 0x40dc29 ; ret
0x000000000043f2a5 : cmp rax, -0x1000 ; ja 0x43f2b9 ; ret
0x000000000043f2f4 : cmp rax, -0x1000 ; ja 0x43f309 ; ret
0x000000000043f483 : cmp rax, -0x1000 ; ja 0x43f4c9 ; ret
0x000000000044f960 : cmp rax, -0x1000 ; ja 0x44f979 ; ret
0x000000000046a7d7 : cmp rax, -0x1000 ; ja 0x46a7f1 ; pop rbx ; ret
0x000000000046ab65 : cmp rax, -0x1000 ; ja 0x46ab79 ; ret
0x000000000046abba : cmp rax, -0x1000 ; ja 0x46abd1 ; ret
0x00000000004781db : cmp rax, 0xfd ; jbe 0x4781ee ; ret
0x000000000047459e : cmp rax, 0xff ; cmove rax, rdx ; ret
0x0000000000413044 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413059 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416918 : cmp rax, rcx ; jae 0x416948 ; movzx eax, byte ptr [rax] ; ret
0x00000000004783b3 : cmp rax, rsi ; je 0x4783c5 ; ret
0x0000000000464e0d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042faea : cmp rcx, rax ; jne 0x42fb1a ; xor eax, eax ; ret
0x0000000000473ec5 : cmp rcx, rdx ; jne 0x473ea6 ; ret
0x000000000046ad6d : cmp rdi, rdx ; ja 0x46ad9e ; ret
0x0000000000473ed7 : cmp rdx, r8 ; jne 0x473e83 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000426787 : cmp rdx, rcx ; jne 0x426776 ; ret
0x0000000000426786 : cmp rdx, rcx ; jne 0x426777 ; ret
0x00000000004427d9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464b69 : cmp rsi, rcx ; jb 0x464b68 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415bf9 : cmp rsi, rcx ; jne 0x415bf8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004964e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004967e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004976e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c726 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425af5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004973e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f569 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x000000000042a096 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004970e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496de7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3538 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff8
0x00000000004099a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000047aab1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004a3475 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x0000000000442015 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov edi, 0x8b48fffd ; jge 0x442025 ; call rbx
0x00000000004743f0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar eax, -1 ; xor eax, eax ; ret
0x00000000004879d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000412f3f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b4e4 : cwde ; add rax, r8 ; jmp rax
0x0000000000414d6c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004c55e8 : cwde ; sbb dl, bh ; jmp qword ptr [rax]
0x0000000000439391 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041b7a6 : dec byte ptr [r8 - 0x75] ; ret
0x0000000000439392 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000479fa6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041b824 : dec byte ptr [rax - 0x73] ; ret
0x000000000045cfbc : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041b7a7 : dec byte ptr [rax - 0x75] ; ret
0x000000000046559d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e25a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e4fd : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000483053 : dec dword ptr [r8 + 0x39] ; ret
0x00000000004781d9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x4781f0 ; ret
0x000000000041afdc : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x00000000004105b9 : dec dword ptr [rax + 0x29] ; ret
0x00000000004394d2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473ad1 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e626 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041913d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d7bd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00000000004187f5 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480d24 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485b1d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004707c5 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x000000000047472a : dec dword ptr [rax + 0x63] ; ret
0x00000000004623db : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462b2f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465ad9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000004745a1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421291 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004594ee : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412537 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000041061c : dec dword ptr [rax + 1] ; ret
0x000000000047da67 : dec dword ptr [rax + 1] ; ret 0x3948
0x000000000045d576 : dec dword ptr [rax - 0x39] ; ret
0x000000000045c8ac : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004117a7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000480c8e : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043ecac : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000046962e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474795 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000410298 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481e58 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004401cd : dec dword ptr [rax - 0x75] ; jge 0x4401d7 ; call rbx
0x0000000000440480 : dec dword ptr [rax - 0x75] ; jge 0x44048a ; call rbx
0x0000000000442018 : dec dword ptr [rax - 0x75] ; jge 0x442022 ; call rbx
0x0000000000479297 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041ba9f : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000414021 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x000000000047863c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483e92 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000488667 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004268f8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000004a05f5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf7d9
0x000000000049ed1a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040171c : dec dword ptr [rax - 0x77] ; ret
0x000000000046ad5e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000483edf : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041dd61 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044f7e2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e5ea : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000466416 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000483769 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000455217 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046de30 : dec dword ptr [rax - 0x77] ; ret 0x8be9
0x000000000045fdb6 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000048279d : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042120e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b323 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402b48 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x00000000004785a1 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004879d8 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485c8b : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004781da : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x4781ef ; ret
0x0000000000453c91 : dec dword ptr [rax - 0x7d] ; jge 0x453cce ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040410c : dec dword ptr [rax - 0x7d] ; ret
0x00000000004190ef : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448b72 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470bcf : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470bbd : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000456ff4 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a136 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000470c5b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x0000000000485682 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000004530d6 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000434600 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046c980 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000047e4fe : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b559 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x000000000044068e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000004a3577 : dec dword ptr [rbx + 0x1bfff8c2] ; ret
0x000000000041b3df : dec dword ptr [rbx + 0x2af41e15] ; add dh, dh ; ret 0xf02
0x00000000004786bc : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000484526 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x00000000004554d4 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046db71 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004550e3 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046c9b2 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000455061 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000004722fa : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049d58c : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000469606 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045abec : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x0000000000452d39 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000480d9f : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000440005 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044048e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440098 : dec dword ptr [rcx - 0x75] ; jge 0x4400a2 ; call rbx
0x00000000004401bf : dec dword ptr [rcx - 0x75] ; jge 0x4401c9 ; call rbx
0x0000000000440302 : dec dword ptr [rcx - 0x75] ; jge 0x44030c ; call rbx
0x0000000000440472 : dec dword ptr [rcx - 0x75] ; jge 0x44047c ; call rbx
0x0000000000441c90 : dec dword ptr [rcx - 0x75] ; jge 0x441c9a ; call rbx
0x0000000000441db8 : dec dword ptr [rcx - 0x75] ; jge 0x441dc2 ; call rbx
0x0000000000441efb : dec dword ptr [rcx - 0x75] ; jge 0x441f05 ; call rbx
0x0000000000441ffc : dec dword ptr [rcx - 0x75] ; jge 0x442006 ; call rbx
0x000000000047cd0c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453cd3 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000446018 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044e877 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x0000000000456303 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041afdd : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485de7 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381a9f7
0x000000000043f405 : dec dword ptr [rdi] ; adc dword ptr [rdi + rcx*2], 0 ; ret
0x000000000043f439 : dec dword ptr [rdi] ; and dword ptr [rax], 0x4f ; add byte ptr [rax], al ; ret
0x000000000043f379 : dec dword ptr [rdi] ; and eax, 0x4f ; add byte ptr [rax], al ; ret
0x0000000000484206 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x0000000000486abf : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x00000000004135f2 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000044278c : dec dword ptr [rdi] ; or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000446b9b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000044276f : dec dword ptr [rdi] ; sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004106d1 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000043d520 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047085c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000041695b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004859df : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a80e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459b36 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043eb9d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000047a32d : dec ecx ; ret
0x00000000004a398b : dec edx ; sbb cl, bh ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004394d1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000462566 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448b71 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046db70 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004655e2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000444261 : div byte ptr [rcx] ; sar byte ptr [rdi + 0x4a52c5], 0xe8 ; ret 0xffb0
0x000000000047aabc : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a3f5 : div ecx ; add eax, r8d ; ret
0x000000000043e4a1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000463046 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047aabb : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d694 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000043938e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004394ce : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000047929b : enter -0x74b8, 0x14 ; ret
0x000000000046d764 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d738
0x00000000004400e4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000041691a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a62e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042292d : enter 0x31c3, -0x40 ; ret
0x00000000004c1e2b : enter 0x380e, 0x41 ; ret
0x00000000004187ad : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041afa5 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000047dab6 : enter 0x4b, -0x18 ; ret 0xf83c
0x000000000046b0e6 : enter 0x4f75, -0xd ; ret
0x00000000004bb09c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000042f616 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421361 : enter 0xf66, -0x15 ; ret
0x0000000000414cb7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004151b3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f3ca : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004429c6 : fadd dword ptr [rax] ; leave ; ret
0x000000000041ca4f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000411b10 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444232 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c9391 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000411287 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00000000004c6b9c : fadd qword ptr [rdi - 0x10c00000] ; cli ; jmp qword ptr [rdx]
0x00000000004c269c : fadd qword ptr [rdx] ; add byte ptr [rax], dh ; add al, bh ; call qword ptr [rcx]
0x000000000047b799 : fadd st(1) ; call 0xffffffff8a09e0c4
0x000000000047b900 : fadd st(1) ; call 0xffffffff8a09e22b
0x000000000047c119 : fadd st(1) ; call 0xffffffff8a09ea44
0x000000000047c276 : fadd st(1) ; call 0xffffffff8a09eba1
0x0000000000477985 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042f161 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049eb44 : fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004ba6d8 : fcmovb st(0), st(3) ; ret
0x000000000044f07e : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x000000000049eaf3 : fcom dword ptr [rbx] ; add byte ptr [rbp + r8 - 0x18], sil ; ret 0xf7f4
0x00000000004c22a1 : fcomi st(7) ; jmp qword ptr [rbx]
0x0000000000468ba7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f98a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fa6f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fd4f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041dfb6 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb459 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004015ab : fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004b96c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000041dd5f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004c6961 : fdiv st(2), st(0) ; call rsi
0x00000000004402f3 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440300 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x44030e ; call rbx
0x00000000004a36f1 : fdivp st(0) ; jmp qword ptr [rax]
0x000000000044012a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004401bd : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4401cb ; call rbx
0x00000000004c6869 : fdivr st(2) ; jmp rdi
0x00000000004b8a15 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004be2b5 : fdivr st(5) ; call rsp
0x00000000004be2b1 : fdivr st(5) ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x000000000043d698 : fdivr st(7) ; ret
0x000000000043f4b2 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000004642c4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000440849 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb2a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000045b701 : fidiv word ptr [rbx + rcx*2] ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000444145 : fidivr dword ptr [rax + 1] ; ret
0x000000000043e0bf : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004113dd : fild qword ptr [rip + 0x29480005] ; ret
0x000000000045a3e8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a595 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000004106c0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000404e08 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000426922 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048adb2 : fimul word ptr [rax + 0x29] ; ret
0x000000000041189e : fimul word ptr [rax - 0x77] ; ret
0x000000000047312a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a45e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a4b8
0x000000000047ff6e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47ffc8
0x000000000044fab0 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00000000004a05f3 : fincstp ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf7d9
0x0000000000414d25 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414e95 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004175d8 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000468022 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000043fa67 : fisttp dword ptr [rax + 0xf] ; ret
0x000000000049eb41 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004740f9 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000479501 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b4e0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047951b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000440d29 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e3de : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000447f77 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000041c7e9 : fisttp word ptr [rax + 9] ; ret 0x8948
0x000000000047959f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042b3cd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f531 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f231 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043291c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000047d6d2 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400c5a : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b9701 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000049195a : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f639 : fldcw word ptr [rsp - 2] ; ret
0x0000000000425f49 : fldenv dword ptr [rsi + 0xf] ; je 0x425fa6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cd77 : fldenv dword ptr [rsi + 0xf] ; je 0x42cdd4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f5b1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425e41 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047a504 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418d7f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e6e1 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047ea06 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048efe7 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000458701 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000411381 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484529 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d123 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000046980c : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000411a0a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045adfe : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049a78d : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049aa25 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000045ce5b : fmul dword ptr [rdi] ; ret
0x000000000048acb7 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a33c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004216e9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042719f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048eee2 : fmul st(0) ; ret
0x000000000048ee60 : fmulp st(1) ; ret
0x00000000004167e3 : fnstcw word ptr [rax] ; sub eax, dword ptr [rax] ; ret
0x000000000040dba5 : fpatan ; ret
0x00000000004a3745 : fprem ; call qword ptr [rax - 0x1f000726]
0x00000000004c8651 : frndint ; call qword ptr [rax]
0x000000000042f331 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b93e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b9760 : fstp st(0) ; ret 0xde5d
0x00000000004015aa : fstp st(0) ; sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c04f8 : fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rax]
0x000000000044ed31 : fsub dword ptr [rcx + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000040dc28 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000049ecb2 : fsub dword ptr [rdx] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000042f631 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438204 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047c942 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043daab : fsub qword ptr [rsi + 0xf] ; jmp 0x43da77
0x000000000042f431 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042147c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004400e2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000441beb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000441fea : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441658 : fsubp st(0) ; ret 0xffe8
0x0000000000441558 : fsubp st(0) ; ret 0xffe9
0x000000000043e738 : fsubr st(0) ; ret 0x73
0x00000000004bb438 : fucom st(5) ; loop 0x4bb491 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047ee85 : fucomi st(1) ; ret
0x000000000049e7b7 : fucompi st(0) ; ret
0x00000000004a05f8 : fucompi st(0) ; ret 0xf7d9
0x000000000041bdf0 : fucompi st(0) ; ret 0xffff
0x0000000000445812 : fucompi st(3) ; ret
0x0000000000468026 : fucompp ; ret 0xfffe
0x000000000043eba0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044264b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004be88a : hlt ; call qword ptr [rax]
0x00000000004bedb2 : hlt ; call qword ptr [rbx]
0x00000000004be6aa : hlt ; call qword ptr [rdx]
0x00000000004b97e8 : hlt ; jmp 0x4b97bd
0x0000000000434a6a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bce : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004c89b4 : hlt ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; std ; call rsp
0x000000000043d1a3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004bfb01 : hlt ; ret
0x00000000004a0f58 : hlt ; ret 0x22
0x00000000004b9923 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043d1a7 : hlt ; sub eax, edx ; ret
0x00000000004c17b2 : idiv bh ; ret
0x0000000000401666 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446b96 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000049d58a : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049ba0f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x000000000049ff4b : idiv edi ; nop dword ptr [rax] ; ret
0x000000000049ff08 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a0908 : idiv edi ; ret
0x000000000041b1ad : imul byte ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x000000000041dc0a : imul cl ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045c8a7 : imul eax ; and ebx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x0000000000441ff7 : imul eax ; ret
0x000000000046e0f8 : imul eax ; ret 0xfafe
0x000000000046b358 : imul eax ; ret 0xfff8
0x000000000044b36d : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043bd01 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000044724b : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000444199 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x000000000047cd0f : imul ecx ; ret
0x0000000000467204 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000043b17c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000434a4a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042678b : in al, -0xd ; ret
0x00000000004c6af9 : in al, -6 ; jmp qword ptr [rdx]
0x00000000004c4899 : in al, -7 ; jmp rax
0x00000000004a36dd : in al, -8 ; call qword ptr [rax]
0x00000000004a367d : in al, -8 ; call rax
0x00000000004c2ea4 : in al, 0x4a ; add byte ptr [rax], al ; sar bpl, 1 ; jmp qword ptr [rdx]
0x00000000004237fc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e138 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000485eca : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457a78 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000405435 : in al, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004be6a4 : in al, 2 ; add byte ptr [rax], al ; call 0x134bdaec
0x0000000000419f13 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004230b0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000049e073 : in al, dx ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000491959 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000431bca : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e4a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000465417 : in al, dx ; or al, ch ; ret 1
0x000000000041ca87 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004c80ac : in al, dx ; pushfq ; add byte ptr [rax], al ; jo 0x4c80c2 ; cld ; call qword ptr [rax]
0x00000000004654d0 : in al, dx ; ret 0xfff9
0x00000000004c4b61 : in al, dx ; stc ; call qword ptr [rsi]
0x00000000004bae7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bae11 ; ret 0x48f
0x00000000004bae7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bae12 ; ret 0x48f
0x00000000004bb439 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000045a7cb : in eax, -0x21 ; loopne 0x45a75c ; ret 0xe680
0x0000000000434aca : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c2aa : in eax, -0xd ; ret
0x00000000004ba901 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a365d : in eax, -8 ; inc dword ptr [rax] ; out -8, eax ; jmp rax
0x00000000004a363d : in eax, -8 ; push qword ptr [rax] ; out -8, eax ; call qword ptr [rax]
0x00000000004b9583 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042684a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000452102 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b8819 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000466683 : in eax, 0xf ; je 0x4666a8 ; add rax, 2 ; ret
0x00000000004a35ed : in eax, dx ; clc ; call qword ptr [rax]
0x00000000004a362d : in eax, dx ; clc ; call rax
0x000000000049eb8f : in eax, dx ; jne 0x49eb71 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043d9c2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004319da : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eca : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004956f0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478cab : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e3b2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414b62 : in eax, dx ; ret
0x000000000043db12 : in eax, dx ; sub rax, 1 ; ret
0x000000000049cc35 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043ddd8 : inc bl ; cmp dl, 1 ; jb 0x43ddea ; mov byte ptr [rdi], cl ; ret
0x00000000004328a6 : inc bl ; jb 0x4328b6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004267b1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000414fd2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044d416 : inc byte ptr [rbx] ; je 0x44d425 ; pop rbx ; ret
0x00000000004a35eb : inc dword ptr [rax + 0x10fff8ed] ; loopne 0x4a35f3 ; call rax
0x00000000004a39ab : inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a3793 : inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a3cc7 : inc dword ptr [rax + 0x40] ; stc ; inc eax ; and bh, cl ; call rax
0x00000000004bdd33 : inc dword ptr [rax + 0x4b] ; std ; call qword ptr [rax - 0x1f0002b3]
0x00000000004a3237 : inc dword ptr [rax + 0x50fff800] ; add eax, edi ; jmp qword ptr [rax]
0x00000000004bdca7 : inc dword ptr [rax + 0x6a] ; std ; call qword ptr [rax]
0x00000000004be2b3 : inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004a362b : inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3627 : inc dword ptr [rax - 0x15] ; clc ; inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3657 : inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a36d7 : inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3743 : inc dword ptr [rax - 0x27] ; clc ; call qword ptr [rax - 0x1f000726]
0x00000000004bdd43 : inc dword ptr [rax - 0x2f0002ac] ; push rsi ; std ; jmp qword ptr [rax]
0x00000000004a3767 : inc dword ptr [rax - 0x2f000730] ; sar eax, 1 ; jmp qword ptr [rax]
0x00000000004a334f : inc dword ptr [rax - 0x2f000786] ; jnp 0x4a3357 ; jmp qword ptr [rax]
0x00000000004a3757 : inc dword ptr [rax - 0x35] ; clc ; call qword ptr [rax - 0x1f000734]
0x00000000004533aa : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x000000000045555c : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a337f : inc dword ptr [rax - 0x76] ; clc ; call qword ptr [rax - 0x1f000775]
0x00000000004a35e7 : inc dword ptr [rax - 0x7f000715] ; in eax, dx ; clc ; call qword ptr [rax]
0x00000000004a3a03 : inc dword ptr [rax] ; adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x0000000000460103 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000042fb47 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a3397 : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3473 : inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004a3d17 : inc dword ptr [rax] ; ja 0x4a3d18 ; call qword ptr [rax]
0x00000000004a3cdb : inc dword ptr [rax] ; jbe 0x4a3cdc ; call qword ptr [rax]
0x00000000004a3d6f : inc dword ptr [rax] ; jl 0x4a3d70 ; call qword ptr [rax]
0x00000000004a3d3b : inc dword ptr [rax] ; js 0x4a3d3c ; jmp qword ptr [rax]
0x00000000004a365f : inc dword ptr [rax] ; out -8, eax ; jmp rax
0x00000000004a3c07 : inc dword ptr [rax] ; psubw mm7, mm7 ; jo 0x4a3c24 ; stc ; call rax
0x00000000004a35bb : inc dword ptr [rax] ; ret
0x00000000004a3453 : inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004a37c3 : inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x000000000047131f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000473530 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b2d0 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b355 ; ret
0x00000000004604f7 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d5ba : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049d0c2 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e3a7 : inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000046866c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000000000407672 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000043e49f : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3cf : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000045e1c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000004a3947 : inc dword ptr [rcx + rbx - 7] ; call rsp
0x0000000000477950 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000044e3aa : inc dword ptr [rcx - 0x77] ; ret
0x00000000004c938e : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000047fdf0 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a387f : inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a386f : inc dword ptr [rdx] ; sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x000000000042bbad : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a37db : inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x00000000004a3247 : inc eax ; add edi, eax ; jmp rax
0x00000000004a3ccb : inc eax ; and bh, cl ; call rax
0x00000000004a3d33 : inc eax ; ja 0x4a3d34 ; jmp rax
0x00000000004a3d0b : inc eax ; jbe 0x4a3d0c ; call rax
0x00000000004a335f : inc eax ; jg 0x4a335f ; call qword ptr [rax]
0x00000000004a3d63 : inc eax ; jnp 0x4a3d64 ; jmp rax
0x00000000004a346b : inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rax
0x00000000004bdd53 : inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004bddc3 : inc eax ; ret 0xfffd
0x0000000000464e1c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d699 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412bf8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x000000000047798b : inc ebx ; sub eax, edx ; ret
0x00000000004a34f7 : inc ecx ; ret 0xfff8
0x00000000004602b2 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004a34bb : inc edx ; mov esi, 0xbc60fff8 ; clc ; call qword ptr [rax]
0x00000000004a385f : inc edx ; sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x00000000004812f6 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004a353f : inc esi ; ret
0x0000000000402c2b : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004015ad : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041da7e : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470dc5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000047aec6 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047bd41 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x000000000049195b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f63a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004a3331 : insb byte ptr [rdi], dx ; clc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x00000000004be2b0 : insb byte ptr [rdi], dx ; fdivr st(5) ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004bb43e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000040ffc0 : insb byte ptr [rdi], dx ; ret 1
0x00000000004bdcad : insb byte ptr [rdi], dx ; std ; push rax ; insd dword ptr [rdi], dx ; std ; call rax
0x0000000000494f70 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c513d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add dl, dil ; call rsi
0x000000000043fcef : insd dword ptr [rdi], dx ; add byte ptr [rax], r8b ; ret
0x0000000000495e70 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462ad1 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb43f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b97ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004bdcb1 : insd dword ptr [rdi], dx ; std ; call rax
0x00000000004ba6ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478b53 : int 0x48
0x00000000004ba8c7 : int 0x80
0x00000000004c1da9 : int 0xa
0x0000000000403c2f : int 0xc3
0x000000000048899f : int 0xfc
0x000000000045a3f6 : int1 ; add eax, r8d ; ret
0x000000000044497c : int1 ; call rbx
0x0000000000473ec4 : int1 ; cmp rcx, rdx ; jne 0x473ea7 ; ret
0x000000000043dd5b : int1 ; jl 0x43ddac ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd7c : int1 ; jl 0x43ddcd ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd8f : int1 ; jl 0x43dde0 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de64 : int1 ; jl 0x43deb5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043debc : int1 ; jl 0x43df0d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043df59 : int1 ; jl 0x43dfaa ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480c03 : int1 ; jmp 0x480bca
0x0000000000480c02 : int1 ; jmp 0x480bcb
0x000000000049a1e7 : int1 ; jmp rcx
0x00000000004348bb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043219f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d173 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043e4a2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004bae16 : int1 ; ret 0x5803
0x000000000043d177 : int1 ; sub eax, edx ; ret
0x000000000040dbfe : ja 0x40dc23 ; ret
0x0000000000426712 : ja 0x426723 ; ret
0x000000000042c238 : ja 0x42c232 ; ret 0x7401
0x0000000000435c83 : ja 0x435c87 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b2c7 : ja 0x43b2cd ; ret
0x000000000043b2e3 : ja 0x43b2ed ; mov dword ptr [rdi], ecx ; ret
0x000000000043b324 : ja 0x43b333 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b3a9 : ja 0x43b3bd ; ret
0x000000000043b3ff : ja 0x43b417 ; ret
0x000000000043b481 : ja 0x43b49d ; ret
0x000000000043b8e7 : ja 0x43b8f1 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b903 : ja 0x43b911 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b954 : ja 0x43b967 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043ba39 : ja 0x43ba51 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043baaf : ja 0x43bacb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043bb31 : ja 0x43bb51 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f2ab : ja 0x43f2b3 ; ret
0x000000000043f2fa : ja 0x43f303 ; ret
0x000000000043f489 : ja 0x43f4c3 ; ret
0x000000000043f52d : ja 0x43f577 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044f966 : ja 0x44f973 ; ret
0x000000000045a3e7 : ja 0x45a3ce ; mov eax, r8d ; ret
0x000000000046a7dd : ja 0x46a7eb ; pop rbx ; ret
0x000000000046ab6b : ja 0x46ab73 ; ret
0x000000000046abc0 : ja 0x46abcb ; ret
0x000000000046ad70 : ja 0x46ad9b ; ret
0x0000000000476e95 : ja 0x476ebf ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000477485 : ja 0x4774af ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000477821 : ja 0x47784b ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000478fce : ja 0x479020 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484bc4 : ja 0x484b51 ; ret 0x348
0x000000000048753b : ja 0x4874c8 ; ret 0x348
0x00000000004a3d19 : ja 0x4a3d16 ; call qword ptr [rax]
0x00000000004a3d1d : ja 0x4a3d1a ; jmp qword ptr [rax]
0x00000000004a3d31 : ja 0x4a3d32 ; inc eax ; ja 0x4a3d36 ; jmp rax
0x00000000004a3d35 : ja 0x4a3d32 ; jmp rax
0x00000000004a3d39 : ja 0x4a3d3a ; inc dword ptr [rax] ; js 0x4a3d3e ; jmp qword ptr [rax]
0x00000000004bae84 : ja 0x4bae0b ; ret 0x48f
0x00000000004bdcc5 : ja 0x4bdcca ; push qword ptr [rax] ; jns 0x4bdcce ; call qword ptr [rax]
0x0000000000413048 : jae 0x413055 ; movzx eax, byte ptr [rax] ; ret
0x000000000041691b : jae 0x416945 ; movzx eax, byte ptr [rax] ; ret
0x0000000000444144 : jae 0x444127 ; mov eax, 1 ; ret
0x000000000043f24d : jae 0x444366 ; ret
0x00000000004745eb : jae 0x474595 ; xor eax, eax ; ret
0x0000000000475ab4 : jae 0x475b1d ; add r8b, bpl ; ret
0x000000000049ff49 : jae 0x49ff33 ; idiv edi ; nop dword ptr [rax] ; ret
0x00000000004b9442 : jae 0x4b9424 ; jo 0x4b94c0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba2de : jae 0x4ba2b9 ; push rsi ; pop rdx ; je 0x4ba2ae ; ret 0xacfc
0x00000000004bf081 : jae 0x4bf099 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c4d47 : jae 0x4c4d55 ; ret
0x00000000004c57bd : jae 0x4c57c5 ; add al, dl ; and edx, edi ; jmp rdi
0x00000000004301aa : jb 0x4301ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302fa : jb 0x43030a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043044a : jb 0x43045a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043059a : jb 0x4305aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306ea : jb 0x4306fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043083a : jb 0x43084a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043098a : jb 0x43099a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ada : jb 0x430aea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c2a : jb 0x430c3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d7a : jb 0x430d8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eca : jb 0x430eda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043101a : jb 0x43102a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043116a : jb 0x43117a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312ba : jb 0x4312ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043140a : jb 0x43141a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004327a1 : jb 0x43278a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432804 : jb 0x4327ed ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000004328a8 : jb 0x4328b4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043585e : jb 0x43586a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dc47 : jb 0x43dc57 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043dc53 : jb 0x43dc69 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dc63 : jb 0x43dc6b ; mov byte ptr [rdi], cl ; ret
0x000000000043ddc5 : jb 0x43ddd4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043ddd0 : jb 0x43dde3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dddd : jb 0x43dde5 ; mov byte ptr [rdi], cl ; ret
0x0000000000464b6c : jb 0x464b65 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000049ae83 : jb 0x49ae8d ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a3a58 : jb 0x4a3a72 ; stc ; jmp rdx
0x0000000000414d6b : jbe 0x414d0b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000426056 : jbe 0x426095 ; add rax, rdi ; ret
0x0000000000426066 : jbe 0x426097 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426076 : jbe 0x426097 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000426086 : jbe 0x426097 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c2a3 : jbe 0x42c2be ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c299 ; ret
0x000000000044e3a5 : jbe 0x44e3aa ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000044e3a4 : jbe 0x44e3ab ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045abb2 : jbe 0x45ab3f ; ret 0x8166
0x000000000046409a : jbe 0x464010 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004781df : jbe 0x4781ea ; ret
0x000000000049dd16 : jbe 0x49dd28 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a3349 : jbe 0x4a3345 ; jmp qword ptr [rax]
0x00000000004a3cdd : jbe 0x4a3cda ; call qword ptr [rax]
0x00000000004a3ce1 : jbe 0x4a3cde ; jmp qword ptr [rax]
0x00000000004a3d0d : jbe 0x4a3d0a ; call rax
0x00000000004a3d09 : jbe 0x4a3d0a ; inc eax ; jbe 0x4a3d0e ; call rax
0x00000000004a3d11 : jbe 0x4a3d0e ; jmp rax
0x00000000004a3d15 : jbe 0x4a3d16 ; inc dword ptr [rax] ; ja 0x4a3d1a ; call qword ptr [rax]
0x00000000004c19f9 : jbe 0x4c19f3 ; call qword ptr [rax]
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4be3c0 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400bf4 : je 0x400c22 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x0000000000401663 : je 0x401677 ; xor esi, esi ; mov edi, 1 ; call rax
0x00000000004021a9 : je 0x4021bd ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x00000000004023f5 : je 0x402409 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402cd4 : je 0x402ce4 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f23 : je 0x402f3d ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403117 : je 0x403131 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403532 : je 0x403542 ; mov edi, 0x6cc0a0 ; call rax
0x000000000040357a : je 0x40358c ; mov edi, 0x6cc0a0 ; call r15
0x000000000040367a : je 0x40368a ; mov edi, 0x6cc0a0 ; call rax
0x000000000040f80e : je 0x40f81d ; mov eax, edx ; pop rbx ; ret
0x000000000040fbb8 : je 0x40fbe3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041415b : je 0x414101 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414d33 : je 0x414ced ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414ea3 : je 0x414e5d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415015 : je 0x415022 ; ret
0x0000000000415047 : je 0x415056 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b6a : je 0x415b75 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000041770d : je 0x41792e ; mov rdx, rax ; jmp 0x417738
0x0000000000417cda : je 0x417ce1 ; pop rbx ; ret
0x0000000000417db7 : je 0x417dbd ; call rax
0x0000000000418ba4 : je 0x418bb1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e0a2 : je 0x41e0cb ; call rax
0x000000000041ea92 : je 0x41eabe ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041efd8 : je 0x41efde ; call rax
0x0000000000420fd9 : je 0x420fe2 ; ret
0x0000000000421262 : je 0x421277 ; mov eax, 0x16 ; ret
0x00000000004212b1 : je 0x4212c3 ; lea rax, qword ptr [rip + 0x1a966] ; ret
0x00000000004229e3 : je 0x4229ad ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004236b5 : je 0x4236bd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000423724 : je 0x423736 ; lea rax, qword ptr [rip + 0x14853] ; ret
0x0000000000423894 : je 0x42389e ; bsf eax, edx ; ret
0x0000000000423894 : je 0x42389f ; bsf eax, edx ; ret
0x000000000042393d : je 0x423955 ; bsf rax, rdx ; ret
0x000000000042393d : je 0x423956 ; bsf rax, rdx ; ret
0x00000000004238dc : je 0x423969 ; bsf rax, rdx ; ret
0x0000000000425f4c : je 0x425fa3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004260be : je 0x4260d1 ; lea rax, qword ptr [rip + 0x8449] ; ret
0x00000000004266a0 : je 0x4266b2 ; lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000426c54 : je 0x426c66 ; lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000429123 : je 0x4290ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042acb3 : je 0x42ac7d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042cd7a : je 0x42cdd1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ce31 : je 0x42ce49 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000042f8a7 : je 0x42f8b1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e3dd : je 0x43e3a6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e3b5 : je 0x43e3a8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e3dd : je 0x43e3a8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4ee : je 0x43e4fc ; xor eax, eax ; ret
0x000000000043e4e9 : je 0x43e509 ; cmp eax, 2 ; je 0x43e501 ; xor eax, eax ; ret
0x000000000043e53d : je 0x43e523 ; ret
0x000000000043e628 : je 0x43e638 ; mov edi, 0x6cc720 ; call rax
0x000000000043e640 : je 0x43e650 ; mov edi, 0x6cc720 ; call rax
0x000000000043e9a0 : je 0x43e981 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043fdaa : je 0x43fdb1 ; ret
0x00000000004410f0 : je 0x441102 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000442859 : je 0x44285e ; ret
0x00000000004428bd : je 0x4428c2 ; ret
0x0000000000443e53 : je 0x443e63 ; mov edi, 0x6cb140 ; call rax
0x0000000000443fe1 : je 0x443ff1 ; mov edi, 0x6cb140 ; call rax
0x0000000000444168 : je 0x444172 ; ret
0x0000000000444184 : je 0x444199 ; mov dword ptr [rip + 0x285e0c], edx ; pop rbx ; ret
0x0000000000444977 : je 0x4449a3 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448a74 : je 0x448aa3 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d418 : je 0x44d423 ; pop rbx ; ret
0x000000000044d413 : je 0x44d428 ; cmp esi, 3 ; je 0x44d428 ; pop rbx ; ret
0x000000000044d9a0 : je 0x44d9b0 ; mov edi, 0x6cc720 ; call rax
0x000000000044d9cf : je 0x44d9e7 ; mov edi, 0x6cc720 ; call rax
0x000000000044dad0 : je 0x44dad6 ; call rax
0x000000000044db2f : je 0x44db3f ; mov edi, 0x6cc720 ; call rax
0x000000000044dca8 : je 0x44dcbf ; mov edi, 0x6cc720 ; call rax
0x000000000044df88 : je 0x44df98 ; mov edi, 0x6cc720 ; call rax
0x000000000044e08c : je 0x44e092 ; call rax
0x000000000044ef4b : je 0x44ef51 ; call rax
0x000000000044f50b : je 0x44f513 ; ret
0x0000000000450ae2 : je 0x450b0f ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000462e48 : je 0x462e72 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463ad6 : je 0x463b26 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463ad5 : je 0x463b27 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004648bc : je 0x4648c2 ; ret
0x00000000004648ea : je 0x46494c ; pop rbp ; pop r12 ; ret
0x000000000046498f : je 0x4649f1 ; pop rbp ; pop r12 ; ret
0x0000000000464acd : je 0x464ad8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464b11 : je 0x464b1c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004656ec : je 0x465715 ; bsf rax, rdx ; ret
0x00000000004656ec : je 0x465716 ; bsf rax, rdx ; ret
0x000000000046567c : je 0x465729 ; bsf rax, rdx ; ret
0x0000000000466669 : je 0x466689 ; mov cl, dl ; and cl, 0xf ; je 0x466699 ; ret
0x0000000000466670 : je 0x466692 ; ret
0x0000000000466685 : je 0x4666a6 ; add rax, 2 ; ret
0x0000000000466a0b : je 0x466a34 ; call rbx
0x0000000000466ab3 : je 0x466adc ; call rbx
0x0000000000466e98 : je 0x466ea5 ; test edx, edx ; jne 0x466e97 ; ret
0x0000000000466e97 : je 0x466ea6 ; test edx, edx ; jne 0x466e98 ; ret
0x000000000046b0f5 : je 0x46b0e4 ; ret
0x000000000046dbc8 : je 0x46db53 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470d54 : je 0x470d64 ; mov edi, 0x6cb100 ; call rax
0x0000000000474d48 : je 0x474d58 ; mov edi, 0x6cb140 ; call rax
0x0000000000474d70 : je 0x474d80 ; mov edi, 0x6cb140 ; call rax
0x0000000000474de6 : je 0x474df6 ; mov edi, 0x6cb140 ; call rax
0x000000000047630b : je 0x47631f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000047632e : je 0x47637a ; shl rdx, 5 ; add rdx, rax ; jmp 0x476351
0x00000000004768fc : je 0x476921 ; pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x00000000004768b3 : je 0x476927 ; mov edi, 0x6cb140 ; call rax
0x0000000000476917 : je 0x476980 ; pop rbx ; ret
0x0000000000476a54 : je 0x476a5b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000476c4f : je 0x476c56 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047826e : je 0x478239 ; mov edi, 0x6cb140 ; call rax
0x000000000047824f : je 0x47827d ; or byte ptr [rdi + 0x6cb140], bh ; call rax
0x00000000004783b6 : je 0x4783c2 ; ret
0x00000000004783cc : je 0x4783dc ; mov edi, 0x6cb140 ; call rax
0x000000000047a81a : je 0x47a825 ; mov eax, edx ; pop rbx ; ret
0x000000000047b112 : je 0x47b126 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047bd7c : je 0x47bdab ; js 0x47bdd1 ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047e7e8 : je 0x47e7f8 ; mov edi, 0x6cb140 ; call rax
0x000000000047e814 : je 0x47e824 ; mov edi, 0x6cb140 ; call rax
0x000000000047eaba : je 0x47eace ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000481f17 : je 0x481f2b ; call 0x41e184
0x00000000004877eb : je 0x487778 ; ret 0x348
0x0000000000487f6b : je 0x487f7b ; mov edi, 0x6cb140 ; call rax
0x0000000000487f92 : je 0x487fa2 ; mov edi, 0x6cb140 ; call rax
0x0000000000488011 : je 0x488021 ; mov edi, 0x6cb140 ; call rax
0x000000000048803a : je 0x48804a ; mov edi, 0x6cb140 ; call rax
0x0000000000494173 : je 0x49413d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496123 : je 0x4960ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000499f55 : je 0x499f33 ; ret
0x000000000049c220 : je 0x49c1d8 ; add rsp, 0x18 ; ret
0x000000000049c1d7 : je 0x49c249 ; add rsp, 0x18 ; ret
0x000000000049e113 : je 0x49e124 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e129 ; ret
0x000000000049e2cd : je 0x49e337 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e748 : je 0x49e753 ; ret
0x000000000049e9ba : je 0x49e9ca ; mov edi, 0x6cb100 ; call rax
0x000000000049ea7b : je 0x49ea8b ; mov edi, 0x6cb100 ; call rax
0x00000000004a071e : je 0x4a0729 ; call rax
0x00000000004b95a8 : je 0x4b9573 ; xor al, 0xd8 ; ret
0x00000000004b97e7 : je 0x4b97e4 ; jmp 0x4b97be
0x00000000004ba2e2 : je 0x4ba2aa ; ret 0xacfc
0x00000000004bf07a : je 0x4bf088 ; ret
0x0000000000426722 : jg 0x426774 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000426847 : jg 0x426860 ; jne 0x426837 ; mov rax, rdi ; ret
0x000000000042c2a7 : jg 0x42c2be ; jne 0x42c295 ; ret
0x0000000000431d89 : jg 0x431ddc ; ret
0x0000000000431e0f : jg 0x431e5a ; ret
0x0000000000431f89 : jg 0x431fdc ; ret 0x894c
0x000000000043200f : jg 0x43205a ; ret 0x894c
0x00000000004327a0 : jg 0x43281c ; loopne 0x432771 ; jp 0x43282d ; jp 0x4327a0 ; ret
0x000000000043284c : jg 0x43285d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000434898 : jg 0x4348e9 ; loope 0x434897 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043490f : jg 0x43495a ; ret 0xff2
0x0000000000434928 : jg 0x434979 ; loop 0x434927 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043499f : jg 0x4349ea ; ret
0x00000000004349b8 : jg 0x434a09 ; jrcxz 0x4349b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a48 : jg 0x434a99 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ac8 : jg 0x434b19 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b48 : jg 0x434b99 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bc8 : jg 0x434c19 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c48 : jg 0x434c99 ; call 0x4fc25c4a
0x0000000000434cc8 : jg 0x434d19 ; jmp 0x4fc25cca
0x0000000000434e48 : jg 0x434e99 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ec8 : jg 0x434f19 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f58 : jg 0x434fa9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fd8 : jg 0x435029 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043504c : jg 0x435057 ; ret
0x00000000004350a6 : jg 0x4350b9 ; ret
0x00000000004350a1 : jg 0x4350f1 ; psllq mm1, qword ptr [rdi] ; jg 0x4350be ; ret
0x0000000000435116 : jg 0x435129 ; ret
0x0000000000435186 : jg 0x435199 ; ret
0x0000000000435181 : jg 0x4351d1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004351f6 : jg 0x435209 ; ret
0x00000000004351f1 : jg 0x435241 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435266 : jg 0x435279 ; ret
0x0000000000435261 : jg 0x4352b1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352d6 : jg 0x4352e9 ; ret
0x00000000004352d1 : jg 0x435321 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435346 : jg 0x435359 ; ret
0x0000000000435341 : jg 0x435391 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353b6 : jg 0x4353c9 ; ret
0x00000000004353b1 : jg 0x435401 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435426 : jg 0x435439 ; ret
0x0000000000435496 : jg 0x4354a9 ; ret
0x0000000000435506 : jg 0x435519 ; ret
0x0000000000435501 : jg 0x435551 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435576 : jg 0x435589 ; ret
0x0000000000435571 : jg 0x4355c1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355e6 : jg 0x4355f9 ; ret
0x00000000004355e1 : jg 0x435631 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435656 : jg 0x435669 ; ret
0x0000000000435651 : jg 0x4356a1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004356c6 : jg 0x4356d9 ; ret
0x00000000004356c1 : jg 0x435711 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435804 : jg 0x435815 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000435818 : jg 0x435829 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435c8a : jg 0x435c86 ; ret
0x000000000043b396 : jg 0x43b3a1 ; ret
0x000000000043b3a6 : jg 0x43b3b4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b3ba : jg 0x43b3c9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b3d9 : jg 0x43b3e7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b3e9 : jg 0x43b3f7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3f9 : jg 0x43b40a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b41a : jg 0x43b429 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b43a : jg 0x43b449 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b45a : jg 0x43b469 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b47a : jg 0x43b48c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b4bd : jg 0x43b4cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4dd : jg 0x43b4ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b4fb : jg 0x43b50b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b51b : jg 0x43b52b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b53b : jg 0x43b54b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b55b : jg 0x43b56b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043ba26 : jg 0x43ba35 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043ba36 : jg 0x43ba48 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043ba69 : jg 0x43ba7b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043ba89 : jg 0x43ba9b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bbaf : jg 0x43bc0f ; or eax, 0x1c478d48 ; ret
0x000000000043dc22 : jg 0x43dc32 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dcc3 : jg 0x43dd14 ; loopne 0x43dd18 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dda7 : jg 0x43ddb7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dd9d : jg 0x43ddbd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e370 : jg 0x43e3ad ; ret 0x2b77
0x0000000000449b8f : jg 0x449b1c ; ret 0x5c77
0x0000000000472700 : jg 0x472708 ; add byte ptr [rax], al ; call 0x43e9e6
0x0000000000476e99 : jg 0x476ec7 ; call r11
0x0000000000477489 : jg 0x4774b7 ; call r11
0x0000000000477825 : jg 0x477853 ; call r11
0x000000000047f221 : jg 0x47f227 ; add byte ptr [rcx], bh ; ret
0x0000000000491934 : jg 0x491941 ; ret 0x5488
0x00000000004a3361 : jg 0x4a335d ; call qword ptr [rax]
0x00000000004c4661 : jg 0x4c465e ; call rdx
0x00000000004c6171 : jg 0x4c616f ; jmp rdi
0x000000000040e01e : jge 0x40e023 ; call r14
0x000000000044009b : jge 0x44009f ; call rbx
0x00000000004401c2 : jge 0x4401c6 ; call rbx
0x00000000004401d0 : jge 0x4401d4 ; call rbx
0x0000000000440305 : jge 0x440309 ; call rbx
0x0000000000440475 : jge 0x440479 ; call rbx
0x0000000000440483 : jge 0x440487 ; call rbx
0x00000000004408d6 : jge 0x4408a1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441c93 : jge 0x441c97 ; call rbx
0x0000000000441dbb : jge 0x441dbf ; call rbx
0x0000000000441efe : jge 0x441f02 ; call rbx
0x0000000000441fff : jge 0x442003 ; call rbx
0x000000000044201b : jge 0x44201f ; call rbx
0x0000000000453c94 : jge 0x453ccb ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000466414 : jge 0x466416 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000466846 : jge 0x46684b ; call r12
0x000000000049c5ef : jge 0x49c5ec ; leave ; ret
0x000000000049c687 : jge 0x49c68a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c71b : jge 0x49c718 ; leave ; ret
0x000000000049c767 : jge 0x49c76a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c830 : jge 0x49c833 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c8bf : jge 0x49c8bc ; leave ; ret
0x000000000049c910 : jge 0x49c913 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ed20 : jge 0x49ed35 ; call r12
0x00000000004a3dad : jge 0x4a3daa ; call rax
0x00000000004a3db5 : jge 0x4a3db2 ; call qword ptr [rax]
0x00000000004a3db1 : jge 0x4a3db2 ; push rax ; jge 0x4a3db6 ; call qword ptr [rax]
0x00000000004c4561 : jge 0x4c455e ; call rdi
0x0000000000400bf8 : jl 0x400c22 ; or al, 0x41 ; call rsp
0x0000000000400c4c : jl 0x400c7a ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000413f0b : jl 0x413f56 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b1f5 : jl 0x41b220 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b32c : jl 0x41b357 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000435784 : jl 0x4357d3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004357c0 : jl 0x43580f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004359be : jl 0x435a0d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435b25 : jl 0x435b74 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435c87 : jl 0x435cd6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043dd5c : jl 0x43ddab ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd7d : jl 0x43ddcc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd90 : jl 0x43dddf ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de65 : jl 0x43deb4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043debd : jl 0x43df0c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043df5a : jl 0x43dfa9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f4b4 : jl 0x43f4e0 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f4b4 : jl 0x43f4e1 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043fb7a : jl 0x43fba5 ; or byte ptr [rax + 0x29], cl ; ret
0x0000000000440530 : jl 0x44055e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447346 : jl 0x447374 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447ca9 : jl 0x447cd7 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044808f : jl 0x4480bd ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448a79 : jl 0x448aa3 ; call r15
0x0000000000448e20 : jl 0x448e4e ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449b39 : jl 0x449b67 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044aa45 : jl 0x44aa73 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044cff8 : jl 0x44d023 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044fae2 : jl 0x44fb0d ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004527ec : jl 0x452817 ; and byte ptr [rax + 1], cl ; ret
0x0000000000458e88 : jl 0x458e52 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045ca6c : jl 0x45ca97 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464835 : jl 0x4647d1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004654cb : jl 0x4654fb ; add r8b, bpl ; in al, dx ; ret 0xfff9
0x000000000046555b : jl 0x46558b ; add r8b, bpl ; pop rsp ; ret 0xfff9
0x0000000000473539 : jl 0x473568 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047b8ad : jl 0x47b8d7 ; js 0x47b8f6 ; call rsp
0x000000000047bbc2 : jl 0x47bbec ; js 0x47bc0b ; call rsp
0x000000000047bd81 : jl 0x47bdab ; js 0x47bdca ; call rsp
0x000000000047bf89 : jl 0x47bfb3 ; js 0x47bfd2 ; call rsp
0x000000000049ac42 : jl 0x49ac6d ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a3d71 : jl 0x4a3d6e ; call qword ptr [rax]
0x00000000004a3d89 : jl 0x4a3d86 ; call rax
0x00000000004a3d8d : jl 0x4a3d8a ; jmp rax
0x00000000004a3d95 : jl 0x4a3d92 ; call qword ptr [rax]
0x00000000004a3d91 : jl 0x4a3d92 ; push rax ; jl 0x4a3d96 ; call qword ptr [rax]
0x00000000004bdcd1 : jl 0x4bdcd2 ; call rax
0x00000000004c513c : jl 0x4c51b2 ; add byte ptr [rax], al ; add dl, dil ; call rsi
0x00000000004238de : jle 0x4238e7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004238de : jle 0x4238e8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d462 : jle 0x44d475 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047c91d : jle 0x47c92b ; ret
0x00000000004a335d : jle 0x4a335d ; inc eax ; jg 0x4a3361 ; call qword ptr [rax]
0x00000000004007bd : jmp 0x400782
0x0000000000401041 : jmp 0x400fa1
0x00000000004020d2 : jmp 0x4020e8
0x00000000004117a3 : jmp 0x4116ab
0x000000000041792d : jmp 0x41771b
0x000000000041adad : jmp 0x41a2bc
0x000000000041adbe : jmp 0x41abd9
0x0000000000421364 : jmp 0x42132a
0x00000000004214b8 : jmp 0x42147d
0x000000000042ce8c : jmp 0x42ce52
0x000000000042cfd8 : jmp 0x42cf9d
0x000000000043d96e : jmp 0x43d934
0x000000000043da3f : jmp 0x43da05
0x000000000043daae : jmp 0x43da74
0x000000000043f5c3 : jmp 0x43f536
0x000000000043fea3 : jmp 0x43fe46
0x0000000000443c9c : jmp 0x44377f
0x0000000000445813 : jmp 0x4457d9
0x0000000000445c8e : jmp 0x445c53
0x000000000044f44f : jmp 0x44f071
0x00000000004502e1 : jmp 0x4502eb
0x0000000000456ad3 : jmp 0x456aaf
0x0000000000462664 : jmp 0x462629
0x0000000000462663 : jmp 0x46262a
0x0000000000464dfb : jmp 0x464dc1
0x0000000000464dfa : jmp 0x464dc2
0x0000000000465f0b : jmp 0x465d61
0x0000000000469fcb : jmp 0x469f90
0x000000000046a8c0 : jmp 0x46a886
0x000000000046ceb0 : jmp 0x46c504
0x000000000046d76b : jmp 0x46d731
0x000000000047a462 : jmp 0x47a4b4
0x000000000047d5cc : jmp 0x47d5de
0x000000000047c935 : jmp 0x47f0fb
0x000000000047ff72 : jmp 0x47ffc4
0x0000000000482bb6 : jmp 0x4802ee
0x0000000000480638 : jmp 0x480603
0x0000000000480c04 : jmp 0x480bc9
0x0000000000483965 : jmp 0x48392a
0x000000000048548b : jmp 0x485450
0x000000000048716a : jmp 0x48712f
0x00000000004b8aaa : jmp 0x4b8ae9
0x00000000004b97e9 : jmp 0x4b97bc
0x00000000004ba7e0 : jmp 0x4ba774
0x00000000004ba7df : jmp 0x4ba775
0x0000000000434cca : jmp 0x4fc25cc8
0x0000000000434cc9 : jmp 0x4fc25cc9
0x00000000004692db : jmp 0xffffffffbf091c2b
0x0000000000478fd1 : jmp 0xffffffffc3571926
0x00000000004a3bc3 : jmp qword ptr [rax + 0x10fff90f]
0x00000000004a39d7 : jmp qword ptr [rax + 0x10fff915]
0x00000000004a3bfb : jmp qword ptr [rax + 0x20fff910]
0x00000000004a3bf3 : jmp qword ptr [rax + 0x20fff911]
0x00000000004a3beb : jmp qword ptr [rax + 0x20fff912]
0x00000000004a3be3 : jmp qword ptr [rax + 0x20fff913]
0x00000000004a3bdb : jmp qword ptr [rax + 0x20fff914]
0x00000000004bdcdf : jmp qword ptr [rax + 0x20fffd85]
0x00000000004bdce7 : jmp qword ptr [rax + 0x20fffd88]
0x00000000004bdcef : jmp qword ptr [rax + 0x20fffd8b]
0x00000000004bdcf7 : jmp qword ptr [rax + 0x20fffd8e]
0x00000000004bdcff : jmp qword ptr [rax + 0x20fffd91]
0x00000000004bdd07 : jmp qword ptr [rax + 0x20fffd94]
0x00000000004bdd0f : jmp qword ptr [rax + 0x20fffd97]
0x000000000041cbf9 : jmp qword ptr [rax]
0x000000000048358e : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004bde0f : jmp qword ptr [rbx - 0x1f000238]
0x00000000004c1ce3 : jmp qword ptr [rbx]
0x00000000004bfe5b : jmp qword ptr [rcx]
0x00000000004bb0a4 : jmp qword ptr [rdi]
0x00000000004a384f : jmp qword ptr [rdx + 0x12fff918]
0x00000000004a3857 : jmp qword ptr [rdx + 0x32fff91e]
0x0000000000419434 : jmp qword ptr [rdx]
0x000000000047e2f9 : jmp qword ptr [rsi + 0xf]
0x00000000004a37d3 : jmp qword ptr [rsi]
0x0000000000421599 : jmp r10
0x0000000000476b01 : jmp r11
0x0000000000499fc0 : jmp r8
0x000000000042fb90 : jmp r9
0x00000000004a374b : jmp rax
0x0000000000476b02 : jmp rbx
0x000000000042051e : jmp rcx
0x00000000004c57c3 : jmp rdi
0x000000000042159a : jmp rdx
0x00000000004a3803 : jmp rsi
0x0000000000460142 : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040dba4 : jne 0x40db82 ; ret
0x000000000040fa6b : jne 0x40fa81 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410c1c : jne 0x410c23 ; pop rbx ; ret
0x00000000004133e5 : jne 0x4133f2 ; ret
0x0000000000414b61 : jne 0x414b53 ; ret
0x0000000000415871 : jne 0x415888 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415bc2 : jne 0x415bad ; pop rbx ; ret
0x0000000000415bfc : jne 0x415bf5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004164b6 : jne 0x4164ab ; ret
0x000000000041da80 : jne 0x41da43 ; ret
0x0000000000421504 : jne 0x421516 ; lea rax, qword ptr [rip + 3] ; ret
0x0000000000426009 : jne 0x426065 ; xor rax, rax ; ret
0x0000000000425fc9 : jne 0x426089 ; xor rax, rax ; ret
0x00000000004260aa : jne 0x4260bd ; lea rax, qword ptr [rip + 0x1d] ; ret
0x000000000042678a : jne 0x426773 ; ret
0x00000000004268f3 : jne 0x4267df ; mov rax, rdi ; ret
0x0000000000426849 : jne 0x426835 ; mov rax, rdi ; ret
0x0000000000426d70 : jne 0x426d82 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000426dc3 : jne 0x426dd5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000042c368 : jne 0x42c240 ; ret
0x000000000042c2a9 : jne 0x42c293 ; ret
0x000000000042e4fc : jne 0x42e4e6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042faed : jne 0x42fb17 ; xor eax, eax ; ret
0x000000000042f0e1 : jne 0x42fb1b ; xor eax, eax ; ret
0x000000000042f109 : jne 0x42fb27 ; xor eax, eax ; ret
0x000000000043bd15 : jne 0x43bca6 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bce7 : jne 0x43bca6 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bce6 : jne 0x43bca7 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043d474 : jne 0x43d688 ; xor eax, eax ; ret
0x000000000043d679 : jne 0x43d699 ; xor eax, eax ; ret
0x000000000043d521 : jne 0x43d69d ; xor eax, eax ; ret
0x000000000043d691 : jne 0x43d69e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d7a1 : jne 0x43d792 ; ret
0x000000000043d851 : jne 0x43d842 ; ret
0x000000000043d9c1 : jne 0x43d9b6 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000043db11 : jne 0x43db06 ; sub rax, 1 ; ret
0x0000000000440848 : jne 0x440830 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044264a : jne 0x442648 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004426ba : jne 0x4426b8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000442802 : jne 0x4427f9 ; pop rdx ; pop r10 ; ret
0x00000000004429d3 : jne 0x4429cd ; xor eax, eax ; leave ; ret
0x0000000000445c8c : jne 0x445c63 ; jmp 0x445c55
0x0000000000452101 : jne 0x4520ed ; mov rax, rsi ; ret
0x0000000000452185 : jne 0x452165 ; mov rax, rsi ; ret
0x0000000000463a11 : jne 0x463a03 ; ret
0x00000000004655e3 : jne 0x4655ee ; xor rax, rax ; ret
0x00000000004667b5 : jne 0x4667c2 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466e5b : jne 0x466e16 ; mov rax, rdx ; ret
0x0000000000466e9c : jne 0x466e93 ; ret
0x000000000046b133 : jne 0x46b0e5 ; xor eax, eax ; ret
0x000000000046b0e7 : jne 0x46b13b ; ret
0x000000000046b12f : jne 0x46b13d ; test ecx, ecx ; jne 0x46b0e9 ; xor eax, eax ; ret
0x0000000000473eda : jne 0x473e80 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473ec8 : jne 0x473ea3 ; ret
0x0000000000473fe7 : jne 0x473ffa ; mov rax, qword ptr [rip + 0x258d80] ; ret
0x0000000000474030 : jne 0x474003 ; ret
0x0000000000476846 : jne 0x476883 ; ret
0x0000000000476845 : jne 0x476884 ; ret
0x0000000000478693 : jne 0x4786a6 ; add rsp, 0x38 ; ret
0x0000000000478735 : jne 0x478748 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047880d : jne 0x478850 ; xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004788c5 : jne 0x4788d8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047aa90 : jne 0x47aaa6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e248 : jne 0x47e205 ; nop word ptr [rax + rax] ; call rbx
0x0000000000491990 : jne 0x4919a2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x00000000004919e3 : jne 0x4919f5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000049c2e3 : jne 0x49c2dc ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c347 : jne 0x49c33c ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c5eb : jne 0x49c5e4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c717 : jne 0x49c710 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c8bb : jne 0x49c8b4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cc34 : jne 0x49cc2b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cc94 : jne 0x49cc8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049e119 : jne 0x49e123 ; ret
0x000000000049e134 : jne 0x49e143 ; ret
0x000000000049e354 : jne 0x49e363 ; ret
0x000000000049e753 : jne 0x49e762 ; mov eax, 8 ; ret
0x000000000049eb45 : jne 0x49eb33 ; pop rbx ; ret
0x000000000049eb90 : jne 0x49eb70 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049ecb5 : jne 0x49ec9b ; pop rbx ; ret
0x00000000004a3cd1 : jne 0x4a3cce ; jmp rax
0x00000000004a3cd9 : jne 0x4a3cda ; inc dword ptr [rax] ; jbe 0x4a3cde ; call qword ptr [rax]
0x00000000004260cb : jno 0x42612f ; add dword ptr [rax], eax ; ret
0x000000000042f39e : jno 0x42f3ad ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000435780 : jno 0x435789 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004359ba : jno 0x4359c3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435b21 : jno 0x435b32 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435c86 : jno 0x435d0a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000004667b3 : jno 0x4667c2 ; jne 0x4667c4 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000004667b9 : jno 0x4667c6 ; ret
0x00000000004699ab : jno 0x4699e2 ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000478ec4 : jno 0x478f16 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a333d : jno 0x4a3339 ; call qword ptr [rax]
0x00000000004a3504 : jno 0x4a34cd ; clc ; call qword ptr [rcx]
0x00000000004c54dd : jno 0x4c54e5 ; add byte ptr [rax + 0x14], dh ; cli ; jmp rdx
0x00000000004a3355 : jnp 0x4a3351 ; jmp qword ptr [rax]
0x00000000004a3d61 : jnp 0x4a3d62 ; inc eax ; jnp 0x4a3d66 ; jmp rax
0x00000000004a3d65 : jnp 0x4a3d62 ; jmp rax
0x00000000004a3d6d : jnp 0x4a3d6e ; inc dword ptr [rax] ; jl 0x4a3d72 ; call qword ptr [rax]
0x00000000004b92c5 : jnp 0x4b9282 ; ret
0x00000000004bdccd : jnp 0x4bdcd2 ; push rax ; jl 0x4bdcd6 ; call rax
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x0000000000435787 : jns 0x43578a ; ret
0x00000000004359c1 : jns 0x4359c4 ; ret
0x0000000000435b28 : jns 0x435b33 ; ret
0x000000000046f43c : jns 0x46f44a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x000000000049c1d4 : jns 0x49c217 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004a338d : jns 0x4a3389 ; jmp rax
0x00000000004b83ce : jns 0x4b8364 ; ret 0xf869
0x00000000004b83cd : jns 0x4b8365 ; ret 0xf869
0x00000000004ba7de : jns 0x4ba835 ; jmp 0x4ba776
0x00000000004bdcc9 : jns 0x4bdcca ; call qword ptr [rax]
0x0000000000413264 : jo 0x4132b5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463a8a : jo 0x463aa2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000466fac : jo 0x466fc0 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047a76a : jo 0x47a6f7 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a769 : jo 0x47a6f8 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004a331c : jo 0x4a3385 ; clc ; call qword ptr [rax]
0x00000000004a333c : jo 0x4a33b2 ; clc ; call qword ptr [rax]
0x00000000004a335c : jo 0x4a33e3 ; clc ; inc eax ; jg 0x4a3362 ; call qword ptr [rax]
0x00000000004a338c : jo 0x4a340a ; clc ; jmp rax
0x00000000004a35b8 : jo 0x4a3581 ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3670 : jo 0x4a3658 ; clc ; push qword ptr [rax] ; loope 0x4a3676 ; call qword ptr [rax]
0x00000000004a36d4 : jo 0x4a36bd ; clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a36f0 : jo 0x4a36d3 ; clc ; jmp qword ptr [rax]
0x00000000004a3990 : jo 0x4a39ad ; stc ; jmp rax
0x00000000004a3a08 : jo 0x4a3a1c ; stc ; jmp rax
0x00000000004a3c0c : jo 0x4a3c1f ; stc ; call rax
0x00000000004b9444 : jo 0x4b94be ; mov ebp, 0xfb67d10d ; ret
0x00000000004bdd50 : jo 0x4bddb4 ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004c3970 : jo 0x4c390f ; clc ; call qword ptr [rdx]
0x00000000004c54e0 : jo 0x4c54f9 ; cli ; jmp rdx
0x00000000004c8050 : jo 0x4c805e ; cld ; call qword ptr [rax]
0x00000000004c8080 : jo 0x4c808e ; cld ; call qword ptr [rax]
0x00000000004c80b0 : jo 0x4c80be ; cld ; call qword ptr [rax]
0x00000000004c8680 : jo 0x4c8618 ; cld ; call qword ptr [rax]
0x00000000004267d5 : jp 0x4267cf ; ret 0x7401
0x00000000004327a6 : jp 0x43279a ; ret
0x0000000000432809 : jp 0x4327fd ; ret
0x000000000043279f : jp 0x432829 ; jb 0x43278c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004327a4 : jp 0x432829 ; jp 0x43279c ; ret
0x0000000000464df9 : jp 0x464e3e ; jmp 0x464dc3
0x000000000047b5ee : jp 0x47b603 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000488665 : jp 0x48866e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004a3351 : jp 0x4a334d ; call rax
0x00000000004c5e95 : jp 0x4c5e9d ; add al, bh ; push rcx ; cli ; jmp rsp
0x0000000000405529 : jrcxz 0x405531 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004349ba : jrcxz 0x4349b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349b9 : jrcxz 0x4349b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000442853 : jrcxz 0x442818 ; cmp r11d, 0xa ; je 0x442864 ; ret
0x000000000045b2d6 : jrcxz 0x45b34f ; ret
0x000000000045d2e8 : jrcxz 0x45d2e2 ; ret 0xf40
0x00000000004a3659 : jrcxz 0x4a3655 ; jmp qword ptr [rax]
0x00000000004a3658 : jrcxz 0x4a3656 ; jmp qword ptr [rax]
0x00000000004a3679 : jrcxz 0x4a3679 ; push rax ; in al, -8 ; call rax
0x00000000004b8225 : jrcxz 0x4b827f ; ret
0x0000000000409956 : js 0x409970 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409967 : js 0x409979 ; mov qword ptr [rsp], rax ; call 0x405c58
0x000000000040997d : js 0x40999f ; mov qword ptr [rsp], rax ; call 0x405c58
0x000000000040998e : js 0x4099a8 ; mov qword ptr [rsp], rax ; call 0x405c58
0x000000000040999f : js 0x4099b1 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099b5 : js 0x4099d7 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099c6 : js 0x4099e0 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099d7 : js 0x4099e9 ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099ed : js 0x409a0f ; mov qword ptr [rsp], rax ; call 0x405c58
0x00000000004099fe : js 0x409a18 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409a0f : js 0x409a21 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409a25 : js 0x409a47 ; mov qword ptr [rsp], rax ; call 0x405c58
0x0000000000409a36 : js 0x409a50 ; mov qword ptr [rsp], rax ; call 0x405c58
0x000000000041ac83 : js 0x41acb2 ; add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044264f : js 0x4426af ; pop rbp ; ret
0x00000000004426bf : js 0x44271f ; pop rbp ; ret
0x00000000004484ee : js 0x44853f ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044b0d8 : js 0x44b129 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044bf38 : js 0x44bf89 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000471322 : js 0x47132b ; pop rbx ; ret
0x000000000047a76d : js 0x47a77b ; ret
0x000000000047b8af : js 0x47b8f4 ; call rsp
0x000000000047bbc4 : js 0x47bc09 ; call rsp
0x000000000047bd43 : js 0x47bd88 ; call rsp
0x000000000047bd83 : js 0x47bdc8 ; call rsp
0x000000000047bd7e : js 0x47bdcf ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047bf46 : js 0x47bf8b ; call rsp
0x000000000047bf8b : js 0x47bfd0 ; call rsp
0x000000000049c515 : js 0x49c522 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c522 : js 0x49c52e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a3d3d : js 0x4a3d3a ; jmp qword ptr [rax]
0x00000000004c3581 : js 0x4c357d ; call qword ptr [rcx]
0x000000000041fd7d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004b59f8 : lahf ; and eax, 0x47 ; add byte ptr [rax], al ; ret 0x4722
0x00000000004711bf : lahf ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000045c8aa : lahf ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004ba903 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000473edb : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042b90d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004405a8 : lahf ; ret
0x0000000000485ecc : lahf ; ret 0x2941
0x000000000040fcbe : lahf ; ret 0x3841
0x00000000004405ae : lahf ; ret 0x3845
0x00000000004b815d : lahf ; ret 0x871e
0x00000000004840a1 : lahf ; ret 0xb60f
0x0000000000486b38 : lahf ; ret 0xd129
0x0000000000486baf : lahf ; ret 0xd629
0x0000000000486ac1 : lahf ; ret 0xd729
0x000000000043e369 : lahf ; ret 0xea81
0x000000000049b876 : lahf ; ret 0xf45
0x000000000042bf9d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a35cf : lcall ptr [rax] ; loopne 0x4a35cf ; jmp rax
0x00000000004bddb3 : lcall ptr [rax] ; ret
0x00000000004110c3 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000048832a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044cb93 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004519b2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000410f0d : lcall ptr [rbx + 0x5d] ; ret
0x0000000000474966 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000041fff3 : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004a357b : lcall ptr [rbx] ; ret
0x00000000004bde83 : lcall ptr [rdx - 0x34] ; std ; jmp rsp
0x00000000004bde7f : lcall ptr [rdx - 0x34] ; std ; lcall ptr [rdx - 0x34] ; std ; jmp rsp
0x0000000000435046 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004135f4 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000415c0b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000046b15b : lea eax, dword ptr [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x000000000043fecf : lea eax, dword ptr [rax + rax] ; ret
0x0000000000426034 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000426044 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000426014 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000415c0c : lea eax, dword ptr [rax - 1] ; ret
0x00000000004659ed : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000043d9c4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043ba3c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000043ba51 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043ba6f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043ba8f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000043bab2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043bad1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000043baf1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000043bb11 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000043bb34 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000043bb59 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000043bb77 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000043bb97 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000043bbb3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000043bbd3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000043bbf3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000043bc13 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043b98d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000043b9ad : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000043b9cf : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000043b9ef : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043ba0f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000043ba29 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000043b8d7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000043b8ea : lea eax, dword ptr [rdi + 2] ; ret
0x000000000043b8f5 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000043b908 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043b91d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043b93b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000043b947 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043b95a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043b96f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000426069 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000426079 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000425f63 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce37 : lea eax, dword ptr [rdi + rax] ; ret
0x00000000004658e9 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000004781d8 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x4781f1 ; ret
0x000000000043b8c3 : lea eax, dword ptr [rdi] ; ret
0x000000000043aead : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043aecd : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043aeef : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043af0f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043af2f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000043adbf : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000043ade7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043adfd : lea eax, dword ptr [rdx + 2] ; ret
0x000000000043ae15 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043ae2b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ae3d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043ae5b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000043ad67 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043ae6d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043ae8d : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000415bfe : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043e43c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004170e6 : lea eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000043add5 : lea eax, dword ptr [rdx] ; ret
0x0000000000426c57 : lea eax, dword ptr [rip + 0x12ad3] ; ret
0x0000000000423727 : lea eax, dword ptr [rip + 0x14853] ; ret
0x00000000004260c9 : lea eax, dword ptr [rip + 0x15e71] ; ret
0x00000000004266a3 : lea eax, dword ptr [rip + 0x17647] ; ret
0x00000000004212b4 : lea eax, dword ptr [rip + 0x1a966] ; ret
0x00000000004260ad : lea eax, dword ptr [rip + 0x1d] ; ret
0x0000000000426d73 : lea eax, dword ptr [rip + 0x67] ; ret
0x00000000004260c1 : lea eax, dword ptr [rip + 0x8449] ; ret
0x0000000000421507 : lea eax, dword ptr [rip + 3] ; ret
0x0000000000426dc6 : lea eax, dword ptr [rip + 4] ; ret
0x00000000004c533d : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044c7d0 : lea eax, dword ptr [rsp + 0x88] ; call r15
0x0000000000443946 : lea ebp, dword ptr [rax] ; add dh, dh ; ret 0x7420
0x000000000047bf3f : lea ebx, dword ptr [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8a11 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049ca45 : lea ebx, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004668f0 : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000469952 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0x469963
0x000000000042fbe7 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043b15e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000045298f : lea ecx, dword ptr [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000463f71 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a460 : lea ecx, dword ptr [rdx] ; jmp 0x47a4b6
0x000000000047ff70 : lea ecx, dword ptr [rdx] ; jmp 0x47ffc6
0x000000000046aed7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000464ea7 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000464f80 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466a05 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466d20 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466c1e : lea ecx, dword ptr [rsp + 0x60] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046f9a6 : lea edi, dword ptr [rax + 0x6cb1e0] ; call rdx
0x00000000004021ac : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000040e09c : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000426846 : lea edi, dword ptr [rdi + 0x10] ; jne 0x426838 ; mov rax, rdi ; ret
0x000000000042c2a6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x42c296 ; ret
0x000000000047b8ac : lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047bc52 : lea edi, dword ptr [rsp + 0x80] ; call r12
0x000000000047ba5f : lea edi, dword ptr [rsp + 0x88] ; call r14
0x00000000004164bb : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000465150 : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fcb4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000464cfd : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000421596 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000004300a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000463eb1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000464ea2 : lea edx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466aad : lea edx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000467110 : lea edx, dword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c6f6 : lea edx, dword ptr [rsp + 0x80] ; call r12
0x0000000000485f8c : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048cdc5 : lea esi, dword ptr [rax*8 + 0x4b7ea8] ; call 0x479099
0x0000000000466c23 : lea esi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004668eb : lea esi, dword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000466a0a : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046b27d : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f4d1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000047404e : lea esp, dword ptr [rip + 0x6894800] ; ret
0x0000000000421595 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040e09b : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000044c7cf : lea r8, qword ptr [rsp + 0x88] ; call r15
0x000000000042fbe6 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000047a45f : lea r9, qword ptr [rdx] ; jmp 0x47a4b7
0x000000000047ff6f : lea r9, qword ptr [rdx] ; jmp 0x47ffc7
0x0000000000464ea6 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000464f7f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000426033 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426043 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000426013 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004659ec : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000043d9c3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043ba3b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043ba50 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043ba6e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043ba8e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bab1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043bad0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043baf0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043bb10 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043bb33 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043bb58 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bb76 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043bb96 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043bbb2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043bbd2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043bbf2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043bc12 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b98c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b9ac : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b9ce : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b9ee : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043ba0e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043ba28 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b8d6 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b8e9 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b8f4 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b907 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b91c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b93a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b946 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b959 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b96e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000426068 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426078 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425f62 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce36 : lea rax, qword ptr [rdi + rax] ; ret
0x00000000004658e8 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000043b8c2 : lea rax, qword ptr [rdi] ; ret
0x000000000043aeac : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043aecc : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043aeee : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043af0e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043af2e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043adbe : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043ade6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043adfc : lea rax, qword ptr [rdx + 2] ; ret
0x000000000043ae14 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ae2a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043ae3c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043ae5a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000043ad66 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043ae6c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043ae8c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000043add4 : lea rax, qword ptr [rdx] ; ret
0x0000000000426c56 : lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000423726 : lea rax, qword ptr [rip + 0x14853] ; ret
0x00000000004260c8 : lea rax, qword ptr [rip + 0x15e71] ; ret
0x00000000004266a2 : lea rax, qword ptr [rip + 0x17647] ; ret
0x00000000004212b3 : lea rax, qword ptr [rip + 0x1a966] ; ret
0x00000000004260ac : lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000426d72 : lea rax, qword ptr [rip + 0x67] ; ret
0x00000000004260c0 : lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000421506 : lea rax, qword ptr [rip + 3] ; ret
0x0000000000426dc5 : lea rax, qword ptr [rip + 4] ; ret
0x000000000049ca44 : lea rbx, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043b15d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004668ef : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000469951 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0x469964
0x000000000046aed6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046f9a5 : lea rdi, qword ptr [rax + 0x6cb1e0] ; call rdx
0x00000000004021ab : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000426845 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x426839 ; mov rax, rdi ; ret
0x000000000042c2a5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c297 ; ret
0x000000000047b8ab : lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000047bc51 : lea rdi, qword ptr [rsp + 0x80] ; call r12
0x000000000047ba5e : lea rdi, qword ptr [rsp + 0x88] ; call r14
0x000000000042fcb3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004300a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046710f : lea rdx, qword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c6f5 : lea rdx, qword ptr [rsp + 0x80] ; call r12
0x0000000000466c22 : lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004668ea : lea rsi, qword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000466a09 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000046b27c : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a3715 : leave ; clc ; call rax
0x00000000004881b6 : leave ; cmove rax, rdx ; ret
0x000000000047aec5 : leave ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000043d7a0 : leave ; jne 0x43d793 ; ret
0x000000000043d850 : leave ; jne 0x43d843 ; ret
0x000000000043db10 : leave ; jne 0x43db07 ; sub rax, 1 ; ret
0x0000000000466e5a : leave ; jne 0x466e17 ; mov rax, rdx ; ret
0x000000000046b132 : leave ; jne 0x46b0e6 ; xor eax, eax ; ret
0x0000000000499fb8 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000444a00 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004009ff : leave ; ret
0x0000000000413fd1 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00000000004be2af : ljmp ptr [rax + rbx*8 - 3] ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004be30f : ljmp ptr [rax] ; add al, 0xfe ; call rax
0x00000000004be30b : ljmp ptr [rax] ; add al, 0xfe ; ljmp ptr [rax] ; add al, 0xfe ; call rax
0x00000000004bdd9f : ljmp ptr [rax] ; ret 0xfffd
0x00000000004bde0b : ljmp ptr [rbp - 0x38] ; std ; jmp qword ptr [rbx - 0x1f000238]
0x000000000040f930 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a755 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e8ee : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004009f7 : lock add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x000000000047fdef : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004233f0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d120 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048b6ce : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004783af : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4783c9 ; ret
0x00000000004bb09d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004c396c : lodsb al, byte ptr [rsi] ; push rbp ; add byte ptr [rax], al ; jo 0x4c3913 ; clc ; call qword ptr [rdx]
0x000000000046b134 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x000000000047ac6a : lodsd eax, dword ptr [rsi] ; add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x00000000004c9185 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; mov byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x0000000000495330 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479032 : lodsd eax, dword ptr [rsi] ; ret
0x00000000004055b9 : loop 0x4055c1 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405621 : loop 0x405629 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041bdea : loop 0x41bdf9 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x418049
0x000000000042e4fd : loop 0x42e535 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043492a : loop 0x434925 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434929 : loop 0x434926 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045c85b : loop 0x45c7e8 ; ret
0x000000000047614e : loop 0x476111 ; ret
0x0000000000476332 : loop 0x47633d ; add rdx, rax ; jmp 0x47634d
0x00000000004a36d9 : loop 0x4a36d5 ; jmp qword ptr [rax]
0x00000000004a36d8 : loop 0x4a36d6 ; jmp qword ptr [rax]
0x00000000004bb43a : loop 0x4bb48f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042c842 : loope 0x42c899 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000043489a : loope 0x434895 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434899 : loope 0x434896 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043be4b : loope 0x43be55 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043e53e : loope 0x43e535 ; ret
0x000000000044424f : loope 0x44425a ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000046666e : loope 0x466683 ; je 0x466694 ; ret
0x000000000046aa9c : loope 0x46aa29 ; ret 0xf631
0x0000000000478ec7 : loope 0x478f19 ; mov dword ptr [rdi], ecx ; ret
0x0000000000478ef8 : loope 0x478f4b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000478f6d : loope 0x478fc0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049ecb6 : loope 0x49ed15 ; ret
0x00000000004a3500 : loope 0x4a34cc ; clc ; push qword ptr [rcx - 0x3c] ; clc ; call qword ptr [rcx]
0x00000000004a3655 : loope 0x4a3655 ; inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a3675 : loope 0x4a3671 ; call qword ptr [rax]
0x00000000004a36f9 : loope 0x4a36f5 ; call rax
0x0000000000400d10 : loopne 0x400d27 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004129e9 : loopne 0x412a50 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412a97 : loopne 0x412afe ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004145e6 : loopne 0x41464a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416cb5 : loopne 0x416d19 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042092b : loopne 0x42098d ; pop rbp ; pop r12 ; ret
0x000000000042657d : loopne 0x4265e1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000426612 : loopne 0x426676 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042cafd : loopne 0x42cb55 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430101 : loopne 0x430118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430100 : loopne 0x430119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430251 : loopne 0x430268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430250 : loopne 0x430269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004303a1 : loopne 0x4303b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004303a0 : loopne 0x4303b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304f1 : loopne 0x430508 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304f0 : loopne 0x430509 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430641 : loopne 0x430658 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430640 : loopne 0x430659 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430791 : loopne 0x4307a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430790 : loopne 0x4307a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308e1 : loopne 0x4308f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308e0 : loopne 0x4308f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a2f : loopne 0x430a46 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a2e : loopne 0x430a47 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b81 : loopne 0x430b98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b80 : loopne 0x430b99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cd1 : loopne 0x430ce8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cd0 : loopne 0x430ce9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e21 : loopne 0x430e38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e20 : loopne 0x430e39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f71 : loopne 0x430f88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f70 : loopne 0x430f89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310c1 : loopne 0x4310d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310c0 : loopne 0x4310d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431211 : loopne 0x431228 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431210 : loopne 0x431229 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431361 : loopne 0x431378 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431360 : loopne 0x431379 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004327a2 : loopne 0x43276f ; jp 0x43282b ; jp 0x43279e ; ret
0x000000000043dcc5 : loopne 0x43dd16 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dcc4 : loopne 0x43dd17 ; sub eax, edx ; vzeroupper ; ret
0x000000000043f37c : loopne 0x43f3d1 ; add byte ptr [rax], al ; ret
0x00000000004425da : loopne 0x44262d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004428b8 : loopne 0x4428cd ; cmp eax, 4 ; je 0x4428c7 ; ret
0x0000000000444252 : loopne 0x4442b2 ; pop rbp ; ret
0x000000000045a7cd : loopne 0x45a75a ; ret 0xe680
0x0000000000461d9b : loopne 0x461dff ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462153 : loopne 0x4621b5 ; pop rbp ; pop r12 ; ret
0x000000000046217d : loopne 0x4621df ; pop rbp ; pop r12 ; ret
0x000000000046283b : loopne 0x46289d ; pop rbp ; pop r12 ; ret
0x00000000004628ad : loopne 0x46290f ; pop rbp ; pop r12 ; ret
0x0000000000463e7e : loopne 0x463e17 ; mov eax, 0xffffffff ; ret
0x0000000000478a0d : loopne 0x478a16 ; sub eax, 1 ; ret
0x000000000047aec4 : loopne 0x47ae94 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x00000000004a3388 : loopne 0x4a331d ; clc ; push qword ptr [rax + 0x79] ; clc ; jmp rax
0x00000000004a3450 : loopne 0x4a33f5 ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004a3470 : loopne 0x4a341e ; clc ; inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004a35b4 : loopne 0x4a3580 ; clc ; push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a35d1 : loopne 0x4a35cd ; jmp rax
0x00000000004a35f1 : loopne 0x4a35ed ; call rax
0x00000000004a3664 : loopne 0x4a3651 ; clc ; jmp rax
0x00000000004a3664 : loopne 0x4a3655 ; clc ; jmp rax
0x00000000004a3668 : loopne 0x4a3657 ; clc ; jmp rax
0x00000000004a3695 : loopne 0x4a3691 ; call rax
0x00000000004a36e4 : loopne 0x4a36d0 ; clc ; jmp rax
0x00000000004a36e4 : loopne 0x4a36d4 ; clc ; jmp rax
0x00000000004a36d5 : loopne 0x4a36d5 ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a36e8 : loopne 0x4a36d6 ; clc ; jmp rax
0x00000000004a36ec : loopne 0x4a36e0 ; clc ; push qword ptr [rax - 0x22] ; clc ; jmp qword ptr [rax]
0x00000000004a36f5 : loopne 0x4a36f5 ; push rax ; loope 0x4a36f9 ; call rax
0x00000000004a374c : loopne 0x4a372c ; clc ; jmp qword ptr [rax]
0x00000000004a3d14 : loopne 0x4a3d93 ; stc ; inc dword ptr [rax] ; ja 0x4a3d1b ; call qword ptr [rax]
0x00000000004a3d38 : loopne 0x4a3db8 ; stc ; inc dword ptr [rax] ; js 0x4a3d3f ; jmp qword ptr [rax]
0x00000000004a3d90 : loopne 0x4a3e15 ; stc ; push rax ; jl 0x4a3d97 ; call qword ptr [rax]
0x00000000004b8a14 : loopne 0x4b89f4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bdcdc : loopne 0x4bdd49 ; std ; jmp qword ptr [rax + 0x20fffd85]
0x00000000004c0730 : loopne 0x4c079d ; cmc ; call qword ptr [rdx]
0x00000000004c3dc0 : loopne 0x4c3d7d ; clc ; jmp qword ptr [rsi]
0x00000000004c4660 : loopne 0x4c46e4 ; stc ; call rdx
0x00000000004b842a : mov ah, 0x13 ; ret
0x00000000004a3944 : mov ah, 0x19 ; stc ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x000000000043f3a8 : mov ah, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004b88d0 : mov ah, 0xa5 ; ret
0x00000000004b8224 : mov ah, bl ; push rsi ; ret
0x000000000049a10a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c403 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000458618 : mov al, 0 ; add cl, ch ; ret
0x00000000004c70c0 : mov al, 0x18 ; sti ; call qword ptr [rax]
0x00000000004a39a8 : mov al, 0x1c ; stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004c2fe0 : mov al, 0x3b ; clc ; call qword ptr [rax]
0x00000000004c17b0 : mov al, 0x3f ; idiv bh ; ret
0x000000000049c221 : mov al, 0x48 ; add esp, 0x18 ; ret
0x0000000000443638 : mov al, 0x51 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004a3d08 : mov al, 0x76 ; stc ; inc eax ; jbe 0x4a3d0f ; call rax
0x00000000004a3d60 : mov al, 0x7b ; stc ; inc eax ; jnp 0x4a3d67 ; jmp rax
0x00000000004a3d88 : mov al, 0x7c ; stc ; call rax
0x00000000004a3dac : mov al, 0x7d ; stc ; call rax
0x00000000004c4560 : mov al, 0x7d ; stc ; call rdi
0x00000000004c6170 : mov al, 0x7f ; cli ; jmp rdi
0x00000000004bdcd8 : mov al, 0x80 ; std ; jmp rax
0x00000000004bddcc : mov al, 0xc2 ; std ; ljmp ptr [rax] ; ret 0xfffd
0x0000000000425d3d : mov al, 0xd6 ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004ba6d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004bf9ed : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c5ac5 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000439646 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439664 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043add0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439620 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040f92f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439630 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435661 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000044cf9b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044cb1e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043bce8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004683f0 : mov bh, 0x84 ; adc bl, byte ptr [rsi - 0x39] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004b9704 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004c2910 : mov bh, 1 ; ret
0x00000000004bae13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a3381 : mov bh, al ; call qword ptr [rax - 0x1f000775]
0x00000000004bdced : mov bh, ch ; jmp qword ptr [rax + 0x20fffd8b]
0x0000000000446ac8 : mov bh, dl ; pop rcx ; add byte ptr [rax - 0x7f], cl ; ret 0x59e0
0x000000000043d5de : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000466e5c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e249 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004ba7e3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004c3c81 : mov bl, 0xf8 ; call qword ptr [rdi]
0x000000000041ca50 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x00000000004118ec : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000041ca51 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x00000000004471e8 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000004118ed : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004c9188 : mov byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x000000000047ba62 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044c7d3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c1970 : mov byte ptr [rcx], al ; ret
0x000000000043ba38 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b3a8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043baae : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b3fe : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bb30 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b480 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b8e6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b2c6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043b902 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b2e2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b323 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000043172b : mov byte ptr [rdi - 1], dl ; ret
0x00000000004328ac : mov byte ptr [rdi], cl ; ret
0x000000000043b8c0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b2a0 : mov byte ptr [rdi], dh ; ret
0x00000000004356d3 : mov byte ptr [rdi], dl ; ret
0x000000000043adf9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000439649 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043ae27 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000439667 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043add2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439622 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440d04 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049aac0 : mov byte ptr [rip + 0x232099], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000452183 : mov byte ptr [rsi], al ; jne 0x452167 ; mov rax, rsi ; ret
0x00000000004520ff : mov byte ptr [rsi], dl ; jne 0x4520ef ; mov rax, rsi ; ret
0x00000000004c6eb8 : mov byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x000000000047a957 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b8222 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9563 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ba8ff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb2aa : mov ch, 0xab ; ret
0x0000000000442007 : mov ch, 0xbf ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000042120c : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042f466 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bdce9 : mov ch, bh ; jmp qword ptr [rax]
0x0000000000425fcb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400967 : mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000470dc4 : mov cl, 0x6c ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004a34f0 : mov cl, 0xc1 ; clc ; push qword ptr [rcx] ; ret 0xfff8
0x000000000044f41b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000428fe5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000421594 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ba6d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004328aa : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046666b : mov cl, dl ; and cl, 0xf ; je 0x466697 ; ret
0x00000000004ba98c : mov cs, edi ; ret 0x8b36
0x000000000042b41e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b2c0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000411dce : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004150d0 : mov dh, 0 ; pop rbx ; ret
0x000000000041304b : mov dh, 0 ; ret
0x00000000004356d1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004261a4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dba0 : mov dh, 0x17 ; test dl, dl ; jne 0x40db86 ; ret
0x00000000004a37d0 : mov dh, 0x18 ; stc ; jmp qword ptr [rsi]
0x00000000004a37d8 : mov dh, 0x1e ; stc ; inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x0000000000461eee : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040dad5 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000462523 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043d1b1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d1a1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d171 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043d191 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d181 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000448b70 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000049a1e4 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b96c2 : mov dh, 0x4e ; ret 0x474c
0x000000000046d8e5 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462ac9 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043d1b5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043d1a5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043d175 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043d185 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d327 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d2aa : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000046e477 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044ed2f : mov dh, 0xb2 ; fsub dword ptr [rcx + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000044f6bd : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b02d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047add7 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ac96 : mov dh, 0xc0 ; ret
0x000000000043e3b8 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043e3e0 : mov dh, 0xc2 ; pop rbx ; ret
0x0000000000413f0e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ba904 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004261ca : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000004a0906 : mov dh, 0xd6 ; idiv edi ; ret
0x000000000049b4df : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000422941 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e544 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466842 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049cf6a : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414d6e : mov dh, 2 ; pop rbx ; ret
0x0000000000411de1 : mov dh, 2 ; ret
0x000000000042e541 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004261a1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422944 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000040f8f4 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e53c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004a3380 : mov dil, al ; call qword ptr [rax - 0x1f000775]
0x00000000004a387c : mov dl, 0x1a ; stc ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x0000000000476841 : mov dl, 0x69 ; and eax, 0x38754000 ; ret
0x00000000004317b0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000047c944 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b5ec : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418bd3 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000469fc3 : mov dword ptr [r12], 1 ; jmp 0x469f98
0x0000000000400d12 : mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004667b7 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435856 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435841 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463a49 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463a89 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004649e9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463a4d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464a87 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446ad8 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446adb : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004156ba : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442d86 : mov dword ptr [rax + 8], edx ; ret
0x00000000004267ae : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049cf33 : mov dword ptr [rax - 0x7d], ecx ; ret
0x0000000000480592 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044db58 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041bfc7 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041c8d8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a4d8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c6d45 : mov dword ptr [rax], eax ; add byte ptr [rax + 0xb], ch ; sti ; jmp rsi
0x0000000000400d13 : mov dword ptr [rax], eax ; pop rbx ; ret
0x0000000000443d9d : mov dword ptr [rax], ebp ; add cl, ch ; ret
0x0000000000463f75 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000487168 : mov dword ptr [rax], edi ; jmp 0x487131
0x000000000047af85 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000483963 : mov dword ptr [rax], edx ; jmp 0x48392c
0x0000000000463eb5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047af79 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464d01 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000461926 : mov dword ptr [rbp - 0x10d0], edx ; call 0x41dc28
0x000000000045658c : mov dword ptr [rbp - 0x4d8], edx ; call 0x4427a8
0x0000000000454f58 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000472581 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x000000000047276a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x00000000004599bf : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471d30 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000491721 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411b12 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411b11 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d451 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478605 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411be7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046a8b8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46a88e
0x000000000047863e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047463f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004123e9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004785a3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487f45 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000414c03 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c983 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044f6bf : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414c7e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416401 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413262 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463ad4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004648e8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411b77 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000414f35 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d467 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004150cc : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e026 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000414fdc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488669 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004649ec : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414c06 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000004667b8 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435857 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435842 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435831 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000046b1bc : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000485489 : mov dword ptr [rcx], eax ; jmp 0x485452
0x00000000004c7bd2 : mov dword ptr [rcx], eax ; ret
0x000000000049c34a : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000417492 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043ba4d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043ba8b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bb0d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b3fb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b47d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b3bd : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4c0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4e0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b4a1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043bb73 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b4c3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414b93 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043bb55 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bb93 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b4a5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046743d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470d15 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470ce7 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042ca71 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414bc3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004187b0 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c3a1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043bacd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b41d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043ba6b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043baed : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b3db : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435515 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435358 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355f8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004354a5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004352e8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b937 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435435 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435278 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b307 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004187b3 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043b919 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000435208 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b2f9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043b9cb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435198 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b36b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043b9eb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435128 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b37b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043b989 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043ba0b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004350b8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b349 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414b97 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000479004 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043b9a9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b96b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000047a3c4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b33b : mov dword ptr [rdi + 8], edx ; ret
0x00000000004328a3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000004267b5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004267be : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c359 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000431475 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004314b3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478f6f : mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004317fc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b68 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319dc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ae8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bcc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a68 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d9d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f9d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434949 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043219d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348b9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431b7d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431995 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431b79 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431f59 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043162f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f56 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432156 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432356 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431479 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004314b7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043162c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431728 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431674 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434be8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000478ef4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478ffe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c496 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043b905 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b957 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b8e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b2c4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043b935 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b305 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b987 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b347 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b9a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b357 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004267b3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043dc49 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b368 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b378 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b388 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004267bb : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b2f6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b338 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043dc56 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042c847 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043b8d4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b8f2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b944 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353c4 : mov dword ptr [rdi], edx ; ret
0x000000000043583f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000043288b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a56d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043582e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043286e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435853 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004328a0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a593 : mov dword ptr [rdi], esi ; ret
0x000000000040f8f3 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042caff : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b5ed : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043ae57 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000439687 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043ae39 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439679 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043aeeb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043ae69 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000439699 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043af0b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043ae89 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00000000004396a9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043aea9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043af2b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004396b9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043aec9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043adbb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043960b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416556 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047a994 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046ad3f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000499fec : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041adbc : mov dword ptr [rdx], eax ; jmp 0x41abdb
0x000000000043ade4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000043ae12 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ad64 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000412391 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc2a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a56f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412bf0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004395b4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047af65 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004164c2 : mov dword ptr [rdx], eax ; ret
0x0000000000463d96 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049ecaf : mov dword ptr [rip + 0x22d8cb], ebx ; jne 0x49eca1 ; pop rbx ; ret
0x000000000044f505 : mov dword ptr [rip + 0x27c52d], edx ; je 0x44f519 ; ret
0x0000000000444186 : mov dword ptr [rip + 0x285e0c], edx ; pop rbx ; ret
0x000000000040154a : mov dword ptr [rip + 0x2c8b40], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2ca9a5], eax ; pop rbp ; pop r12 ; ret
0x000000000049e077 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043dc59 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043dc4b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046e019 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c38b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000474052 : mov dword ptr [rsi], eax ; ret
0x000000000049ca93 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041b59b : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418bd4 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b596 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047bd40 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047bf43 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047be92 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x0000000000440446 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041b652 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047824e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6cb140 ; call rax
0x0000000000491956 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f635 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000469fc4 : mov dword ptr [rsp], 1 ; jmp 0x469f97
0x0000000000409959 : mov dword ptr [rsp], eax ; call 0x405c55
0x000000000041b657 : mov dword ptr [rsp], ecx ; call rdx
0x000000000047c943 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044db57 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041c8d7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a4d7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000487167 : mov dword ptr fs:[rax], edi ; jmp 0x487132
0x0000000000483962 : mov dword ptr fs:[rax], edx ; jmp 0x48392d
0x000000000046ad8c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000485488 : mov dword ptr fs:[rcx], eax ; jmp 0x485453
0x000000000047a993 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000412390 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc29 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000043288a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431990 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b2b0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004009fa : mov eax, 0 ; leave ; ret
0x000000000043e489 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000420fd4 : mov eax, 0x16 ; je 0x420fe7 ; ret
0x0000000000421170 : mov eax, 0x16 ; ret
0x000000000043e482 : mov eax, 0x20 ; pop rbx ; ret
0x000000000043e47b : mov eax, 0x30 ; pop rbx ; ret
0x000000000043e474 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426669 : mov eax, 0x4356f0 ; ret
0x0000000000425d3c : mov eax, 0x43d6b0 ; cmove rax, rdx ; ret
0x00000000004b881b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000049a133 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x0000000000426c1a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000004bc3b1 : mov eax, 0x4b ; add byte ptr [rax], al ; ret
0x000000000043e46d : mov eax, 0x60 ; pop rbx ; ret
0x000000000046ab10 : mov eax, 0x66 ; syscall ; ret
0x000000000046ab30 : mov eax, 0x68 ; syscall ; ret
0x000000000046ab20 : mov eax, 0x6b ; syscall ; ret
0x000000000046ab40 : mov eax, 0x6c ; syscall ; ret
0x0000000000417c83 : mov eax, 0x6ca800 ; ret
0x000000000046f9a7 : mov eax, 0x6cb1e0 ; call rdx
0x000000000043e466 : mov eax, 0x80 ; pop rbx ; ret
0x0000000000474fbe : mov eax, 0x83004bc6 ; ret
0x0000000000410f21 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004671d0 : mov eax, 0xc9 ; syscall ; ret
0x0000000000442822 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000041fff6 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004110bf : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000004519ae : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410f09 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411b81 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc2c : mov eax, 0xffffffff ; ret
0x000000000047a58d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415532 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e9bb : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000444146 : mov eax, 1 ; ret
0x000000000049cbd0 : mov eax, 2 ; add rsp, 8 ; ret
0x00000000004666d1 : mov eax, 2 ; ret
0x000000000049e743 : mov eax, 3 ; je 0x49e758 ; ret
0x00000000004666e1 : mov eax, 3 ; ret
0x000000000049cbc0 : mov eax, 4 ; add rsp, 8 ; ret
0x00000000004666f1 : mov eax, 4 ; ret
0x0000000000466701 : mov eax, 5 ; ret
0x0000000000466711 : mov eax, 6 ; ret
0x0000000000466721 : mov eax, 7 ; ret
0x000000000049cba1 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043e45f : mov eax, 8 ; pop rbx ; ret
0x000000000049e755 : mov eax, 8 ; ret
0x0000000000463dcc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414cbc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410c33 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414e98 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004151b8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487bc3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004154dc : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000464e34 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047eabd : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478421 : mov eax, dword ptr [rax + 8] ; ret
0x000000000047402a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x474009 ; ret
0x000000000044f54f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455332 : mov eax, dword ptr [rax*8 + 0x4b2d80] ; jmp rax
0x0000000000455383 : mov eax, dword ptr [rax*8 + 0x4b2e80] ; jmp rax
0x0000000000457473 : mov eax, dword ptr [rax*8 + 0x4b2f80] ; jmp rax
0x0000000000455fa6 : mov eax, dword ptr [rax*8 + 0x4b3280] ; jmp rax
0x0000000000460181 : mov eax, dword ptr [rax*8 + 0x4b3700] ; jmp rax
0x00000000004614a5 : mov eax, dword ptr [rax*8 + 0x4b3800] ; jmp rax
0x0000000000461989 : mov eax, dword ptr [rax*8 + 0x4b3900] ; jmp rax
0x0000000000460217 : mov eax, dword ptr [rax*8 + 0x4b3c00] ; jmp rax
0x000000000049c2e6 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000499fe9 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000474969 : mov eax, dword ptr [rax] ; ret
0x00000000004408dc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000445347 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475e75 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471b21 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047af81 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000439684 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000439696 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004396a6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004396b6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004396c6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000042928a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042ab62 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043ae10 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000439650 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043ad61 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004395b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043ade1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439631 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464c7f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000004164d0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004164f8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0718 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a072f ; call rax
0x0000000000464e31 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416801 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a768 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a780 ; ret
0x000000000049c2f1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c371 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c3b1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c411 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c401 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c3c1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044db6c : mov eax, dword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004783b1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4783c7 ; ret
0x00000000004164bf : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e115 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e127 ; ret
0x000000000049e130 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e147 ; ret
0x000000000049e350 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e367 ; ret
0x000000000043e537 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e529 ; ret
0x0000000000428fe6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004171fe : mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410bb0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000463f77 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004100f0 : mov eax, dword ptr [rdx] ; ret
0x00000000004164b1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4164b0 ; ret
0x0000000000488630 : mov eax, dword ptr [rip + 0x244c2a] ; ret
0x000000000047404b : mov eax, dword ptr [rip + 0x258d17] ; mov qword ptr [rsi], rax ; ret
0x0000000000473fea : mov eax, dword ptr [rip + 0x258d80] ; ret
0x000000000044ca21 : mov eax, dword ptr [rip + 0x27fcd1] ; ret
0x00000000004456b1 : mov eax, dword ptr [rip + 0x287c11] ; ret
0x00000000004167e1 : mov eax, dword ptr [rip + 0x2b38d9] ; ret
0x000000000049cc0c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x0000000000473edc : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049cc41 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x0000000000463eb7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c3e6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c50 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000044734a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000447cad : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e097 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047883c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x00000000004786bd : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e5f4 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474968 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041cbc5 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a4b0 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041ca55 : mov eax, eax ; pop rbx ; ret
0x0000000000432985 : mov eax, eax ; ret
0x0000000000477952 : mov eax, eax ; sub eax, ecx ; ret
0x0000000000412b5a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046308b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004636d9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004636ac : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f623 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410f26 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047a503 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004132cd : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474c38 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000465f09 : mov eax, ebx ; jmp 0x465d63
0x000000000040f989 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa6e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fd4e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411beb : mov eax, ebx ; pop rbx ; ret
0x000000000047a3c7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046b0e5 : mov eax, ecx ; jne 0x46b13d ; ret
0x000000000046d763 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d739
0x000000000041bfce : mov eax, ecx ; ret
0x0000000000416811 : mov eax, edi ; ret
0x0000000000487eee : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b0f3 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041dcd8 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417495 : mov eax, edx ; add rsp, 8 ; ret
0x000000000047266f : mov eax, edx ; call rax
0x00000000004a3578 : mov eax, edx ; clc ; lcall ptr [rbx] ; ret
0x000000000047c91b : mov eax, edx ; jle 0x47c92d ; ret
0x0000000000462e4b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c29a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e662 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041787c : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f810 : mov eax, edx ; pop rbx ; ret
0x0000000000426d39 : mov eax, edx ; ret
0x00000000004789c7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046a903 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487d18 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb84 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000452104 : mov eax, esi ; ret
0x000000000043dcdb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x00000000004145e5 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042092a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004145e4 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045a4af : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a3e9 : mov eax, r8d ; ret
0x0000000000477951 : mov eax, r8d ; sub eax, ecx ; ret
0x00000000004402ff : mov ebp, 0x49fffddc ; mov edi, dword ptr [rbp] ; call rbx
0x0000000000467ae7 : mov ebp, 0x83000001 ; call 0xffffffffc40dc32a
0x00000000004a34a5 : mov ebp, 0xbe30fff8 ; clc ; jmp qword ptr [rax]
0x00000000004ae484 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b7cdd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465858 : mov ebp, 0xf80148c0 ; ret
0x0000000000465adc : mov ebp, 0xf80148c6 ; ret
0x00000000004b9446 : mov ebp, 0xfb67d10d ; ret
0x00000000004554ec : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455a71 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045cfbf : mov ebp, 0xfffffb60 ; call rax
0x000000000047630f : mov ebp, 0xffffff78 ; call rax
0x000000000040154d : mov ebp, dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000049c68a : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000042048f : mov ebp, eax ; call 0x41c724
0x000000000043ff37 : mov ebp, eax ; call rax
0x00000000004408d9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004789cd : mov ebp, ecx ; nop ; jmp rdx
0x000000000047d5c7 : mov ebp, edi ; mov r15, rax ; jmp 0x47d5e3
0x0000000000440cdf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004021ad : mov ebx, 0x80 ; call rax
0x0000000000442854 : mov ebx, 0xafb8341 ; je 0x442863 ; ret
0x00000000004b7cdb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400930 : mov ebx, 0xe0ff006c ; nop dword ptr [rax] ; pop rbp ; ret
0x0000000000445c86 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x445c69 ; jmp 0x445c5b
0x0000000000476af9 : mov ebx, dword ptr [rsp] ; add rsp, 0x18 ; jmp r11
0x0000000000476e68 : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x0000000000476f7a : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440ce6 : mov ebx, eax ; call rax
0x000000000044fa4f : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044ef46 : mov ebx, edi ; test rax, rax ; je 0x44ef56 ; call rax
0x00000000004bf224 : mov ecx, 0x41380e0a ; ret
0x00000000004bc411 : mov ecx, 0x4b ; add byte ptr [rax], al ; ret 0x4bb9
0x00000000004b7cd9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000043583c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042fbe5 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000464e0b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000428fe3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000431f53 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432153 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432353 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b2e0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b321 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435513 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004354a3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435433 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435355 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435275 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435205 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435195 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435125 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004350b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355f5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b2c1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047353d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478517 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004784a5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000466f98 : mov ecx, edi ; call rbx
0x000000000046d766 : mov ecx, edi ; mov r15, rax ; jmp 0x46d736
0x00000000004329a1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004329a4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004154d7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000044497b : mov ecx, esi ; call rbx
0x0000000000473ec3 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473ea8 ; ret
0x0000000000442032 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x00000000004a0947 : mov edi, 0x22 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004425b0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000441bed : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041adfc : mov edi, 0x4a231c ; call 0x417037
0x000000000041ade3 : mov edi, 0x4a234b ; call 0x417037
0x00000000004654ca : mov edi, 0x4b287c ; call 0x4017c7
0x000000000040095c : mov edi, 0x4be3c0 ; call rax
0x0000000000470d56 : mov edi, 0x6cb100 ; call rax
0x0000000000470dc2 : mov edi, 0x6cb100 ; pop rbx ; pop rbp ; jmp rax
0x00000000004783df : mov edi, 0x6cb140 ; add rsp, 8 ; jmp rax
0x0000000000443e55 : mov edi, 0x6cb140 ; call rax
0x00000000004768ff : mov edi, 0x6cb140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cbb50 ; jmp rax
0x0000000000402f25 : mov edi, 0x6cbfe0 ; call rax
0x0000000000402c2f : mov edi, 0x6cbfe0 ; call rbx
0x0000000000402cd6 : mov edi, 0x6cc060 ; call rax
0x000000000040357c : mov edi, 0x6cc0a0 ; call r15
0x0000000000403534 : mov edi, 0x6cc0a0 ; call rax
0x0000000000445751 : mov edi, 0x6cc6d0 ; call rax
0x000000000043e62a : mov edi, 0x6cc720 ; call rax
0x0000000000402c28 : mov edi, 0x6cc720 ; call rbx
0x000000000047ab42 : mov edi, 0x6cc9c0 ; call rax
0x000000000047ac6d : mov edi, 0x6cc9c4 ; call rdx
0x00000000004726ff : mov edi, 0x7f ; call 0x43e9e7
0x0000000000442016 : mov edi, 0x8b48fffd ; jge 0x442024 ; call rbx
0x0000000000442008 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x0000000000441ffa : mov edi, 0x8b49fffd ; jge 0x442008 ; call rbx
0x00000000004a35a5 : mov edi, 0xc060fff8 ; clc ; jmp rax
0x000000000049c03a : mov edi, 1 ; call r14
0x0000000000401667 : mov edi, 1 ; call rax
0x000000000049c92c : mov edi, 1 ; jmp rax
0x0000000000409955 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405c59
0x000000000040997c : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405c59
0x0000000000409966 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405c59
0x0000000000440443 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045cfbe : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047630e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c5ee : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466845 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e01d : mov edi, dword ptr [rbp] ; call r14
0x000000000044009a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000442031 : mov edi, dword ptr [rdi + 0x1f0ffffd] ; add bl, dh ; ret
0x0000000000476e98 : mov edi, dword ptr [rdi + 0x28] ; call r11
0x0000000000440048 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000464df8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464dc4
0x00000000004b9706 : mov edi, dword ptr [rdx] ; ret
0x000000000047ae88 : mov edi, dword ptr [rip + 0x251b36] ; call rax
0x000000000047ad4b : mov edi, dword ptr [rip + 0x251c73] ; jmp rax
0x0000000000440007 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000447051 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000044052f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447345 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447ca8 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044b89a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x000000000044808e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004477c5 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x00000000004484f0 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000446e52 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000447879 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044b0da : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004496f8 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449b38 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448a78 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000448e1f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400bf7 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400c4b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000440490 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049df1a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000408632 : mov edi, eax ; call 0x41dfc8
0x000000000042117a : mov edi, eax ; call rcx
0x000000000046d769 : mov edi, eax ; jmp 0x46d733
0x000000000047d5ca : mov edi, eax ; jmp 0x47d5e0
0x00000000004a3385 : mov edi, eax ; jmp rax
0x00000000004520fd : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4520f1 ; mov rax, rsi ; ret
0x000000000042048c : mov edi, eax ; mov rbp, rax ; call 0x41c727
0x0000000000420518 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049ed1c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040ffbd : mov edi, ebp ; call 0x42c234
0x000000000047e3a6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e25c : mov edi, ebp ; call r14
0x000000000044fa97 : mov edi, ebp ; call r15
0x000000000041ea96 : mov edi, ebp ; call rax
0x0000000000440d30 : mov edi, ebp ; call rbx
0x00000000004bdcf1 : mov edi, ebp ; jmp qword ptr [rax]
0x0000000000450014 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f3f7 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000041bdef : mov edi, ebx ; call 0x418044
0x000000000044c9d7 : mov edi, ebx ; call r12
0x0000000000444c4d : mov edi, ebx ; call r14
0x00000000004627f9 : mov edi, ebx ; call r8
0x00000000004121a7 : mov edi, ebx ; call rax
0x0000000000445811 : mov edi, ebx ; jmp 0x4457db
0x000000000049eb43 : mov edi, ebx ; jne 0x49eb35 ; pop rbx ; ret
0x0000000000414d24 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e94 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000441ce7 : mov edi, edi ; call 0x41dfc4
0x0000000000403be4 : mov edi, edi ; call 0x43fec4
0x0000000000410595 : mov edi, edi ; call rax
0x0000000000440d74 : mov edi, edi ; call rbx
0x0000000000465154 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000004c6289 : mov edi, edx ; call rsi
0x0000000000452181 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x452169 ; mov rax, rsi ; ret
0x0000000000441d2c : mov edi, esi ; call 0x41dfc4
0x000000000045c8a6 : mov edi, esi ; call 0x4267d9
0x000000000044529e : mov edi, esi ; call r15
0x0000000000440d54 : mov edi, esi ; call rbx
0x000000000044fa52 : mov edi, esp ; call r15
0x0000000000440d0b : mov edi, esp ; call rbx
0x0000000000466f95 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000445344 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000473489 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000473488 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042665f : mov edx, 0x42fb60 ; cmove rax, rdx ; ret
0x00000000004426d6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b8bbe : mov edx, 0xcac982a4 ; call 0xffffffffaf0e2a3e
0x0000000000446b97 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004449c0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463d98 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047af61 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004121a0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000042ab5f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042928d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047af75 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000041058e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049dd19 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000472668 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b302 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b2f3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b343 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b353 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431991 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431d50 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004315e1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b8f0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000435580 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043b941 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353c1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043b8d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b2b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e3a9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049bf79 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000417714 : mov edx, eax ; jmp 0x417731
0x0000000000421210 : mov edx, eax ; jmp 0x4211db
0x0000000000469956 : mov edx, eax ; jmp 0x46995f
0x000000000046b325 : mov edx, eax ; jmp 0x46b31a
0x0000000000450017 : mov edx, ebp ; call r15
0x000000000040ffba : mov edx, ebp ; mov rdi, r13 ; call 0x42c237
0x000000000047e3a1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e361 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fa91 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000044faac : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000473bec : mov edx, ebp ; xor edi, edi ; call 0x43fe06
0x0000000000458614 : mov edx, esp ; call 0x4636f8
0x0000000000473beb : mov edx, r13d ; xor edi, edi ; call 0x43fe07
0x000000000046aed9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441256 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x0000000000446ad5 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446ac7 : mov esi, 0x4a59fa8a ; add byte ptr [rax - 0x7f], cl ; ret 0x59e0
0x000000000047661f : mov esi, 0x89fffffe ; ret 0x758b
0x00000000004bdd99 : mov esi, 0x9da0fffd ; std ; ljmp ptr [rax] ; ret 0xfffd
0x00000000004a34cd : mov esi, 0xbc35fff8 ; clc ; jmp rcx
0x00000000004a34bd : mov esi, 0xbc60fff8 ; clc ; call qword ptr [rax]
0x000000000048a33f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a359d : mov esi, 0xbf60fff8 ; clc ; jmp rax
0x00000000004a351d : mov esi, 0xbf96fff8 ; clc ; call qword ptr [rsi]
0x00000000004b7cde : mov esi, 0xc2c1c0bf ; ret
0x000000000041483b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e364 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440d96 : mov esi, 1 ; call rbx
0x0000000000440f83 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000440e4f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440dc7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000044120d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00000000004627f3 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000462108 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043ff81 : mov esi, 2 ; jmp rax
0x0000000000441201 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000440f74 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440e40 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440db8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000043ff9b : mov esi, 3 ; jmp rax
0x000000000044177c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004417d3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000441853 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441953 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000049c5ea : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049ca49 : mov esi, dword ptr [rbx] ; call r14
0x0000000000476e94 : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000049df1e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049ca98 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e01a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049dd15 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x0000000000432889 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400bf3 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444976 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450ae1 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ea91 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000447874 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x00000000004496f3 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e0a1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x0000000000403be1 : mov esi, ebp ; mov rdi, r15 ; call 0x43fec7
0x000000000041f68e : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046a8bc : mov esi, ebp ; xor edx, edx ; jmp 0x46a88a
0x000000000047ae86 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251b36] ; call rax
0x000000000044faaf : mov esi, ebx ; mov rdi, r12 ; call r15
0x0000000000421177 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414d69 : mov esi, ecx ; jbe 0x414d0d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049c92a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045cfbb : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e259 : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000452d3b : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000049c981 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000466f92 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000450011 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e3a4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e364 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044fa63 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000420515 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fa94 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042023a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041fa75 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004c357c : mov esp, 0x20000051 ; js 0x4c3582 ; call qword ptr [rcx]
0x00000000004c3c7c : mov esp, 0x20000058 ; mov bl, 0xf8 ; call qword ptr [rdi]
0x0000000000426011 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426041 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426031 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004c807c : mov esp, 0x7000009c ; or esp, edi ; call qword ptr [rax]
0x00000000004c867c : mov esp, 0x700000a2 ; xchg eax, ebx ; cld ; call qword ptr [rax]
0x00000000004239f3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042cc3b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426021 : mov esp, 0xf80148c0 ; ret
0x000000000040071f : mov esp, eax ; call 0x43e358
0x00000000004789ca : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c68e : mov esp, ecx ; ret
0x000000000043ff34 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000042cafe : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000499feb : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000435830 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463a48 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463a88 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004649e8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463a4c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464a86 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004156b9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442d85 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000463f74 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047af84 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000463eb4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047af78 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464d00 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000461925 : mov qword ptr [rbp - 0x10d0], rdx ; call 0x41dc29
0x000000000045658b : mov qword ptr [rbp - 0x4d8], rdx ; call 0x4427a9
0x0000000000454f57 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000472580 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000472769 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471d2f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d450 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478604 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411be6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000047863d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047463e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004123e8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004785a2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487f44 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000414c02 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c982 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414c7d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411b76 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000414f34 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004150cb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e025 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000488668 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c349 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000047907e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043bb0c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b47c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b45c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b4bf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4df : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b4a0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414b92 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470d14 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470ce6 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042ca70 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414bc2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004187af : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c3a0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043bacc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b41c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043baec : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b43c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435357 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352e7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435277 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435207 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b9ca : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435197 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b36a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b9ea : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435127 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b37a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043ba0a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004350b7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b38a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a3c3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000479003 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414b96 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004267bd : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c358 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000431474 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004314b2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478f6e : mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004317fb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b67 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319db : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ae7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bcb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a67 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d9c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f9c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434948 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043219c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348b8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000478ef9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431478 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004314b6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043162b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431727 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431673 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434be7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c495 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c846 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478ec8 : mov qword ptr [rdi], r9 ; ret
0x000000000043b956 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b346 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b356 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b367 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b377 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b387 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004267ba : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b337 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043b943 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353c3 : mov qword ptr [rdi], rdx ; ret
0x000000000043582d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043286d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a592 : mov qword ptr [rdi], rsi ; ret
0x000000000040f8f2 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043aeea : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004396da : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043af0a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000004396fa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043af2a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043971a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043adba : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043960a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416555 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043ad63 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004395b3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047af64 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004164c1 : mov qword ptr [rdx], rax ; ret
0x0000000000463d95 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401549 : mov qword ptr [rip + 0x2c8b40], rax ; xor eax, eax ; ret
0x000000000049e076 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046e018 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000474051 : mov qword ptr [rsi], rax ; ret
0x000000000041b59a : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049ca92 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047bd3f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047bf42 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047be91 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041b651 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000440445 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409958 : mov qword ptr [rsp], rax ; call 0x405c56
0x000000000041b656 : mov qword ptr [rsp], rcx ; call rdx
0x000000000044f52d : mov qword ptr fs:[rdx], rax ; ret
0x000000000043286c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004b8bbd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e2a3f
0x000000000040071e : mov r12, rax ; call 0x43e359
0x000000000043ff33 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d5c6 : mov r13, r15 ; mov r15, rax ; jmp 0x47d5e4
0x00000000004408d8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000049c5e9 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c5ed : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d768 : mov r15, rax ; jmp 0x46d734
0x000000000047d5c9 : mov r15, rax ; jmp 0x47d5e1
0x000000000047353c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000044497a : mov r9, r14 ; call rbx
0x0000000000466f97 : mov r9, r15 ; call rbx
0x0000000000411b80 : mov rax, -1 ; pop rbx ; ret
0x0000000000412bf2 : mov rax, -1 ; ret
0x00000000004666c0 : mov rax, 1 ; ret
0x00000000004666d0 : mov rax, 2 ; ret
0x00000000004666e0 : mov rax, 3 ; ret
0x00000000004666f0 : mov rax, 4 ; ret
0x0000000000466700 : mov rax, 5 ; ret
0x0000000000466710 : mov rax, 6 ; ret
0x0000000000466720 : mov rax, 7 ; ret
0x0000000000475e74 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414cbb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410c32 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e97 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004151b7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487bc2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004154db : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000464e33 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047eabc : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478420 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f54e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455331 : mov rax, qword ptr [rax*8 + 0x4b2d80] ; jmp rax
0x0000000000455382 : mov rax, qword ptr [rax*8 + 0x4b2e80] ; jmp rax
0x0000000000457472 : mov rax, qword ptr [rax*8 + 0x4b2f80] ; jmp rax
0x0000000000455fa5 : mov rax, qword ptr [rax*8 + 0x4b3280] ; jmp rax
0x0000000000460180 : mov rax, qword ptr [rax*8 + 0x4b3700] ; jmp rax
0x00000000004614a4 : mov rax, qword ptr [rax*8 + 0x4b3800] ; jmp rax
0x0000000000461988 : mov rax, qword ptr [rax*8 + 0x4b3900] ; jmp rax
0x0000000000460216 : mov rax, qword ptr [rax*8 + 0x4b3c00] ; jmp rax
0x000000000049c2e5 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x00000000004408db : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000445346 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471b20 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047af80 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004395b0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0717 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0730 ; call rax
0x0000000000464e30 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416800 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c2f0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c370 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c3b0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c410 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c400 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c3c0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044db6b : mov rax, qword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004783b0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4783c8 ; ret
0x00000000004164be : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004164b0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4164b1 ; ret
0x0000000000473fe9 : mov rax, qword ptr [rip + 0x258d80] ; ret
0x000000000044ca20 : mov rax, qword ptr [rip + 0x27fcd1] ; ret
0x00000000004456b0 : mov rax, qword ptr [rip + 0x287c11] ; ret
0x00000000004167e0 : mov rax, qword ptr [rip + 0x2b38d9] ; ret
0x000000000049cc0b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049cc40 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c3e5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c4f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447349 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447cac : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e096 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047883b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416cb3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420929 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041cbc4 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041ca54 : mov rax, r8 ; pop rbx ; ret
0x0000000000432984 : mov rax, r8 ; ret
0x000000000046b0e4 : mov rax, r9 ; jne 0x46b13e ; ret
0x000000000046b165 : mov rax, r9 ; ret
0x0000000000412b59 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004636d8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004636ab : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004747c1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c519 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004132cc : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474c37 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f988 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa6d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fd4d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411bea : mov rax, rbx ; pop rbx ; ret
0x000000000041bfcd : mov rax, rcx ; ret
0x0000000000416810 : mov rax, rdi ; ret
0x0000000000487eed : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b0f2 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041dcd7 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417494 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047266e : mov rax, rdx ; call rax
0x000000000041e661 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041787b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e4a7 : mov rax, rdx ; pop rbx ; ret
0x0000000000426d38 : mov rax, rdx ; ret
0x000000000046a902 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487d17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb83 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000452103 : mov rax, rsi ; ret
0x000000000043dcda : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c689 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004789cc : mov rbp, r9 ; nop ; jmp rdx
0x000000000042048e : mov rbp, rax ; call 0x41c725
0x000000000043ff36 : mov rbp, rax ; call rax
0x0000000000476f79 : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440ce5 : mov rbx, rax ; call rax
0x000000000044fa4e : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044ef45 : mov rbx, rdi ; test rax, rax ; je 0x44ef57 ; call rax
0x000000000043b320 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478516 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004784a4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d765 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d737
0x00000000004329a0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004329a3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473ec2 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473ea9 ; ret
0x000000000044048f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e01c : mov rdi, qword ptr [r13] ; call r14
0x0000000000440099 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000440006 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000440047 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440442 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045cfbd : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047630d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466844 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004401ce : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000476e97 : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000464df7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464dc5
0x0000000000447050 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044b899 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004477c4 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004484ef : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000446e51 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447878 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044b0d9 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004496f7 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448a77 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000049df19 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000044fa51 : mov rdi, r12 ; call r15
0x0000000000440d0a : mov rdi, r12 ; call rbx
0x0000000000466f94 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000445343 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000040ffbc : mov rdi, r13 ; call 0x42c235
0x000000000040e25b : mov rdi, r13 ; call r14
0x0000000000440d2f : mov rdi, r13 ; call rbx
0x0000000000450013 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x0000000000441d2b : mov rdi, r14 ; call 0x41dfc5
0x000000000044529d : mov rdi, r14 ; call r15
0x0000000000440d53 : mov rdi, r14 ; call rbx
0x0000000000441ce6 : mov rdi, r15 ; call 0x41dfc5
0x0000000000403be3 : mov rdi, r15 ; call 0x43fec5
0x0000000000410594 : mov rdi, r15 ; call rax
0x0000000000440d73 : mov rdi, r15 ; call rbx
0x0000000000465153 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000408631 : mov rdi, rax ; call 0x41dfc9
0x0000000000421179 : mov rdi, rax ; call rcx
0x000000000042048b : mov rdi, rax ; mov rbp, rax ; call 0x41c728
0x0000000000420517 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049ed1b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000044fa96 : mov rdi, rbp ; call r15
0x000000000041ea95 : mov rdi, rbp ; call rax
0x0000000000441212 : mov rdi, rbp ; call rbx
0x000000000041f3f6 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041bdee : mov rdi, rbx ; call 0x418045
0x000000000044c9d6 : mov rdi, rbx ; call r12
0x0000000000444c4c : mov rdi, rbx ; call r14
0x00000000004627f8 : mov rdi, rbx ; call r8
0x00000000004121a6 : mov rdi, rbx ; call rax
0x0000000000445810 : mov rdi, rbx ; jmp 0x4457dc
0x000000000049eb42 : mov rdi, rbx ; jne 0x49eb36 ; pop rbx ; ret
0x0000000000414d23 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e93 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000049bf78 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049dd18 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047af60 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047af74 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004315e0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004353c0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e3a8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000458613 : mov rdx, r12 ; call 0x4636f9
0x000000000047e3a0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e360 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000417713 : mov rdx, rax ; jmp 0x417732
0x000000000042120f : mov rdx, rax ; jmp 0x4211dc
0x0000000000469955 : mov rdx, rax ; jmp 0x469960
0x000000000046b324 : mov rdx, rax ; jmp 0x46b31b
0x0000000000450016 : mov rdx, rbp ; call r15
0x000000000040ffb9 : mov rdx, rbp ; mov rdi, r13 ; call 0x42c238
0x000000000049df1d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049ca97 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e019 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049ca48 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444975 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450ae0 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ea90 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e0a0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000047e3a3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e363 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fa62 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044fa93 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420239 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041fa74 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000403be0 : mov rsi, r13 ; mov rdi, r15 ; call 0x43fec8
0x000000000041f68d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049c980 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000466f91 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000040e258 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000452d3a : mov rsi, r15 ; mov rdi, rbx ; call rax
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x000000000046a8bb : mov rsi, rbp ; xor edx, edx ; jmp 0x46a88b
0x000000000047ae85 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251b36] ; call rax
0x000000000044faae : mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000421176 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414d68 : mov rsi, rcx ; jbe 0x414d0e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049c929 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x00000000004789c9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c68d : mov rsp, rcx ; ret
0x0000000000435855 : mov word ptr [r9 - 2], cx ; ret
0x00000000004c804c : mov word ptr [rax + rax - 0x3f69000], ds ; call qword ptr [rax]
0x0000000000442ba9 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004267ad : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c2f4c : mov word ptr [rbx], cs ; add byte ptr [rax], al ; xor eax, edi ; jmp rsp
0x000000000043ba4c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b3bc : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bb54 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b4a4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004355f7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b918 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b2f8 : mov word ptr [rdi + 4], dx ; ret
0x000000000043b96a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b33a : mov word ptr [rdi + 8], dx ; ret
0x00000000004328a2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000431b7c : mov word ptr [rdi - 2], cx ; ret
0x0000000000431994 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431b78 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b2c3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043dc55 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004355fb : mov word ptr [rdi], cx ; ret
0x000000000043b8d3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000435663 : mov word ptr [rdi], dx ; ret
0x0000000000435852 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000043289f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043ae38 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439678 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004c864c : mov word ptr [rdx - 0x26400000], fs ; cld ; call qword ptr [rax]
0x000000000043ade3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439633 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004c1a9a : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043dc58 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7a48 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c7af8 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044f634 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000043289e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000004bddac : movabs al, byte ptr [0x18fffdc228fffdc2] ; ret
0x000000000048ab3d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004c92b9 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c0a61 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x00000000004bdd9c : movabs al, byte ptr [0x68fffdc228fffd9d] ; ret 0xfffd
0x00000000004462a9 : movabs al, byte ptr [0x89482fff7880fffb] ; ret 0x774
0x000000000048ef35 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000464df3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x0000000000442f80 : movabs dword ptr [0x950f000000010028], eax ; ret 0xc985
0x0000000000430102 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004300fe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004301ac : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b390 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bc0d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b55d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004352cf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043525f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351ef : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043517f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b4fd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043510f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbcd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b51d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043509f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b53d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004356bf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043564f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355df : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043556f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354ff : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043548f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043541f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353af : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043533f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042670c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x426729 ; ret
0x0000000000426725 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043482b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043489b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ba24 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b3a4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b3e7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3d7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b458 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b418 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b438 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b3b8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b559 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b4f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b519 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b539 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043504a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004350a4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b391 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bc0e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b55e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004352d0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435260 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351f0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435180 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbae : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b4fe : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435110 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbce : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b51e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004350a0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbee : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b53e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004356c0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435650 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355e0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435570 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435500 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435490 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435420 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353b0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435340 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042670d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x426728 ; ret
0x0000000000426726 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043482c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043489c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434fd7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f57 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ec7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e47 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434dc7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d47 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434cc7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c47 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434bc7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b47 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ac7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a47 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004349b7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434927 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434897 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ba25 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b3a5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b3f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b3e8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b459 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b419 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b439 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b3b9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b55a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b4fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b51a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b53a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043504b : movq qword ptr [rdi], mm0 ; ret
0x00000000004350a5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004a346d : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rax
0x00000000004b9582 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba7dd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ba836 ; jmp 0x4ba777
0x00000000004055b8 : movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x4055c2 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004c4164 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rbp ; add byte ptr [rax], al ; lahf ; ret
0x00000000004c3764 : movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add byte ptr [rax], al ; call 0xffffffffc44c3001
0x000000000041ac88 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004745ec : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004174e7 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004c89b5 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; std ; call rsp
0x00000000004c9349 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000004a3471 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004bae15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ba6d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000415a2a : movsd dword ptr [rdi], dword ptr [rsi] ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478f22 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x415d002c ; pop rsp ; ret
0x0000000000491913 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004918cd : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000477981 : movsx eax, dl ; neg eax ; ret
0x0000000000421591 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432c66 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042fbe2 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000049ba69 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b4e1 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000499fb9 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049b188 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000042e52d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b159 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000049a1e1 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x000000000042fcaf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004c04f9 : movsxd rsi, ebp ; jmp qword ptr [rax]
0x000000000043d13c : movsxd rsi, esi ; ret 0x7520
0x00000000004918ce : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491914 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044f6bc : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b02c : movzx eax, al ; neg eax ; ret
0x000000000047add6 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ac95 : movzx eax, al ; ret
0x0000000000413f0c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415ba6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411dcd : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004150cf : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041304a : movzx eax, byte ptr [rax] ; ret
0x000000000049cf69 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000422928 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e540 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004261a0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422943 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414d6d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411de0 : movzx eax, byte ptr [rdx] ; ret
0x0000000000413f0d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e3b7 : movzx eax, cl ; pop rbx ; ret
0x000000000043e3df : movzx eax, dl ; pop rbx ; ret
0x000000000043d79a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d799 ; ret
0x000000000043d84a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d849 ; ret
0x000000000042f3e4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422940 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e543 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040db9f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40db87 ; ret
0x000000000042e411 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000422a6f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e2a3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043d164 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043d1c4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043d1b4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d1a4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d194 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d184 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d174 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000434ff0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f197 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043d14b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004356d0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004261a3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004261c9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000434f70 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435660 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466841 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046ac94 : movzx rax, al ; ret
0x0000000000465927 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000049d404 : mul dword ptr [rdx] ; add cl, ch ; ret
0x0000000000463047 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041695f : neg eax ; ret
0x000000000043f4b1 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004a39e0 : nop ; adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a39f0 : nop ; adc bh, cl ; call qword ptr [rax]
0x00000000004a39f8 : nop ; adc ecx, edi ; call qword ptr [rax]
0x00000000004a39e8 : nop ; adc edi, ecx ; call qword ptr [rax]
0x0000000000410458 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041342c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043471b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bbee : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000462d3b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e84c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041b15a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000468106 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x00000000004bf075 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf08d ; ret
0x00000000004bf083 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e5ff : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000444b3f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042600f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000048878f : nop ; call rax
0x00000000004c6960 : nop ; fdiv st(2), st(0) ; call rsi
0x00000000004a3330 : nop ; insb byte ptr [rdi], dx ; clc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x00000000004117a2 : nop ; jmp 0x4116ac
0x00000000004789cf : nop ; jmp rdx
0x00000000004317af : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043198f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046ab0f : nop ; mov eax, 0x66 ; syscall ; ret
0x0000000000416e0f : nop ; mov eax, 0xffffffff ; ret
0x00000000004100ef : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046aedf : nop ; mov eax, edi ; ret
0x00000000004a3384 : nop ; mov edi, eax ; jmp rax
0x0000000000431d4f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b8ef : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000411b7f : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415b2f : nop ; mov rax, -1 ; ret
0x0000000000417124 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044580f : nop ; mov rdi, rbx ; jmp 0x4457dd
0x000000000041ea8f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b38f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000046265f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46262e
0x000000000046265e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46262f
0x000000000043db2f : nop ; ret
0x00000000004bdda8 : nop ; ret 0xfffd
0x00000000004099bc : nop ; ret 0xffff
0x000000000048eab5 : nop ; salc ; add r8b, bpl ; ret 0xf72c
0x00000000004a37c8 : nop ; sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004bdcfd : nop ; std ; jmp qword ptr [rax + 0x20fffd91]
0x00000000004bdd38 : nop ; std ; jmp rax
0x00000000004164ff : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004261cf : nop ; xor eax, eax ; ret
0x000000000042608f : nop ; xor rax, rax ; ret
0x00000000004783eb : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e24b : nop dword ptr [rax + rax] ; call rbx
0x000000000043b2cb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047ad53 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412bfb : nop dword ptr [rax + rax] ; ret
0x00000000004133bb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046668c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000400b15 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047e0a9 : nop dword ptr [rax] ; call rax
0x000000000041693c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410b7d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c7c4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e3a4 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e764 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e59c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406305 : nop dword ptr [rax] ; ret
0x000000000049e5ad : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004113c4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047e24a : nop word ptr [rax + rax] ; call rbx
0x0000000000412bfa : nop word ptr [rax + rax] ; ret
0x00000000004133ba : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444a01 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004c6af8 : or ah, ah ; cli ; jmp qword ptr [rdx]
0x0000000000429ef7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b56f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046ada2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041bfc9 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c8da : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046ad1f : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452990 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000422926 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041ca52 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000469953 : or al, 0x20 ; mov rdx, rax ; jmp 0x469962
0x000000000041b658 : or al, 0x24 ; call rdx
0x0000000000443e51 : or al, 0x24 ; je 0x443e65 ; mov edi, 0x6cb140 ; call rax
0x0000000000462662 : or al, 0x40 ; jmp 0x46262b
0x0000000000462661 : or al, 0x40 ; jmp 0x46262c
0x0000000000400bfa : or al, 0x41 ; call rsp
0x000000000044576f : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004786c0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400c4e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000047453b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b113 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b5ef : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x0000000000444188 : or al, 0x5e ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004623aa : or al, 0x7e ; ret
0x000000000045d329 : or al, 0x83 ; ret
0x0000000000458c2c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000421593 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000428fe4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432c68 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042fbe4 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048a0fb : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046aed8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e52f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b15b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004c9348 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000042fbe8 : or al, 0xb ; jmp r9
0x000000000043b15f : or al, 0xb ; jmp rcx
0x000000000049a1e3 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x00000000004351f3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000426713 : or al, 0xf3 ; ret
0x0000000000462acb : or al, 0xf6 ; ret 0xf04
0x000000000045d2ac : or al, 0xf6 ; ret 0xf08
0x00000000004c7b0c : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044fac1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000422bbd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a101 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422be1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c05e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004083c6 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000047d6b0 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489c27 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c6c73 : or al, byte ptr [rcx] ; ret
0x0000000000496f67 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477609 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000408e87 : or al, ch ; ret
0x000000000040c288 : or al, ch ; ret 0xff99
0x0000000000465418 : or al, ch ; ret 1
0x0000000000442d88 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004353b3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044f967 : or bl, dh ; ret
0x000000000040a435 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000414f36 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472501 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000410607 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004740df : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000439608 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e4f6 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e932 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000440907 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000497142 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a0b3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049ba67 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004396c7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046431f : or byte ptr [r9 - 0x77], r9b ; ret
0x0000000000410608 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416d8b : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472502 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000416917 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000004425b5 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041bec9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479305 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000004c5b8a : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c2474 : or byte ptr [rax + 0xb], cl ; ret
0x0000000000475a7b : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403f0c : or byte ptr [rax + 1], cl ; ret
0x000000000041b1f7 : or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000467cdc : or byte ptr [rax - 0x39], cl ; ret
0x00000000004260ab : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004260bf : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000418b13 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000473fe8 : or byte ptr [rax - 0x75], cl ; add eax, 0x258d80 ; ret
0x0000000000440441 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000409968 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c57
0x000000000040dffa : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000043960d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004740e0 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fd4c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041b655 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000439609 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f3f5 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041787a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047df57 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472e30 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e933 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472dd9 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000472e2f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000043fa64 : or byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; ret
0x000000000041bec5 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b06dc
0x000000000041bec4 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b06dd
0x000000000041ca88 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044fae4 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000440837 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042c856 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c8de : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000462f2e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000473098 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c452 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000410f08 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004106bd : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000422e1c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000417724 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004176e5 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000422e1d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a2a1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422e41 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004156bc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041db86 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049cba2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004449c1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043e460 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049e756 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a436 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000042b95e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049d940 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000478cac : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e189 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000489f83 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000047402c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000041dd80 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004059a3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401825 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412b8a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049cb26 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000462660 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46262d
0x0000000000457937 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f691 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000470ce9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004c7318 : or byte ptr [rbx], ch ; sti ; call rsp
0x000000000047a4fb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a0b4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c299 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f49a : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049ba68 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c7b0e : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c0987 : or byte ptr [rcx + 0xb], al ; ret
0x0000000000461eeb : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048000b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004795a0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000040e257 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a502 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049ca43 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004118ea : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004396c8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000464320 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489ae2 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d619 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e14a : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044fd63 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000004489c9 : or byte ptr [rcx - 0xa], al ; ret
0x000000000045b171 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049d646 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049ce6f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000044294e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451ab0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004178bb : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bb09e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004711a7 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470dc1 : or byte ptr [rdi + 0x6cb100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000478251 : or byte ptr [rdi + 0x6cb140], bh ; call rax
0x000000000040357b : or byte ptr [rdi + 0x6cc0a0], bh ; call r15
0x00000000004bf9fb : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c4d44 : or byte ptr [rdi + 0xb], al ; jae 0x4c4d58 ; ret
0x00000000004821a8 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f3dc : or byte ptr [rdi], 0 ; ret
0x0000000000449d53 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044cf99 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00000000004150ce : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000462521 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000487f29 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000414f37 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049c9f6 : or byte ptr [rdi], cl ; ret 0xfc3
0x00000000004301ab : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044dc24 : or byte ptr [rdi], cl ; test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455a76 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049c9f5 : or byte ptr [rdi], r9b ; ret 0xfc3
0x00000000004a3bcc : or byte ptr [rsi], 0xf9 ; call qword ptr [rax]
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000476916 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004a3714 : or cl, 0xf8 ; call rax
0x000000000047b277 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044cb20 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411dbe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412607 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464dbf : or cl, byte ptr [rax - 0x77] ; ret
0x000000000040fb9c : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042536a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004525f7 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000048a0c3 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463d97 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000489f89 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004080c8 : or cl, ch ; ret
0x0000000000462932 : or cl, ch ; ret 0xfffc
0x00000000004881b5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004352d3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e135 : or dh, bl ; ret
0x000000000047e247 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041baa3 : or dh, dh ; ret 0x7404
0x000000000041ba1e : or dh, dh ; ret 0xf04
0x00000000004027fe : or dh, dh ; ret 0xfdf
0x000000000040dad7 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004021aa : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047630c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x00000000004237fe : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000422d4d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b80f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ca7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041021f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048a0a3 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042f966 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412400 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000478dfc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041fd46 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041ff2c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000401664 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000478736 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000474949 : or dword ptr [rip + 0x256820], 1 ; pop rbx ; ret
0x00000000004c6c70 : or eax, 0x10a0303 ; ret
0x00000000004c6d20 : or eax, 0x1370303 ; ret
0x000000000043bbb1 : or eax, 0x1c478d48 ; ret
0x0000000000415872 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6c60 : or eax, 0x34b0303 ; ret
0x00000000004c6cc0 : or eax, 0x35b0303 ; ret
0x0000000000461f1a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462622 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042ce32 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000004401af : or eax, 0x49fffdde ; mov edi, dword ptr [rsi] ; call rbx
0x000000000048a117 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429d57 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429dc1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a0f2d : or eax, 0x834825eb ; ret 0x4810
0x00000000004ae1d9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ba6d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440d6e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000435183 : or eax, 0xf7f0ff3 ; ret
0x000000000044436c : or eax, 0xffffffff ; ret
0x00000000004c7b0f : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045df4f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422aed : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429f61 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422b11 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044d414 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c7b10 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c8fd9 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045df4e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044278e : or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004164f4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c9390 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435343 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a76e : or ebx, esi ; ret
0x000000000041d41a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418c64 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fa6c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000447b65 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a0df : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c4d0e : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042c844 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c6d49 : or edi, ebx ; jmp rsi
0x00000000004c4d46 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bf080 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435263 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412401 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004c8051 : or esp, edi ; call qword ptr [rax]
0x00000000004c8069 : or esp, edi ; call qword ptr [rdx]
0x00000000004353b2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435342 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352d2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c4d45 : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435262 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c8fd8 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x000000000042c843 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044cb1f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462931 : or r9b, r13b ; ret 0xfffc
0x00000000004c4d0d : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c6d1f : or rax, 0x1370303 ; ret
0x00000000004c6c5f : or rax, 0x34b0303 ; ret
0x00000000004c6cbf : or rax, 0x35b0303 ; ret
0x0000000000461f19 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462621 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000044436b : or rax, 0xffffffffffffffff ; ret
0x0000000000496e42 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000414837 : out -0x18, eax ; ret
0x000000000049e428 : out -0x18, eax ; ret 0xffe7
0x00000000004b9580 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000040328b : out -0x77, eax ; ret 0x8948
0x00000000004bb2a8 : out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000434bca : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043fa5a : out -3, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a3641 : out -8, eax ; call qword ptr [rax]
0x00000000004a3661 : out -8, eax ; jmp rax
0x000000000046ea3f : out 0x25, eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044fa53 : out 0x41, eax ; call rdi
0x0000000000475a29 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044fa64 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000420516 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fa95 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000445345 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000466f96 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041fa76 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415bc3 : out 0x5b, al ; ret
0x000000000047348a : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042023b : out 0x5d, al ; pop r12 ; jmp rax
0x000000000047e3a5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e365 : out 0x89, al ; out dx, eax ; call rax
0x0000000000434b4a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a36c1 : out 0xf8, al ; jmp qword ptr [rax]
0x00000000004a36e1 : out 0xf8, al ; jmp rax
0x000000000040fb74 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049e751 : out 2, al ; jne 0x49e764 ; mov eax, 8 ; ret
0x0000000000401716 : out 3, al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c6b9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004588fa : out dx, al ; add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x000000000041d41d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004009a9 : out dx, al ; call rax
0x00000000004ba6d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041dd5e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004317fa : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c2e4 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000403be2 : out dx, al ; mov rdi, r15 ; call 0x43fec6
0x000000000041f68f : out dx, al ; mov rdi, rbx ; call rax
0x0000000000434f5a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b6be : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a8bd : out dx, al ; xor edx, edx ; jmp 0x46a889
0x000000000041b7a3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041e575 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418c67 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049ed1d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040ffbe : out dx, eax ; call 0x42c233
0x000000000047e3a7 : out dx, eax ; call qword ptr [rbx]
0x000000000040e25d : out dx, eax ; call r14
0x000000000044fa98 : out dx, eax ; call r15
0x000000000041ea97 : out dx, eax ; call rax
0x0000000000440d31 : out dx, eax ; call rbx
0x00000000004c6ba1 : out dx, eax ; cli ; jmp qword ptr [rdx]
0x000000000043162a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431726 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431672 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450015 : out dx, eax ; mov rdx, rbp ; call r15
0x0000000000434fda : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b7bd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f3f8 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415b6e : out dx, eax ; pop rbx ; ret
0x000000000042e5b3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5c8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5dd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d8e3 : out dx, eax ; ret 0xf66
0x000000000046192d : out dx, eax ; ret 0xfffb
0x000000000040995d : out dx, eax ; ret 0xffff
0x000000000042facc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fab5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fa9e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e55a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004296ce : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043bd0e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a3335 : outsb dx, byte ptr [rsi] ; clc ; call rax
0x00000000004bae83 : outsb dx, byte ptr [rsi] ; ja 0x4bae0c ; ret 0x48f
0x00000000004099de : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b8bc4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000426b7a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004692d5 : outsd dx, dword ptr [rsi] ; add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091c31
0x00000000004a3339 : outsd dx, dword ptr [rsi] ; clc ; push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x00000000004216e8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042719e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042f8cd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042f96d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000046592a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f8d2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b9586 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000431f67 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042f972 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000046597a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004b9585 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041adbf : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004229e2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000466684 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046666f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004229e1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004ba985 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004ba986 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000042388f : pmovmskb edx, mm4 ; test edx, edx ; je 0x4238a3 ; bsf eax, edx ; ret
0x00000000004c7315 : pop qword ptr [rax] ; add byte ptr [rax], cl ; sub edi, ebx ; call rsp
0x0000000000442805 : pop r10 ; ret
0x00000000004bae0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e76a : pop r12 ; jmp rax
0x000000000042051c : pop r12 ; jmp rcx
0x000000000043ff7f : pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff99 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000047348d : pop r12 ; pop r13 ; jmp rax
0x000000000048eedc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ee5a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044174b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014cf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f2 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f4d5 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004059a6 : pop r12 ; pop r13 ; ret
0x000000000047b51c : pop r12 ; pop r14 ; ret
0x000000000046b281 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x000000000047348f : pop r13 ; jmp rax
0x000000000048eede : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ee5c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044174d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f4 : pop r13 ; pop r14 ; ret
0x000000000040f4d7 : pop r13 ; pop rbp ; ret
0x00000000004059a8 : pop r13 ; ret
0x000000000048eee0 : pop r14 ; fmul st(0) ; ret
0x000000000048ee5e : pop r14 ; fmulp st(1) ; ret
0x000000000044174f : pop r14 ; pop r15 ; jmp rax
0x00000000004020f7 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d3 : pop r14 ; pop r15 ; ret
0x00000000004015f6 : pop r14 ; ret
0x0000000000441751 : pop r15 ; jmp rax
0x00000000004020f9 : pop r15 ; pop rbp ; ret
0x00000000004014d5 : pop r15 ; ret
0x00000000004187b1 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004c3cbd : pop rax ; add byte ptr [rax], al ; add dl, cl ; std ; call qword ptr [rbx]
0x00000000004be848 : pop rax ; add edi, esi ; call rdi
0x00000000004187b2 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004785a6 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004bddc8 : pop rax ; ret 0xfffd
0x00000000004099f4 : pop rax ; ret 0xffff
0x00000000004c4165 : pop rbp ; add byte ptr [rax], al ; lahf ; ret
0x000000000047929a : pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041dd82 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000418bd2 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000041e769 : pop rbp ; pop r12 ; jmp rax
0x000000000042051b : pop rbp ; pop r12 ; jmp rcx
0x000000000043ff7e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff98 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000047348c : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048eedb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ee59 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044174a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004014ce : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059a5 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b51b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048eedf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048ee5d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000044174e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004015f5 : pop rbp ; pop r14 ; ret
0x000000000040f4d8 : pop rbp ; pop rbp ; ret
0x000000000047a508 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x00000000004792a2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004bdd55 : pop rbp ; std ; call qword ptr [rax]
0x0000000000412b8c : pop rbp ; sub rax, rdx ; ret
0x00000000004c7afe : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b8158 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e40c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e43f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b8156 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000487bca : pop rbx ; jmp rax
0x00000000004110be : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474967 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e4a3 : pop rbx ; mov eax, eax ; ret
0x0000000000462e4a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a4ae : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000004768fe : pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000414d26 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414e96 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004636d7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420238 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f4d4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b280 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041dd81 : pop rbx ; pop rbp ; jmp rax
0x000000000041e768 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000042051a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000043ff7d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff97 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000047348b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004015f0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059a4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b51a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x0000000000412b8b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400d15 : pop rbx ; ret
0x00000000004bb440 : pop rbx ; ret 0x6f9
0x00000000004204c1 : pop rbx ; ret 0xffff
0x00000000004bdd51 : pop rbx ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x0000000000466ae9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000044084a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047ad48 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x251c73] ; jmp rax
0x0000000000446aca : pop rcx ; add byte ptr [rax - 0x7f], cl ; ret 0x59e0
0x00000000004c3dbd : pop rcx ; add byte ptr [rax], al ; loopne 0x4c3d80 ; clc ; jmp qword ptr [rsi]
0x0000000000474729 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x0000000000488e1f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004301a8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042be4d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431bc9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004319d9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba6fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000441752 : pop rdi ; jmp rax
0x00000000004b96c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049e2ce : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004317f9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431629 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431725 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431671 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004020fa : pop rdi ; pop rbp ; ret
0x00000000004014d6 : pop rdi ; ret
0x00000000004ba2e1 : pop rdx ; je 0x4ba2ab ; ret 0xacfc
0x00000000004bb2a7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000442804 : pop rdx ; pop r10 ; ret
0x00000000004785a7 : pop rdx ; pop rbx ; ret
0x0000000000442829 : pop rdx ; pop rsi ; ret
0x0000000000442806 : pop rdx ; ret
0x00000000004bae10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042bd4e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000473963 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004260cc : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048eee1 : pop rsi ; fmul st(0) ; ret
0x000000000048ee5f : pop rsi ; fmulp st(1) ; ret
0x000000000042c855 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441750 : pop rsi ; pop r15 ; jmp rax
0x00000000004020f8 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004014d4 : pop rsi ; pop r15 ; ret
0x00000000004015f7 : pop rsi ; ret
0x0000000000444189 : pop rsi ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004298e0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c281c : pop rsp ; add byte ptr [rax], r8b ; rol byte ptr [rcx], 0xf8 ; call rsp
0x000000000042a5e0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047bf44 : pop rsp ; and al, 0x78 ; call r12
0x000000000041e76b : pop rsp ; jmp rax
0x000000000042051d : pop rsp ; jmp rcx
0x000000000043ff80 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000043ff9a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000422e40 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047348e : pop rsp ; pop r13 ; jmp rax
0x000000000048eedd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ee5b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044174c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004020f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014d0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004015f3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f4d6 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004059a7 : pop rsp ; pop r13 ; ret
0x000000000047b51d : pop rsp ; pop r14 ; ret
0x000000000046b282 : pop rsp ; pop rbp ; ret
0x000000000040060b : pop rsp ; ret
0x0000000000465560 : pop rsp ; ret 0xfff9
0x00000000004c101c : pop rsp ; sub al, 0 ; add byte ptr [rax - 0x2f], ah ; cmc ; call rdx
0x00000000004168e8 : pop rsp ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049b889 : popfq ; ret 0xf45
0x0000000000494440 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bdd9d : popfq ; std ; ljmp ptr [rax] ; ret 0xfffd
0x000000000045f859 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004350a2 : psllq mm1, qword ptr [r15] ; jg 0x4350bd ; ret
0x00000000004350a3 : psllq mm1, qword ptr [rdi] ; jg 0x4350bc ; ret
0x000000000043b3d6 : psllq mm1, qword ptr [rdi] ; jg 0x43b3ea ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b3d5 : psllq mm1, qword ptr [rdi] ; jg 0x43b3eb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b437 : psllq mm1, qword ptr [rdi] ; jg 0x43b44c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004a3c09 : psubw mm7, mm7 ; jo 0x4a3c22 ; stc ; call rax
0x00000000004a3bc9 : psubw mm7, mm7 ; or byte ptr [rsi], 0xf9 ; call qword ptr [rax]
0x00000000004bdda4 : push -0x6f00023e ; ret 0xfffd
0x0000000000452aff : push -0x76000005 ; ret 0x8941
0x000000000047bdfe : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048102f : push -0x7c000006 ; ret 0x8908
0x0000000000485b4a : push -0x9000007 ; ret 0xf02
0x000000000043bcf4 : push -0x9ffffff ; ret 0x7501
0x000000000049c1d8 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041f68c : push 0x48ee894c ; mov edi, ebx ; call rax
0x000000000047494c : push 0x5b010025 ; ret
0x00000000004bdca5 : push 0x6a40fffd ; std ; call qword ptr [rax]
0x00000000004bae82 : push 0x6e ; ja 0x4bae0d ; ret 0x48f
0x000000000044c9d2 : push 0xbb ; add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004bdca9 : push 0xfd ; call qword ptr [rax]
0x00000000004859dc : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a3f1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004a398f : push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004bddcb : push qword ptr [rax + 0x28fffdc2] ; ret 0xfffd
0x00000000004a39a7 : push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004a3343 : push qword ptr [rax + 0x50fff874] ; jbe 0x4a334b ; jmp qword ptr [rax]
0x00000000004bdd4f : push qword ptr [rax + 0x5b] ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004a331b : push qword ptr [rax + 0x64] ; clc ; call qword ptr [rax]
0x00000000004a333b : push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x00000000004a338b : push qword ptr [rax + 0x79] ; clc ; jmp rax
0x00000000004a335b : push qword ptr [rax + 0x7e] ; clc ; inc eax ; jg 0x4a3363 ; call qword ptr [rax]
0x00000000004a3c0b : push qword ptr [rax + 0xe] ; stc ; call rax
0x00000000004a3a07 : push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004a36d3 : push qword ptr [rax - 0x20] ; clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a366f : push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a3677 ; call qword ptr [rax]
0x00000000004a36ef : push qword ptr [rax - 0x22] ; clc ; jmp qword ptr [rax]
0x00000000004a3d87 : push qword ptr [rax - 0x2f000684] ; jl 0x4a3d90 ; jmp rax
0x00000000004a35b7 : push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3d5f : push qword ptr [rax - 0x3f000685] ; jnp 0x4a3d68 ; jmp rax
0x00000000004a3d07 : push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3d10 ; call rax
0x00000000004a3bbf : push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3bd7 : push qword ptr [rax] ; adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004bdcc7 : push qword ptr [rax] ; jns 0x4bdccc ; call qword ptr [rax]
0x00000000004a3673 : push qword ptr [rax] ; loope 0x4a3673 ; call qword ptr [rax]
0x00000000004a363f : push qword ptr [rax] ; out -8, eax ; call qword ptr [rax]
0x00000000004a3333 : push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x000000000043d678 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410c1b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000041551d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464975 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000046491d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415bc1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004429d2 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415b69 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466c3a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004a34ef : push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x00000000004a3943 : push qword ptr [rcx + rbx + 0x1944fff9] ; stc ; call rsp
0x00000000004a3503 : push qword ptr [rcx - 0x3c] ; clc ; call qword ptr [rcx]
0x00000000004110f1 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a34f3 : push qword ptr [rcx] ; ret 0xfff8
0x0000000000474859 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a3f2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dbfd : push qword ptr [rdi + 0x20] ; ret
0x000000000043f488 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f52c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f2aa : push qword ptr [rdi + 3] ; ret
0x000000000043f2f9 : push qword ptr [rdi + 4] ; ret
0x000000000046abbf : push qword ptr [rdi + 6] ; ret
0x000000000044f965 : push qword ptr [rdi + 8] ; ret
0x000000000046a7dc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415046 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a3a57 : push qword ptr [rdx + 0x15] ; stc ; jmp rdx
0x00000000004a387b : push qword ptr [rdx + 0x42fff91a] ; sbb bh, cl ; call rdx
0x000000000046aa8d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a353b : push qword ptr [rsi] ; ret
0x0000000000414c7f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000443db5 : push r9 ; add al, bpl ; ret 0xfbd9
0x0000000000463a4a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416501 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041b160 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004182d4 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004a3243 : push rax ; add bh, al ; inc eax ; add edi, eax ; jmp rax
0x0000000000414c80 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f349 : push rax ; add byte ptr [rax], al ; ret
0x000000000041a59f : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000425ce5 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004a323c : push rax ; add eax, edi ; jmp qword ptr [rax]
0x0000000000444a08 : push rax ; call rbx
0x00000000004a3393 : push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x000000000040fb76 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004a367b : push rax ; in al, -8 ; call rax
0x00000000004a363c : push rax ; in eax, -8 ; push qword ptr [rax] ; out -8, eax ; call qword ptr [rax]
0x00000000004bdcaf : push rax ; insd dword ptr [rdi], dx ; std ; call rax
0x00000000004bdcc4 : push rax ; ja 0x4bdccb ; push qword ptr [rax] ; jns 0x4bdccf ; call qword ptr [rax]
0x00000000004a3348 : push rax ; jbe 0x4a3346 ; jmp qword ptr [rax]
0x00000000004a3db3 : push rax ; jge 0x4a3db4 ; call qword ptr [rax]
0x00000000004a3d93 : push rax ; jl 0x4a3d94 ; call qword ptr [rax]
0x00000000004bdccf : push rax ; jl 0x4bdcd4 ; call rax
0x00000000004784ac : push rax ; jmp qword ptr [rax]
0x000000000049cc33 : push rax ; jne 0x49cc2c ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cc93 : push rax ; jne 0x49cc8c ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a3cd7 : push rax ; jne 0x4a3cdc ; inc dword ptr [rax] ; jbe 0x4a3ce0 ; call qword ptr [rax]
0x00000000004a3d6b : push rax ; jnp 0x4a3d70 ; inc dword ptr [rax] ; jl 0x4a3d74 ; call qword ptr [rax]
0x00000000004a36f7 : push rax ; loope 0x4a36f7 ; call rax
0x00000000004a3693 : push rax ; loopne 0x4a3693 ; call rax
0x0000000000446ada : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a34cb : push rax ; mov esi, 0xbc35fff8 ; clc ; jmp rcx
0x0000000000488046 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044b898 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000418b12 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000041baa2 : push rax ; or dh, dh ; ret 0x7404
0x000000000041ba1d : push rax ; or dh, dh ; ret 0xf04
0x0000000000422d4c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a36c0 : push rax ; out 0xf8, al ; jmp qword ptr [rax]
0x000000000046684e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446adc : push rax ; push rsp ; ret
0x00000000004164f6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004649ea : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a379f : push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a37b8 : push rax ; sbb edi, ecx ; jmp rax
0x00000000004c6500 : push rax ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x00000000004c9189 : push rax ; std ; jmp qword ptr [rbx]
0x0000000000415bbd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000049ed27 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004799ff : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004c396d : push rbp ; add byte ptr [rax], al ; jo 0x4c3912 ; clc ; call qword ptr [rdx]
0x0000000000440691 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000474798 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000495588 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c64ee : push rbp ; ret
0x0000000000465151 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000042600a : push rbp ; xor rax, rax ; ret
0x0000000000400b19 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047add4 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c3765 : push rbx ; add byte ptr [rax], al ; call 0xffffffffc44c3000
0x000000000046d8e6 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000423729 : push rbx ; add qword ptr [rax], rax ; ret
0x000000000044d412 : push rbx ; je 0x44d429 ; cmp esi, 3 ; je 0x44d429 ; pop rbx ; ret
0x00000000004648e9 : push rbx ; je 0x46494d ; pop rbp ; pop r12 ; ret
0x000000000046498e : push rbx ; je 0x4649f2 ; pop rbp ; pop r12 ; ret
0x0000000000443945 : push rbx ; lea ebp, dword ptr [rax] ; add dh, dh ; ret 0x7420
0x0000000000462aca : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416d8a : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004150cd : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040d749 : push rbx ; ret
0x0000000000414024 : push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004121a1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba2dc : push rbx ; xchg eax, edx ; jae 0x4ba2bb ; push rsi ; pop rdx ; je 0x4ba2b0 ; ret 0xacfc
0x0000000000443db6 : push rcx ; add al, bpl ; ret 0xfbd9
0x00000000004435f9 : push rcx ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c357d : push rcx ; add byte ptr [rax], al ; and byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000043f250 : push rcx ; add byte ptr [rax], al ; ret
0x00000000004b9565 : push rcx ; call qword ptr [rsi]
0x00000000004c5e99 : push rcx ; cli ; jmp rsp
0x00000000004359bd : push rcx ; jl 0x435a0e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435b24 : push rcx ; jl 0x435b75 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049d93f : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004a34fc : push rcx ; ret
0x0000000000489f85 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043b91a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000435209 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000043b9cc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b48d : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004314b8 : push rdi ; clc ; ret
0x0000000000431630 : push rdi ; cld ; ret
0x0000000000432157 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434ae9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434a69 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004348ba : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414bc4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043494a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d328 : push rdi ; or al, 0x83 ; ret
0x000000000045d2ab : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a4fa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048000a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a501 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043bbb0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042f8ce : push rdi ; ret
0x0000000000401045 : push rdi ; ret 0
0x000000000042f96e : push rdi ; ret 0xff3
0x0000000000441e65 : push rdi ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000432357 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b7a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431f57 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c59a : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041058f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000046592b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004a3a53 : push rdx ; adc eax, 0x1572fff9 ; stc ; jmp rdx
0x0000000000444266 : push rdx ; add al, bpl ; ret 0xffb0
0x000000000046af1a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049e0fa : push rdx ; in al, dx ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004c5b8d : push rdx ; ret
0x0000000000446ad6 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042e5b4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043deb9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43df10 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000463eb2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004354a1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435511 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b365 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435431 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b303 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042666b : push rsi ; add r11b, sil ; ret
0x000000000042e5c9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000474932 : push rsi ; and eax, 0x89485300 ; ret
0x00000000004315e2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431d51 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431985 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431b65 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431d45 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004317a5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bae80 : push rsi ; cli ; push 0x6e ; ja 0x4bae0f ; ret 0x48f
0x000000000043d1b6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043d1a6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043d176 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042c8dd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba2e0 : push rsi ; pop rdx ; je 0x4ba2ac ; ret 0xacfc
0x000000000041ec72 : push rsi ; ret
0x0000000000485b4d : push rsi ; ret 0xf02
0x000000000045edc8 : push rsi ; ret 0xf10
0x00000000004a3800 : push rsi ; sbb bh, cl ; jmp rsi
0x00000000004bdd49 : push rsi ; std ; jmp qword ptr [rax]
0x000000000043d186 : push rsi ; sub eax, edx ; ret
0x000000000042e5de : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043f408 : push rsp ; add byte ptr [r8], r8b ; ret
0x000000000041b59c : push rsp ; and al, 0x10 ; call rax
0x0000000000464ea3 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466aae : push rsp ; and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004477c1 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446e4e : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000467111 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044b896 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e3aa : push rsp ; and al, 0x68 ; call rax
0x000000000041f68a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004484ec : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b0d6 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491910 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004918ca : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041aea5 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004c0029 : push rsp ; cmc ; call qword ptr [rcx]
0x00000000004c7314 : push rsp ; pop qword ptr [rax] ; add byte ptr [rax], cl ; sub edi, ebx ; call rsp
0x000000000041bd2a : push rsp ; ret
0x00000000004a392c : push rsp ; sbb al, 0xf9 ; jmp rsp
0x00000000004bdd45 : push rsp ; std ; call rax
0x00000000004295a0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c804d : pushfq ; add byte ptr [rax], al ; jo 0x4c8061 ; cld ; call qword ptr [rax]
0x00000000004c807d : pushfq ; add byte ptr [rax], al ; jo 0x4c8091 ; cld ; call qword ptr [rax]
0x00000000004c80ad : pushfq ; add byte ptr [rax], al ; jo 0x4c80c1 ; cld ; call qword ptr [rax]
0x0000000000446fd0 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004a3451 : pushfq ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x000000000041415c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a2a0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000468573 : pushfq ; ret 0xb60f
0x000000000049b850 : pushfq ; ret 0xf45
0x00000000004bdd48 : rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rax]
0x00000000004a3778 : rcl ch, 0xf8 ; call qword ptr [rax]
0x00000000004a376c : rcl cl, 1 ; clc ; jmp qword ptr [rax]
0x00000000004ba2df : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba2ad ; ret 0xacfc
0x00000000004ba2db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba2b1 ; ret 0xacfc
0x0000000000441fec : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000046309a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000044084c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000462e4c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a507 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004bdd54 : rcr byte ptr [rbp - 3], 0xff ; adc byte ptr [rax - 3], ah ; call qword ptr [rax]
0x0000000000442950 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004175df : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041ebae : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b519 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec1e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c527 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c29b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e663 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000041787d : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004ba6fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000040f9a6 : rcr byte ptr [rsi], 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c8650 : rcr cl, 0xfc ; call qword ptr [rax]
0x0000000000478a09 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004329a6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004ae5e0 : ret 0x10
0x000000000044f5db : ret 0x100
0x0000000000462a7f : ret 0x107
0x0000000000476336 : ret 0x10eb
0x000000000041bd52 : ret 0x110
0x000000000047a4dc : ret 0x114d
0x0000000000447288 : ret 0x1189
0x000000000044601b : ret 0x11e9
0x000000000048360a : ret 0x12
0x000000000047479c : ret 0x1272
0x000000000040a9fa : ret 0x135
0x000000000049d6f3 : ret 0x1374
0x000000000046dbcd : ret 0x1376
0x000000000046ad61 : ret 0x1477
0x000000000041b441 : ret 0x148
0x0000000000415bd2 : ret 0x149
0x0000000000419d53 : ret 0x14c
0x0000000000435d7c : ret 0x14d
0x0000000000403316 : ret 0x14e8
0x00000000004078fa : ret 0x166
0x0000000000423a5a : ret 0x17
0x0000000000435cb9 : ret 0x180f
0x000000000044f076 : ret 0x1874
0x0000000000426075 : ret 0x1876
0x0000000000417715 : ret 0x18eb
0x0000000000468105 : ret 0x190
0x0000000000488b92 : ret 0x1a75
0x00000000004bac5a : ret 0x1ad4
0x00000000004b93ed : ret 0x1b49
0x000000000041db8f : ret 0x1be
0x00000000004b02b0 : ret 0x1d4
0x00000000004b0a48 : ret 0x1d5
0x0000000000400cc5 : ret 0x1d89
0x0000000000447bd3 : ret 0x1e76
0x0000000000449767 : ret 0x1f0f
0x000000000041e7ee : ret 0x1f76
0x000000000044f4f7 : ret 0x200
0x0000000000446dcc : ret 0x2176
0x00000000004a0f59 : ret 0x22
0x00000000004237f8 : ret 0x2288
0x00000000004a0ff5 : ret 0x22c1
0x000000000049ff22 : ret 0x22c7
0x000000000049d182 : ret 0x22e9
0x000000000042fad2 : ret 0x2373
0x000000000043f367 : ret 0x23e8
0x00000000004af2b8 : ret 0x24
0x00000000004146f9 : ret 0x2501
0x00000000004764ca : ret 0x256c
0x000000000041dd3d : ret 0x2575
0x000000000047119a : ret 0x25bb
0x0000000000467c0a : ret 0x264c
0x0000000000401316 : ret 0x2773
0x0000000000465726 : ret 0x2774
0x0000000000431286 : ret 0x280f
0x0000000000426065 : ret 0x2876
0x000000000047f5a8 : ret 0x28f5
0x000000000042ee94 : ret 0x29
0x0000000000485ecd : ret 0x2941
0x00000000004105fd : ret 0x2948
0x000000000049b7da : ret 0x2949
0x00000000004329f1 : ret 0x294c
0x000000000041270b : ret 0x294d
0x000000000041e523 : ret 0x2a
0x000000000041e6fb : ret 0x2a75
0x000000000041029f : ret 0x2b48
0x00000000004462be : ret 0x2b49
0x000000000043e372 : ret 0x2b77
0x000000000043e017 : ret 0x2c76
0x0000000000483594 : ret 0x2e
0x0000000000462665 : ret 0x2e66
0x00000000004461a5 : ret 0x3101
0x0000000000403726 : ret 0x3145
0x000000000046fd52 : ret 0x314c
0x00000000004af7a8 : ret 0x33
0x000000000046ac57 : ret 0x33e8
0x0000000000403ed1 : ret 0x348
0x000000000044c1fb : ret 0x349
0x0000000000488be8 : ret 0x357e
0x00000000004ba53a : ret 0x3827
0x000000000047bcf2 : ret 0x3840
0x000000000040fcbf : ret 0x3841
0x00000000004405af : ret 0x3845
0x0000000000426055 : ret 0x3876
0x0000000000443149 : ret 0x3880
0x0000000000414fdb : ret 0x389
0x00000000004b8bc6 : ret 0x38ae
0x000000000047a936 : ret 0x38b
0x000000000044fad1 : ret 0x3948
0x000000000041d012 : ret 0x3949
0x000000000044d016 : ret 0x394c
0x0000000000452998 : ret 0x394d
0x000000000043d792 : ret 0x3a01
0x000000000042fabb : ret 0x3a73
0x000000000044cb23 : ret 0x3a76
0x0000000000442941 : ret 0x3b01
0x00000000004671ea : ret 0x3bba
0x000000000040e5ee : ret 0x3ce8
0x00000000004459e5 : ret 0x3d83
0x000000000046a0a2 : ret 0x3e9
0x000000000049b55f : ret 0x3ee9
0x00000000004190f2 : ret 0x4007
0x00000000004668f6 : ret 0x408d
0x000000000047826f : ret 0x40bf
0x0000000000445dd0 : ret 0x4101
0x0000000000454fb0 : ret 0x4108
0x0000000000456a78 : ret 0x4110
0x000000000041c72c : ret 0x4117
0x000000000046eeec : ret 0x412f
0x0000000000446b9e : ret 0x41c3
0x000000000042e44a : ret 0x4266
0x0000000000468202 : ret 0x428d
0x000000000044cb1a : ret 0x4372
0x000000000044d5ab : ret 0x4389
0x0000000000445c8f : ret 0x438b
0x00000000004112f3 : ret 0x4401
0x0000000000455537 : ret 0x440f
0x0000000000464667 : ret 0x4410
0x000000000047b7e1 : ret 0x448d
0x0000000000489ae5 : ret 0x44c6
0x00000000004623e2 : ret 0x4502
0x000000000046d878 : ret 0x4574
0x0000000000462f28 : ret 0x45f6
0x00000000004b59d8 : ret 0x4722
0x00000000004b96c4 : ret 0x474c
0x000000000049d943 : ret 0x4776
0x000000000045a3a3 : ret 0x47e9
0x0000000000448655 : ret 0x4801
0x000000000042c6c1 : ret 0x4802
0x000000000042c79d : ret 0x4803
0x00000000004042b0 : ret 0x4804
0x000000000042c76d : ret 0x4805
0x000000000042c755 : ret 0x4806
0x0000000000423783 : ret 0x4808
0x000000000044f084 : ret 0x4809
0x0000000000458864 : ret 0x480f
0x000000000041afa9 : ret 0x4810
0x000000000044c9f0 : ret 0x4811
0x0000000000452fe2 : ret 0x481e
0x000000000041aeeb : ret 0x4820
0x000000000045baac : ret 0x482d
0x000000000044459f : ret 0x4830
0x0000000000401312 : ret 0x4838
0x000000000042e356 : ret 0x4840
0x0000000000423898 : ret 0x48c3
0x000000000046739d : ret 0x48d
0x0000000000473ad4 : ret 0x48e9
0x00000000004bae86 : ret 0x48f
0x0000000000402fbe : ret 0x4901
0x000000000044bdd3 : ret 0x4904
0x000000000042c9de : ret 0x4906
0x00000000004570e8 : ret 0x4908
0x000000000046a139 : ret 0x4909
0x0000000000422af2 : ret 0x4910
0x0000000000420d66 : ret 0x4920
0x000000000041fce0 : ret 0x4930
0x000000000047e6e4 : ret 0x4976
0x00000000004439ca : ret 0x4a51
0x000000000044642b : ret 0x4a53
0x000000000046548c : ret 0x4b
0x000000000046c9a2 : ret 0x4b30
0x0000000000474833 : ret 0x4b5f
0x00000000004bc418 : ret 0x4bb9
0x0000000000405935 : ret 0x4c01
0x000000000042c921 : ret 0x4c02
0x000000000044c8df : ret 0x4c04
0x0000000000485c15 : ret 0x4c08
0x00000000004526d6 : ret 0x4c40
0x00000000004488a0 : ret 0x4c88
0x0000000000446cb1 : ret 0x4d02
0x00000000004ba8e7 : ret 0x4e27
0x0000000000469957 : ret 0x4eb
0x0000000000444a58 : ret 0x4ee9
0x00000000004458ae : ret 0x4f74
0x000000000042faa4 : ret 0x5173
0x000000000044ee83 : ret 0x527e
0x0000000000462ca8 : ret 0x5389
0x000000000045af9b : ret 0x53e9
0x000000000047ba7d : ret 0x5438
0x0000000000491936 : ret 0x5488
0x000000000044ce9a : ret 0x5489
0x000000000045abf3 : ret 0x548b
0x00000000004b8b4c : ret 0x5508
0x000000000040553f : ret 0x5525
0x00000000004211d2 : ret 0x575
0x000000000046dbdb : ret 0x576
0x00000000004bae18 : ret 0x5803
0x000000000040e7ab : ret 0x589
0x00000000004b8820 : ret 0x591c
0x0000000000446acf : ret 0x59e0
0x00000000004b9587 : ret 0x5ae4
0x0000000000449b91 : ret 0x5c77
0x00000000004bb2b2 : ret 0x62c1
0x000000000045c463 : ret 0x6348
0x0000000000411912 : ret 0x6349
0x000000000043f427 : ret 0x63e8
0x000000000049a790 : ret 0x65e9
0x0000000000489eb7 : ret 0x6610
0x0000000000425fe2 : ret 0x6620
0x00000000004238e5 : ret 0x66c3
0x00000000004747ae : ret 0x674
0x00000000004b883f : ret 0x67b2
0x000000000047d7fd : ret 0x6876
0x000000000049db42 : ret 0x68e8
0x000000000043ed3d : ret 0x6b8
0x000000000049b837 : ret 0x6be9
0x00000000004bb441 : ret 0x6f9
0x0000000000432a3e : ret 0x7280
0x0000000000476189 : ret 0x728d
0x000000000043e1db : ret 0x72e9
0x000000000043e73a : ret 0x73
0x0000000000415521 : ret 0x7401
0x000000000041e8ef : ret 0x7402
0x000000000041baa5 : ret 0x7404
0x0000000000410e13 : ret 0x7408
0x0000000000400e9c : ret 0x7420
0x0000000000458c32 : ret 0x7450
0x000000000043bcf9 : ret 0x7501
0x000000000043bd06 : ret 0x7502
0x0000000000426799 : ret 0x7504
0x000000000043d134 : ret 0x7508
0x000000000043bccb : ret 0x7510
0x0000000000426794 : ret 0x7518
0x000000000043bcd8 : ret 0x7520
0x000000000043bce5 : ret 0x7540
0x0000000000473121 : ret 0x758b
0x000000000042e992 : ret 0x7677
0x00000000004462b2 : ret 0x774
0x0000000000478cca : ret 0x777
0x000000000049b62b : ret 0x77e9
0x000000000041b3da : ret 0x7ae9
0x0000000000446dfa : ret 0x7b8
0x0000000000425f72 : ret 0x7e20
0x00000000004216ec : ret 0x7f10
0x00000000004618e6 : ret 0x7f3c
0x0000000000432d5e : ret 0x80
0x00000000004228c9 : ret 0x8000
0x000000000046995c : ret 0x8001
0x000000000047288f : ret 0x8005
0x000000000047d6b6 : ret 0x8008
0x000000000046a342 : ret 0x8010
0x00000000004739ce : ret 0x8018
0x0000000000470298 : ret 0x804
0x000000000046c5e0 : ret 0x8116
0x000000000048716b : ret 0x8148
0x000000000045abb4 : ret 0x8166
0x0000000000419eac : ret 0x820f
0x0000000000404090 : ret 0x8301
0x000000000047dbf1 : ret 0x8308
0x000000000042e560 : ret 0x830f
0x000000000043e0a0 : ret 0x8341
0x0000000000421295 : ret 0x8348
0x000000000041b4a3 : ret 0x8349
0x000000000047fd59 : ret 0x8364
0x0000000000411260 : ret 0x840
0x000000000046b1c2 : ret 0x8401
0x0000000000417729 : ret 0x840f
0x000000000043e140 : ret 0x8444
0x000000000049b7a7 : ret 0x8445
0x000000000045c455 : ret 0x8504
0x0000000000462b36 : ret 0x8508
0x0000000000412e22 : ret 0x850f
0x0000000000468465 : ret 0x8545
0x00000000004191c2 : ret 0x8548
0x000000000044ee95 : ret 0x854d
0x0000000000459a2c : ret 0x858b
0x00000000004572cd : ret 0x85c6
0x000000000045531a : ret 0x85c7
0x000000000049aa28 : ret 0x85e9
0x0000000000400c5e : ret 0x860f
0x000000000044f7e5 : ret 0x870f
0x00000000004b815e : ret 0x871e
0x00000000004618ed : ret 0x875
0x0000000000426085 : ret 0x876
0x0000000000489ae0 : ret 0x87e
0x000000000044e87a : ret 0x87e9
0x000000000047e4a4 : ret 0x87f6
0x0000000000447de1 : ret 0x8804
0x000000000045e122 : ret 0x880f
0x000000000044ed37 : ret 0x8840
0x00000000004471e2 : ret 0x8901
0x0000000000470c5e : ret 0x8908
0x0000000000400d06 : ret 0x890f
0x000000000044cf9f : ret 0x8941
0x0000000000400669 : ret 0x8944
0x00000000004112db : ret 0x8945
0x0000000000449c51 : ret 0x8948
0x000000000041008d : ret 0x8949
0x0000000000403af7 : ret 0x894c
0x0000000000445daf : ret 0x894d
0x000000000047959b : ret 0x894e
0x000000000048376c : ret 0x89e9
0x00000000004782fe : ret 0x8b
0x000000000046262a : ret 0x8b04
0x000000000046aeb3 : ret 0x8b05
0x00000000004ba98e : ret 0x8b36
0x000000000044f10a : ret 0x8b41
0x0000000000401484 : ret 0x8b48
0x0000000000410a56 : ret 0x8b49
0x000000000047951e : ret 0x8b4a
0x00000000004115b0 : ret 0x8b4c
0x000000000046de33 : ret 0x8be9
0x0000000000480595 : ret 0x8d01
0x00000000004525fa : ret 0x8d04
0x0000000000459760 : ret 0x8d0f
0x000000000040d34f : ret 0x8d48
0x00000000004032a6 : ret 0x8d49
0x0000000000465ca8 : ret 0x8d4a
0x0000000000411566 : ret 0x8d4c
0x000000000041c78c : ret 0x8d4e
0x00000000004105a1 : ret 0x8e0f
0x00000000004014ae : ret 0x900
0x0000000000421315 : ret 0x90c3
0x000000000041253b : ret 0x938b
0x0000000000485b20 : ret 0x940f
0x000000000048a736 : ret 0x941
0x00000000004659c8 : ret 0x94c
0x000000000047adcf : ret 0x950f
0x0000000000455a79 : ret 0x9522
0x0000000000403938 : ret 0x953d
0x00000000004b97b3 : ret 0x9576
0x00000000004818d0 : ret 0x9589
0x000000000041b3f1 : ret 0x976
0x0000000000488c69 : ret 0x9e74
0x00000000004104b8 : ret 0x9e9
0x0000000000473ed9 : ret 0x9f75
0x00000000004adde0 : ret 0xa
0x00000000004918a0 : ret 0xa074
0x000000000046ade7 : ret 0xa3e8
0x00000000004b94a3 : ret 0xa514
0x0000000000468e8e : ret 0xa9be
0x00000000004b9927 : ret 0xac65
0x000000000049ddfe : ret 0xace8
0x00000000004ba2e4 : ret 0xacfc
0x000000000043e1c6 : ret 0xaf0f
0x000000000041bd8f : ret 0xb48b
0x0000000000402879 : ret 0xb60f
0x000000000046821b : ret 0xb70f
0x000000000043ec70 : ret 0xb8
0x000000000045fdb9 : ret 0xb848
0x000000000044eed5 : ret 0xb87f
0x0000000000426667 : ret 0xb8c3
0x0000000000467152 : ret 0xb8e9
0x00000000004849b2 : ret 0xb908
0x00000000004b97ee : ret 0xb9b9
0x000000000045629d : ret 0xbb41
0x0000000000478df2 : ret 0xbc41
0x000000000049bbc5 : ret 0xbc80
0x000000000046086e : ret 0xbd83
0x000000000044f36d : ret 0xbde8
0x0000000000484ba0 : ret 0xbe08
0x00000000004b9544 : ret 0xbe57
0x000000000045ac88 : ret 0xbf07
0x0000000000483f81 : ret 0xbf08
0x0000000000422789 : ret 0xc000
0x000000000048ef3e : ret 0xc001
0x000000000048eef2 : ret 0xc002
0x0000000000412d63 : ret 0xc031
0x000000000046b720 : ret 0xc084
0x0000000000425e30 : ret 0xc085
0x000000000040e936 : ret 0xc148
0x00000000004672bd : ret 0xc269
0x000000000045b156 : ret 0xc283
0x000000000042f974 : ret 0xc2b2
0x000000000043e3e1 : ret 0xc35b
0x000000000043f3c7 : ret 0xc3e8
0x00000000004b7ce2 : ret 0xc4c3
0x00000000004b90f8 : ret 0xc4ff
0x0000000000432ad8 : ret 0xc580
0x000000000049b7dd : ret 0xc5e9
0x00000000004827a0 : ret 0xc6e9
0x0000000000421211 : ret 0xc6eb
0x00000000004381d0 : ret 0xc748
0x000000000041c03c : ret 0xc789
0x0000000000414fcc : ret 0xc883
0x000000000047d303 : ret 0xc931
0x0000000000442f89 : ret 0xc985
0x0000000000423751 : ret 0xc9ff
0x000000000048132d : ret 0xcb73
0x00000000004b8b8a : ret 0xcca7
0x00000000004bac6d : ret 0xcd11
0x000000000041d421 : ret 0xce31
0x0000000000404d44 : ret 0xce80
0x0000000000480c05 : ret 0xce83
0x0000000000418c6b : ret 0xcf31
0x000000000045969b : ret 0xcfe8
0x00000000004ae1e0 : ret 0xd
0x000000000047bc0a : ret 0xd021
0x000000000044243f : ret 0xd029
0x000000000043294c : ret 0xd073
0x000000000040554e : ret 0xd089
0x00000000004642a5 : ret 0xd108
0x0000000000486b39 : ret 0xd129
0x000000000049a3f6 : ret 0xd284
0x0000000000485a37 : ret 0xd309
0x000000000048904b : ret 0xd348
0x000000000045b173 : ret 0xd529
0x0000000000486bb0 : ret 0xd629
0x000000000046700d : ret 0xd721
0x0000000000486ac2 : ret 0xd729
0x000000000043e1cb : ret 0xd889
0x00000000004ba705 : ret 0xd8f
0x0000000000477983 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047b9d0 : ret 0xda38
0x000000000040f805 : ret 0xdaf7
0x0000000000448311 : ret 0xdb85
0x00000000004ba7e6 : ret 0xdcd9
0x000000000046a8a0 : ret 0xdd72
0x00000000004b9762 : ret 0xde5d
0x0000000000410b95 : ret 0xde74
0x000000000049b3a2 : ret 0xde89
0x00000000004b84f1 : ret 0xde9e
0x0000000000486f88 : ret 0xdee9
0x0000000000422649 : ret 0xe000
0x000000000043bc89 : ret 0xe074
0x0000000000446ded : ret 0xe077
0x0000000000443c29 : ret 0xe083
0x000000000044b373 : ret 0xe183
0x00000000004441a2 : ret 0xe1eb
0x000000000044727b : ret 0xe277
0x000000000040db8c : ret 0xe281
0x0000000000400e0d : ret 0xe283
0x0000000000485c67 : ret 0xe3e8
0x0000000000466370 : ret 0xe575
0x0000000000417707 : ret 0xe675
0x0000000000457ca3 : ret 0xe680
0x00000000004ba906 : ret 0xe71f
0x0000000000401308 : ret 0xe72
0x0000000000452b30 : ret 0xe783
0x000000000046e095 : ret 0xe874
0x0000000000459615 : ret 0xe87f
0x0000000000454eb2 : ret 0xe883
0x000000000046e47e : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x0000000000425583 : ret 0xe901
0x0000000000402b42 : ret 0xe902
0x0000000000449d59 : ret 0xe904
0x000000000047b601 : ret 0xe907
0x00000000004237e6 : ret 0xe908
0x0000000000429406 : ret 0xe910
0x00000000004530d9 : ret 0xe920
0x000000000041fd83 : ret 0xe96e
0x00000000004b8c67 : ret 0xe970
0x0000000000488bac : ret 0xe974
0x000000000041ff2f : ret 0xe977
0x000000000043e36a : ret 0xea81
0x0000000000457c27 : ret 0xeac0
0x0000000000400ce1 : ret 0xeac1
0x0000000000422b16 : ret 0xeb10
0x000000000041fd4f : ret 0xeb5b
0x000000000040e5aa : ret 0xeb72
0x00000000004021d8 : ret 0xebe8
0x00000000004bb418 : ret 0xec2
0x000000000047f539 : ret 0xec75
0x00000000004707c8 : ret 0xed75
0x000000000044aece : ret 0xed85
0x0000000000445d2f : ret 0xee75
0x000000000045977c : ret 0xee8
0x00000000004bb0ba : ret 0xef32
0x0000000000418796 : ret 0xef75
0x0000000000443aa1 : ret 0xefc1
0x0000000000422509 : ret 0xf000
0x000000000040d518 : ret 0xf001
0x000000000040282a : ret 0xf01
0x000000000041a176 : ret 0xf02
0x000000000041ba20 : ret 0xf04
0x000000000045d2ae : ret 0xf08
0x000000000045a137 : ret 0xf0e9
0x000000000046b326 : ret 0xf0eb
0x000000000041b163 : ret 0xf0f
0x00000000004216a2 : ret 0xf10
0x0000000000462055 : ret 0xf229
0x000000000044fd66 : ret 0xf301
0x000000000045d2ea : ret 0xf40
0x00000000004683ed : ret 0xf43
0x000000000049b851 : ret 0xf45
0x00000000004642ca : ret 0xf48
0x000000000045a6f4 : ret 0xf4c
0x0000000000402b4b : ret 0xf4e9
0x0000000000443c0c : ret 0xf631
0x00000000004214b9 : ret 0xf66
0x000000000043df8c : ret 0xf685
0x000000000041bd73 : ret 0xf710
0x000000000048eaba : ret 0xf72c
0x000000000047a005 : ret 0xf74
0x0000000000426b0c : ret 0xf748
0x0000000000465e10 : ret 0xf749
0x00000000004a05fa : ret 0xf7d9
0x000000000049eafa : ret 0xf7f4
0x00000000004329fe : ret 0xf80
0x00000000004223c9 : ret 0xf800
0x000000000047daba : ret 0xf83c
0x00000000004b83d0 : ret 0xf869
0x00000000004a34b8 : ret 0xf8bd
0x00000000004a34bc : ret 0xf8be
0x00000000004a3860 : ret 0xf91d
0x00000000004044ca : ret 0xf929
0x0000000000459b39 : ret 0xfa80
0x000000000048ab46 : ret 0xfa81
0x0000000000405562 : ret 0xfac1
0x000000000046e35a : ret 0xfaf8
0x000000000046e0fa : ret 0xfafe
0x000000000046dc4a : ret 0xfb5b
0x0000000000443dba : ret 0xfbd9
0x0000000000422289 : ret 0xfc00
0x000000000048c086 : ret 0xfc01
0x000000000048c03a : ret 0xfc02
0x000000000043f4ba : ret 0xfc3
0x0000000000446ec0 : ret 0xfd83
0x0000000000441bfa : ret 0xfdc3
0x00000000004bde1c : ret 0xfdc9
0x00000000004737fa : ret 0xfde8
0x0000000000402800 : ret 0xfdf
0x0000000000422149 : ret 0xfe00
0x000000000043e0c3 : ret 0xfe83
0x000000000043291e : ret 0xfec5
0x0000000000422009 : ret 0xff00
0x00000000004917de : ret 0xff2
0x000000000042e37a : ret 0xff3
0x0000000000421ec9 : ret 0xff80
0x0000000000488e86 : ret 0xff81
0x0000000000488e3a : ret 0xff82
0x000000000040c28a : ret 0xff99
0x0000000000487120 : ret 0xff9f
0x000000000044426a : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x000000000048ee27 : ret 0xffbf
0x0000000000421d89 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x000000000042104e : ret 0xffdf
0x000000000044f528 : ret 0xffe0
0x000000000040863a : ret 0xffe2
0x000000000049e42a : ret 0xffe7
0x000000000044165a : ret 0xffe8
0x000000000044155a : ret 0xffe9
0x0000000000459ddc : ret 0xffee
0x000000000040ee2c : ret 0xffef
0x000000000040dade : ret 0xfff0
0x00000000004219c9 : ret 0xfff8
0x000000000041c5a1 : ret 0xfff9
0x000000000043f079 : ret 0xfffb
0x0000000000421889 : ret 0xfffc
0x0000000000441ceb : ret 0xfffd
0x00000000004052f8 : ret 0xfffe
0x00000000004106fa : ret 0xffff
0x000000000040ffc1 : ret 1
0x0000000000419d3a : ret 2
0x0000000000403be8 : ret 3
0x0000000000426139 : ret 4
0x000000000041a686 : ret 5
0x0000000000418de0 : ret 6
0x00000000004b2284 : ret 7
0x000000000040a43e : ret 8
0x000000000043c73a : ret 9
0x00000000004402f2 : retf -0x224 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a398c : retf -0x6e8 ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x000000000046265d : retf -0x6f9a ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x462630
0x00000000004928cf : retf -0x7af1 ; call qword ptr [rsi]
0x00000000004a3759 : retf ; clc ; call qword ptr [rax - 0x1f000734]
0x000000000043d855 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e4a5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x0000000000466e6b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416507 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000047798e : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004261cd : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e352 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465722 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004b1c80 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447b68 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000489f86 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000460575 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042e89d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c286 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044f8cb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047a931 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042cd62 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000482181 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046b0f1 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b0e8 ; ret
0x0000000000478a0b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442cf6 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416958 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004666e2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004a3248 : rol byte ptr [rbx], 0xf8 ; jmp rax
0x00000000004033ba : rol byte ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e361 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c4cb : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004408d7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004666c2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043e176 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044dfe2 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043e1d7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e1c2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000004c2820 : rol byte ptr [rcx], 0xf8 ; call rsp
0x000000000043294e : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000466722 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004666d2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444a06 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047c947 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000466712 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004b7ce0 : rol cl, 0xc2 ; ret
0x00000000004681ef : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000046666c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000400593 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x0000000000441eeb : rol eax, 1 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000046b163 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000044424d : rol ecx, -0x1f ; add edx, ebx ; loopne 0x4442b7 ; pop rbp ; ret
0x00000000004a34f8 : rol edx, -8 ; call qword ptr [rcx - 0x3d]
0x0000000000426052 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x426099 ; add rax, rdi ; ret
0x00000000004239f7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004109aa : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473a19 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000446dba : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000049d648 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049ce71 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049c9f2 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046ad6c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ad9f ; ret
0x00000000004427d8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479406 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401305 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049b187 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x0000000000443145 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467b70 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f42d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046dafe : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f41e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000479f8e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042cc3c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426022 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488c66 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488ba9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004239f4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ae088 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004261c5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488406 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004691ba : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdacd
0x000000000045dc5a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b5a8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000426012 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426042 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426032 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041bd27 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041c046 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000004154da : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004792a3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000412995 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000469fd5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000040db89 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000459779 : ror byte ptr [rax - 0x77], 1 ; ret 0xee8
0x0000000000420c62 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004764c6 : ror byte ptr [rax - 0x77], 5 ; ret 0x256c
0x00000000004178bd : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004133e1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4133f6 ; ret
0x000000000047adc9 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040fcef : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046ac90 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041cbc6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478738 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049cebe : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c785 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb0fa4
0x0000000000472052 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472ddc : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456de2 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a80a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000475f5d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000449353 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469c2e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448894 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047aaba : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004881b4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046db6d : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049d93c : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000447bd0 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446dc9 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447250 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000046b0e3 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000465152 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044f6be : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472505 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043e014 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x00000000004115aa : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000426949 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000004426dc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000468218 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041ddbd : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046af17 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047efc6 : ror byte ptr [rdi], 0x84 ; ret
0x000000000044661c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043815a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000438196 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459dd9 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x0000000000457de7 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490b88 : ror byte ptr [rdi], 0x8f ; ret
0x000000000044243c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c33c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047ba7a : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b3d7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x00000000004618e3 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047adcc : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485a34 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047b9cd : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000046714f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x000000000046700a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f802 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466c3e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fcbc : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040db9e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40db88 ; ret
0x00000000004191e9 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046d7f5 : ror byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047bcef : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047be03 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000457de6 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004a3724 : ror dh, 0xf8 ; call qword ptr [rax]
0x00000000004a3718 : ror dl, 1 ; clc ; jmp qword ptr [rax]
0x00000000004106c3 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000047d126 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000472e2c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047a293 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a3a0 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x00000000004329a2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047e251 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414b5d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x414b57 ; ret
0x0000000000463a0d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x463a07 ; ret
0x000000000040eb28 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405332 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000044ee92 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042c845 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441ce5 : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41dfc6
0x0000000000441d2a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41dfc6
0x000000000043bc87 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000489048 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x000000000046810b : ror dword ptr [rdi], -0x6c ; ret
0x000000000042f108 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f814 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f5e6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042f566 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042f8a4 : ror dword ptr [rdi], -0x7b ; je 0x42f8b4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f39b : ror dword ptr [rdi], -0x7b ; jno 0x42f3b0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f463 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f0e0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000414b5c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x414b58 ; ret
0x0000000000463a0c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x463a08 ; ret
0x0000000000446dc4 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004a3455 : sahf ; clc ; jmp qword ptr [rax]
0x00000000004015ac : sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042b80e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004798e1 : sahf ; ret 0x148
0x00000000004b8bc5 : sahf ; ret 0x38ae
0x0000000000450fe0 : sahf ; ret 0x8348
0x000000000047bc34 : sahf ; ret 0xe8c1
0x000000000049b863 : sahf ; ret 0xf45
0x000000000041695e : sal bh, 0xd8 ; ret
0x000000000043e4b9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004228c7 : sal bh, 1 ; ret 0x8000
0x0000000000422787 : sal bh, 1 ; ret 0xc000
0x0000000000422647 : sal bh, 1 ; ret 0xe000
0x0000000000422507 : sal bh, 1 ; ret 0xf000
0x00000000004223c7 : sal bh, 1 ; ret 0xf800
0x0000000000422287 : sal bh, 1 ; ret 0xfc00
0x0000000000422147 : sal bh, 1 ; ret 0xfe00
0x0000000000422007 : sal bh, 1 ; ret 0xff00
0x0000000000421ec7 : sal bh, 1 ; ret 0xff80
0x0000000000421d87 : sal bh, 1 ; ret 0xffc0
0x0000000000421c47 : sal bh, 1 ; ret 0xffe0
0x0000000000421b07 : sal bh, 1 ; ret 0xfff0
0x00000000004219c7 : sal bh, 1 ; ret 0xfff8
0x0000000000421887 : sal bh, 1 ; ret 0xfffc
0x0000000000421747 : sal bh, 1 ; ret 0xfffe
0x000000000045a3f4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000466e5f : sal bl, 1 ; ret
0x0000000000473532 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000426008 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e133 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e118 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000458c2e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004133e4 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000442801 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004164b5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043d9c0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000414b60 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e4fb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dba3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000047402f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000466e9b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004a3cd0 : sal byte ptr [rbp - 7], 1 ; jmp rax
0x000000000047e38d : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000042393c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004427d6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440ce2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004656eb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047632d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x476352
0x00000000004237f3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a3d0c : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a3d10 : sal byte ptr [rsi - 7], 1 ; jmp rax
0x000000000046d5f1 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040dad9 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b111 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000478caf : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000473ec7 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x00000000004154d8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004c1021 : sal ebp, 1 ; call rdx
0x00000000004329a5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000425d3e : salc ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x000000000043bcc6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044dc27 : salc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048e6b5 : salc ; add r8b, bpl ; ret
0x000000000048eab6 : salc ; add r8b, bpl ; ret 0xf72c
0x000000000042fb89 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000049eb91 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043dc3b : salc ; clc ; ret
0x00000000004a0907 : salc ; idiv edi ; ret
0x0000000000473ec9 : salc ; ret
0x00000000004bdfc9 : salc ; std ; call rsp
0x000000000041efd2 : salc ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41efe4 ; call rax
0x000000000045a6ed : salc ; xor al, 0x4b ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004a3769 : sar al, 1 ; call rax
0x0000000000454d23 : sar bl, 0xff ; call qword ptr [rax]
0x0000000000485b1a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000483edc : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484523 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x00000000004c2ea8 : sar bpl, 1 ; jmp qword ptr [rdx]
0x000000000044d5a3 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471321 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a76c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449d51 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a3db0 : sar byte ptr [rbp - 7], 1 ; push rax ; jge 0x4a3db7 ; call qword ptr [rax]
0x00000000004a3354 : sar byte ptr [rbx - 8], 1 ; jmp qword ptr [rax]
0x000000000044dac9 : sar byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44dadd ; call rax
0x000000000044419d : sar byte ptr [rcx], cl ; ret
0x0000000000444263 : sar byte ptr [rdi + 0x4a52c5], 0xe8 ; ret 0xffb0
0x0000000000474f32 : sar byte ptr [rdi + 0x4b605c], 0xe8 ; ret
0x0000000000474fbc : sar byte ptr [rdi + 0x4bc6b8], 0x83 ; ret
0x0000000000478940 : sar byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x000000000044120c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047c91c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b955f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004bdd98 : sar byte ptr [rsi - 0x625f0003], 0xfd ; ljmp ptr [rax] ; ret 0xfffd
0x0000000000441ef9 : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441eec : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004c2ea9 : sar ch, 1 ; jmp qword ptr [rdx]
0x0000000000435783 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43578e ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402c2e : sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004a35b5 : sar eax, -1 ; jo 0x4a3584 ; clc ; inc dword ptr [rax] ; ret
0x00000000004a34ed : sar eax, -1 ; mov cl, 0xc1 ; clc ; push qword ptr [rcx] ; ret 0xfff8
0x00000000004a3575 : sar eax, -1 ; mov eax, edx ; clc ; lcall ptr [rbx] ; ret
0x00000000004743f1 : sar eax, -1 ; xor eax, eax ; ret
0x00000000004a34f1 : sar eax, -1 ; xor edx, eax ; clc ; inc ecx ; ret 0xfff8
0x00000000004a376d : sar eax, 1 ; jmp qword ptr [rax]
0x0000000000464b7c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047cd4b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000441dc4 : sar ebp, -1 ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000441e66 : sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b92c3 : sar ecx, 1 ; jnp 0x4b9284 ; ret
0x00000000004261c7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464b7b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004261c6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000476afa : sbb al, 0x24 ; add rsp, 0x18 ; jmp r11
0x0000000000476e69 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x0000000000476f7b : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x00000000004c2fdc : sbb al, 0x4c ; add byte ptr [rax], al ; mov al, 0x3b ; clc ; call qword ptr [rax]
0x00000000004c54dc : sbb al, 0x71 ; add byte ptr [rax], al ; jo 0x4c54fd ; cli ; jmp rdx
0x0000000000418ba3 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x00000000004c67dc : sbb al, 0x84 ; add byte ptr [rax], al ; adc bh, dl ; cli ; jmp rsi
0x0000000000467b6e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000049ca46 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004a3871 : sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a37ed : sbb al, 0xf9 ; call qword ptr [rsi]
0x00000000004a39ad : sbb al, 0xf9 ; call rax
0x00000000004a39a9 : sbb al, 0xf9 ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a392d : sbb al, 0xf9 ; jmp rsp
0x000000000047bf40 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004a35d0 : sbb al, ah ; clc ; jmp rax
0x00000000004c2a99 : sbb al, bh ; call qword ptr [rax]
0x00000000004bfe55 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x4e], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000460b25 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004a37c5 : sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a39bd : sbb bh, cl ; call qword ptr [rax]
0x00000000004a3881 : sbb bh, cl ; call rdx
0x00000000004a387d : sbb bh, cl ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a3801 : sbb bh, cl ; jmp rsi
0x00000000004bddc0 : sbb bl, al ; std ; inc eax ; ret 0xfffd
0x00000000004bddb4 : sbb bl, al ; std ; lcall ptr [rax] ; ret
0x00000000004c70c1 : sbb bl, bh ; call qword ptr [rax]
0x00000000004b8045 : sbb bl, byte ptr [rsi] ; ret
0x00000000004785a4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049ed2b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041075a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047adc6 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047176b : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004785a5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417123 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000043e9ba : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000448091 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000040997e : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c57
0x0000000000414bc1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004104b1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041de57 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412533 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049ed2c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c6be : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000449434 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c6bd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041547f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000464ea5 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444979 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416cd3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042cb01 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410b79 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004164f7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004649eb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000471689 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b599 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000464f83 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041ca53 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410a53 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041075b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000464fd7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047adc7 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000041e572 : sbb byte ptr [rdi], cl ; test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411c59 : sbb byte ptr [rdx + rcx*2], 0 ; pop rbx ; ret
0x00000000004a39bc : sbb byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x00000000004c19f8 : sbb byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x0000000000418dc2 : sbb ch, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a3851 : sbb cl, bh ; call qword ptr [rdx]
0x00000000004a3791 : sbb cl, bh ; inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a384d : sbb cl, bh ; jmp qword ptr [rdx + 0x12fff918]
0x00000000004a37d1 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000004a3991 : sbb cl, bh ; jmp rax
0x00000000004a398d : sbb cl, bh ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x0000000000412be5 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x00000000004234bd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429f5d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004230ad : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422bb9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004233c9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bbaa : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b3ca : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b7ba : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afda : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aabd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a29d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422e3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429a7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042317d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000423499 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b179 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423569 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429dbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042959d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a77d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042331d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422b0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000422f0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b66a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae8a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bf9a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004233ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422bdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004298dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c7f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422fdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429a13 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a713 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a233 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b56b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042be9b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042324d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aa53 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d53 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429873 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a573 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b6bb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aedb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ca3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004bee68 : sbb dh, bh ; hlt ; call qword ptr [rax]
0x00000000004a3880 : sbb dil, cl ; call rdx
0x00000000004c55e9 : sbb dl, bh ; jmp qword ptr [rax]
0x0000000000476aff : sbb dl, dh ; jmp r11
0x0000000000494698 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049cc1c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000494621 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494699 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000453378 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004ba8fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000454fd6 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043d697 : sbb eax, -1 ; ret
0x00000000004429c5 : sbb eax, 0 ; leave ; ret
0x00000000004a3861 : sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x00000000004a37a1 : sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x000000000049ecb0 : sbb eax, 0x22d8cb ; jne 0x49eca0 ; pop rbx ; ret
0x0000000000412705 : sbb eax, 0xf48004a ; ret 0x294d
0x0000000000412459 : sbb eax, 0xf48004a ; ret 0x8948
0x0000000000494441 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004944b9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000478a0a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049c9f1 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043d695 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000047b779 : sbb ebx, 0x89000001 ; ret
0x000000000045c460 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000446ad7 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3949 : sbb ecx, edi ; call rsp
0x00000000004a3945 : sbb ecx, edi ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x00000000004a37c9 : sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a3948 : sbb ecx, r15d ; call rsp
0x00000000004a3875 : sbb edi, ecx ; jmp qword ptr [rdx]
0x00000000004a37b9 : sbb edi, ecx ; jmp rax
0x000000000041efd1 : sbb edx, esi ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41efe5 ; call rax
0x0000000000425add : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042bbfe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004c6501 : scasb al, byte ptr [rdi] ; cli ; call rdx
0x000000000046ea3e : scasb al, byte ptr [rdi] ; out 0x25, eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000042bcfd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042557d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000401364 : scasd eax, dword ptr [rdi] ; ret
0x00000000004105fc : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e1da : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420c68 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000401483 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043e1c5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044f9e0 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048840d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004427dc : setae al ; ret
0x000000000041695c : setne al ; neg eax ; ret
0x00000000004441a0 : setne dl ; jmp 0x444188
0x0000000000465dc5 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004c57c0 : shl byte ptr [rcx], 1 ; cli ; jmp rdi
0x00000000004a3318 : shl byte ptr [rdx - 8], 1 ; push qword ptr [rax + 0x64] ; clc ; call qword ptr [rax]
0x00000000004a3ccc : shl byte ptr [rdx], 0xf9 ; call rax
0x000000000043d8df : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000043bc83 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004214b5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042fa9b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042fab2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465966 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465977 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042f991 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af2b0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b9448 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000042fa16 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d73b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000465962 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042facd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fab6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fa9f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e55b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fa31 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425e2c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042f8f1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444251 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000044424e : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000478f6c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478ef7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478ec6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042c841 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000476331 : shl edx, 5 ; add rdx, rax ; jmp 0x47634e
0x0000000000478f6b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478ef6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478ec5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000476330 : shl rdx, 5 ; add rdx, rax ; jmp 0x47634f
0x000000000047632f : shl rdx, 5 ; add rdx, rax ; jmp 0x476350
0x000000000046a8bf : shr bl, cl ; ret
0x0000000000445c8d : shr bl, cl ; ret 0x438b
0x0000000000400620 : shr byte ptr [rax + rax], 0xbf ; ret 0
0x000000000042e4ff : shr byte ptr [rcx], 0xc8 ; ret
0x000000000044c848 : shr byte ptr [rcx], cl ; ret
0x0000000000468200 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004261cb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004a3338 : shr byte ptr [rdi - 8], 1 ; push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x000000000045ec57 : shr cl, cl ; ret
0x0000000000426c59 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e3ea : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e3c9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000047907c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479001 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478fd0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464c83 : shr edx, 2 ; sub eax, edx ; ret
0x000000000047907b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479000 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478fcf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464c82 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae489 : sldt word ptr [rax] ; ret
0x0000000000445d1c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a702 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a39f6 : stc ; call qword ptr [rax + 0x10fff911]
0x00000000004a39ee : stc ; call qword ptr [rax + 0x10fff912]
0x00000000004a39e6 : stc ; call qword ptr [rax + 0x10fff913]
0x00000000004a39de : stc ; call qword ptr [rax + 0x10fff914]
0x00000000004a37c6 : stc ; call qword ptr [rax + 0x20fff919]
0x00000000004a399e : stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004a37a6 : stc ; call qword ptr [rax]
0x00000000004a3872 : stc ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a3852 : stc ; call qword ptr [rdx]
0x00000000004a37ee : stc ; call qword ptr [rsi]
0x00000000004a3796 : stc ; call rax
0x0000000000466f99 : stc ; call rbx
0x00000000004c4562 : stc ; call rdi
0x00000000004a3882 : stc ; call rdx
0x00000000004a37de : stc ; call rsi
0x00000000004a394a : stc ; call rsp
0x000000000047aab2 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004879d7 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485c8a : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a398a : stc ; dec edx ; sbb cl, bh ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a39aa : stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a3792 : stc ; inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a3cc6 : stc ; inc dword ptr [rax + 0x40] ; stc ; inc eax ; and bh, cl ; call rax
0x00000000004a3a02 : stc ; inc dword ptr [rax] ; adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004a3d16 : stc ; inc dword ptr [rax] ; ja 0x4a3d19 ; call qword ptr [rax]
0x00000000004a3cda : stc ; inc dword ptr [rax] ; jbe 0x4a3cdd ; call qword ptr [rax]
0x00000000004a3d6e : stc ; inc dword ptr [rax] ; jl 0x4a3d71 ; call qword ptr [rax]
0x00000000004a3d3a : stc ; inc dword ptr [rax] ; js 0x4a3d3d ; jmp qword ptr [rax]
0x00000000004a3c06 : stc ; inc dword ptr [rax] ; psubw mm7, mm7 ; jo 0x4a3c25 ; stc ; call rax
0x00000000004a37c2 : stc ; inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a3946 : stc ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x00000000004a387e : stc ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a386e : stc ; inc dword ptr [rdx] ; sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a37da : stc ; inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x00000000004a3cca : stc ; inc eax ; and bh, cl ; call rax
0x00000000004a3d32 : stc ; inc eax ; ja 0x4a3d35 ; jmp rax
0x00000000004a3d0a : stc ; inc eax ; jbe 0x4a3d0d ; call rax
0x00000000004a3d62 : stc ; inc eax ; jnp 0x4a3d65 ; jmp rax
0x00000000004a385e : stc ; inc edx ; sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x000000000042acb2 : stc ; je 0x42ac7e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496122 : stc ; je 0x4960ee ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a3bc2 : stc ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a39d6 : stc ; jmp qword ptr [rax + 0x10fff915]
0x00000000004a3bfa : stc ; jmp qword ptr [rax + 0x20fff910]
0x00000000004a3bf2 : stc ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3bea : stc ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3be2 : stc ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3bda : stc ; jmp qword ptr [rax + 0x20fff914]
0x00000000004a37ca : stc ; jmp qword ptr [rax]
0x00000000004a384e : stc ; jmp qword ptr [rdx + 0x12fff918]
0x00000000004a3876 : stc ; jmp qword ptr [rdx]
0x00000000004a37d2 : stc ; jmp qword ptr [rsi]
0x00000000004a37ba : stc ; jmp rax
0x00000000004a3866 : stc ; jmp rdx
0x00000000004a3802 : stc ; jmp rsi
0x00000000004a392e : stc ; jmp rsp
0x00000000004b92c4 : stc ; jnp 0x4b9283 ; ret
0x0000000000432358 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d767 : stc ; mov r15, rax ; jmp 0x46d735
0x00000000004a398e : stc ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a39a6 : stc ; push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004a3c0a : stc ; push qword ptr [rax + 0xe] ; stc ; call rax
0x00000000004a3a06 : stc ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004a3d86 : stc ; push qword ptr [rax - 0x2f000684] ; jl 0x4a3d91 ; jmp rax
0x00000000004a3d5e : stc ; push qword ptr [rax - 0x3f000685] ; jnp 0x4a3d69 ; jmp rax
0x00000000004a3d06 : stc ; push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3d11 ; call rax
0x00000000004a3bbe : stc ; push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3bd6 : stc ; push qword ptr [rax] ; adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3942 : stc ; push qword ptr [rcx + rbx + 0x1944fff9] ; stc ; call rsp
0x00000000004a3a56 : stc ; push qword ptr [rdx + 0x15] ; stc ; jmp rdx
0x00000000004a387a : stc ; push qword ptr [rdx + 0x42fff91a] ; sbb bh, cl ; call rdx
0x00000000004a3db2 : stc ; push rax ; jge 0x4a3db5 ; call qword ptr [rax]
0x00000000004a3d92 : stc ; push rax ; jl 0x4a3d95 ; call qword ptr [rax]
0x00000000004a3cd6 : stc ; push rax ; jne 0x4a3cdd ; inc dword ptr [rax] ; jbe 0x4a3ce1 ; call qword ptr [rax]
0x00000000004a3d6a : stc ; push rax ; jnp 0x4a3d71 ; inc dword ptr [rax] ; jl 0x4a3d75 ; call qword ptr [rax]
0x00000000004a379e : stc ; push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a3a52 : stc ; push rdx ; adc eax, 0x1572fff9 ; stc ; jmp rdx
0x000000000043dc3a : stc ; salc ; clc ; ret
0x0000000000441dc3 : stc ; sar ebp, -1 ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000435c84 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004bdd36 : std ; call qword ptr [rax - 0x1f0002b3]
0x00000000004bdcaa : std ; call qword ptr [rax]
0x00000000004c3cc2 : std ; call qword ptr [rbx]
0x00000000004bddee : std ; call qword ptr [rdx - 0x2d00023a]
0x00000000004bdcb2 : std ; call rax
0x00000000004c6fd2 : std ; call rcx
0x00000000004bddf2 : std ; call rdx
0x00000000004bdeda : std ; call rsp
0x00000000004401cc : std ; dec dword ptr [rax - 0x75] ; jge 0x4401d8 ; call rbx
0x000000000044047f : std ; dec dword ptr [rax - 0x75] ; jge 0x44048b ; call rbx
0x0000000000442017 : std ; dec dword ptr [rax - 0x75] ; jge 0x442023 ; call rbx
0x000000000043fa5b : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044008a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044048d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440097 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4400a3 ; call rbx
0x00000000004401be : std ; dec dword ptr [rcx - 0x75] ; jge 0x4401ca ; call rbx
0x0000000000440301 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44030d ; call rbx
0x0000000000440471 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44047d ; call rbx
0x0000000000441c8f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441c9b ; call rbx
0x0000000000441db7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441dc3 ; call rbx
0x0000000000441efa : std ; dec dword ptr [rcx - 0x75] ; jge 0x441f06 ; call rbx
0x0000000000441ffb : std ; dec dword ptr [rcx - 0x75] ; jge 0x442007 ; call rbx
0x00000000004bdd32 : std ; inc dword ptr [rax + 0x4b] ; std ; call qword ptr [rax - 0x1f0002b3]
0x00000000004bdca6 : std ; inc dword ptr [rax + 0x6a] ; std ; call qword ptr [rax]
0x00000000004be2b2 : std ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004bdd42 : std ; inc dword ptr [rax - 0x2f0002ac] ; push rsi ; std ; jmp qword ptr [rax]
0x000000000047352f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bdd52 : std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004bddc2 : std ; inc eax ; ret 0xfffd
0x00000000004781de : std ; jbe 0x4781eb ; ret
0x00000000004bdcde : std ; jmp qword ptr [rax + 0x20fffd85]
0x00000000004bdce6 : std ; jmp qword ptr [rax + 0x20fffd88]
0x00000000004bdcee : std ; jmp qword ptr [rax + 0x20fffd8b]
0x00000000004bdcf6 : std ; jmp qword ptr [rax + 0x20fffd8e]
0x00000000004bdcfe : std ; jmp qword ptr [rax + 0x20fffd91]
0x00000000004bdd06 : std ; jmp qword ptr [rax + 0x20fffd94]
0x00000000004bdd0e : std ; jmp qword ptr [rax + 0x20fffd97]
0x00000000004bdce2 : std ; jmp qword ptr [rax]
0x00000000004bde0e : std ; jmp qword ptr [rbx - 0x1f000238]
0x00000000004c918a : std ; jmp qword ptr [rbx]
0x00000000004c2eaa : std ; jmp qword ptr [rdx]
0x00000000004bdcda : std ; jmp rax
0x00000000004bddd2 : std ; jmp rsp
0x00000000004bddb2 : std ; lcall ptr [rax] ; ret
0x00000000004bde82 : std ; lcall ptr [rdx - 0x34] ; std ; jmp rsp
0x00000000004bde7e : std ; lcall ptr [rdx - 0x34] ; std ; lcall ptr [rdx - 0x34] ; std ; jmp rsp
0x00000000004be2ae : std ; ljmp ptr [rax + rbx*8 - 3] ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004bdd9e : std ; ljmp ptr [rax] ; ret 0xfffd
0x00000000004bde0a : std ; ljmp ptr [rbp - 0x38] ; std ; jmp qword ptr [rbx - 0x1f000238]
0x000000000047d5c8 : std ; mov r15, rax ; jmp 0x47d5e2
0x0000000000431b7b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bddca : std ; push qword ptr [rax + 0x28fffdc2] ; ret 0xfffd
0x00000000004bdd4e : std ; push qword ptr [rax + 0x5b] ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004bdcc6 : std ; push qword ptr [rax] ; jns 0x4bdccd ; call qword ptr [rax]
0x00000000004bdcae : std ; push rax ; insd dword ptr [rdi], dx ; std ; call rax
0x00000000004bdcce : std ; push rax ; jl 0x4bdcd5 ; call rax
0x0000000000458a11 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440ce0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000426661 : sti ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000004c70c2 : sti ; call qword ptr [rax]
0x00000000004c731a : sti ; call rsp
0x000000000046bd07 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474794 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046e319 : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000466415 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000044e3a6 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004c6eba : sti ; jmp qword ptr [rdx]
0x00000000004c6d4a : sti ; jmp rsi
0x0000000000431f58 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b944a : sti ; ret
0x000000000048ee26 : sti ; ret 0xffbf
0x00000000004a3574 : sti ; sar eax, -1 ; mov eax, edx ; clc ; lcall ptr [rbx] ; ret
0x000000000044ef47 : sti ; test rax, rax ; je 0x44ef55 ; call rax
0x000000000043ff30 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047ab3f : stosb byte ptr [rdi], al ; add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x00000000004b9924 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000046bd06 : stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004683e8 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004683e9 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000474931 : stosd dword ptr [rdi], eax ; push rsi ; and eax, 0x89485300 ; ret
0x00000000004a3580 : stosd dword ptr [rdi], eax ; ret
0x00000000004683e7 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bae11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c4898 : sub ah, ah ; stc ; jmp rax
0x0000000000469e90 : sub ah, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c101d : sub al, 0 ; add byte ptr [rax - 0x2f], ah ; cmc ; call rdx
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040154e : sub al, 0 ; xor eax, eax ; ret
0x0000000000417db0 : sub al, 0x48 ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x417dc4 ; call rax
0x0000000000442baa : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042f0e3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041dbad : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041efd3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41efe3 ; call rax
0x0000000000480e51 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000045fdb3 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045f85a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000463e7c : sub bh, bh ; loopne 0x463e19 ; mov eax, 0xffffffff ; ret
0x000000000049e101 : sub bl, dh ; ret
0x000000000049e100 : sub bl, r14b ; ret
0x000000000041075e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046dbca : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046c9c6 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000483c37 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041075f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466ab0 : sub byte ptr [rax - 0x73], cl ; je 0x466adf ; call rbx
0x000000000041c59b : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041ea94 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040560f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004104b5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000462d4c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040d479 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004821ac : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044272d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478691 : sub byte ptr [rax], al ; jne 0x4786a8 ; add rsp, 0x38 ; ret
0x000000000044418a : sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004456b5 : sub byte ptr [rax], al ; ret
0x0000000000444164 : sub byte ptr [rax], al ; test eax, eax ; je 0x444176 ; ret
0x000000000043fda5 : sub byte ptr [rax], al ; test rax, rax ; je 0x43fdb6 ; ret
0x000000000040db5a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414840 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444143 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000444142 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004654cc : sub byte ptr [rbx], cl ; call 0x4017c5
0x000000000044cffa : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000487fc4 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041ebac : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b02b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004be310 : sub byte ptr [rsi + rdi*8], al ; call rax
0x00000000004be30c : sub byte ptr [rsi + rdi*8], al ; ljmp ptr [rax] ; add al, 0xfe ; call rax
0x00000000004a35ec : sub ch, 0xf8 ; call qword ptr [rax]
0x000000000047baed : sub cl, al ; call 0xffffffff8a09e418
0x000000000047c444 : sub cl, al ; call 0xffffffff8a09ed6f
0x0000000000471c0e : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000004683ea : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000488632 : sub cl, byte ptr [rsp] ; ret
0x0000000000414025 : sub cl, ch ; ret 0xfffe
0x00000000004bddd0 : sub dl, al ; std ; jmp rsp
0x00000000004bddb0 : sub dl, al ; std ; lcall ptr [rax] ; ret
0x0000000000476e9a : sub dl, dh ; call r11
0x00000000004c0cdd : sub dword ptr [rax], eax ; add byte ptr [rax - 0x46], al ; cmc ; call qword ptr [rax]
0x00000000004301a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4301bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43030d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43045d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430597 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4305ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4306fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430837 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43084d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43099d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ad7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430aed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ec7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430edd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431017 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43102d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431167 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43117d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431407 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43141d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430103 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004300ff : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004301ad : sub dword ptr [rdi], esp ; jmp r9
0x000000000042f8c6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000041eb89 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004113de : sub eax, 0x29480005 ; ret
0x000000000044f507 : sub eax, 0x740027c5 ; add esi, ebx ; ret
0x000000000045d361 : sub eax, 0x83000000 ; ret
0x0000000000482bb7 : sub eax, 0xbfffffd7 ; ret
0x000000000043ec3c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d464 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043db14 : sub eax, 1 ; ret
0x0000000000478436 : sub eax, dword ptr [0] ; ret
0x00000000004168e9 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416876 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b5d25], 1 ; ret
0x00000000004167e5 : sub eax, dword ptr [rax] ; ret
0x0000000000417db2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417dc2 ; call rax
0x000000000040181f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499f51 : sub eax, dword ptr [rcx + r8*4] ; je 0x499f37 ; ret
0x0000000000499f52 : sub eax, dword ptr [rcx + rax*4] ; je 0x499f36 ; ret
0x000000000041701e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e53a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e526 ; ret
0x00000000004164d3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000041518d : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466aeb : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415c09 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047a62d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042292c : sub eax, ecx ; ret
0x00000000004239f9 : sub eax, edi ; ret
0x0000000000412b8e : sub eax, edx ; ret
0x000000000043dcc7 : sub eax, edx ; vzeroupper ; ret
0x00000000004152ee : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004129e8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b96be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b8155 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479615 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044424c : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004c7319 : sub edi, ebx ; call rsp
0x0000000000442771 : sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000416500 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004164f5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426054 : sub edx, eax ; jbe 0x426097 ; add rax, rdi ; ret
0x0000000000426064 : sub edx, eax ; jbe 0x426099 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426074 : sub edx, eax ; jbe 0x426099 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000426084 : sub edx, eax ; jbe 0x426099 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000410592 : sub edx, esi ; mov rdi, r15 ; call rax
0x00000000004121a4 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000004a10b1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000440393 : sub esp, ebx ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000415c08 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000043db13 : sub rax, 1 ; ret
0x0000000000478435 : sub rax, qword ptr [0] ; ret
0x0000000000417db1 : sub rax, qword ptr [rax] ; test rax, rax ; je 0x417dc3 ; call rax
0x000000000041701d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000478434 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466aea : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004239f8 : sub rax, rdi ; ret
0x0000000000412b8d : sub rax, rdx ; ret
0x000000000043dcc6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426053 : sub rdx, rax ; jbe 0x426098 ; add rax, rdi ; ret
0x0000000000410591 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000004121a3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004a10b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000442827 : syscall ; pop rdx ; pop rsi ; ret
0x00000000004671d5 : syscall ; ret
0x00000000004a3548 : test ah, 0xf8 ; call qword ptr [rsi + 0x17fff8c5]
0x000000000044383f : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046d7f7 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c8bd5 : test al, 0 ; add al, cl ; cmp bh, ch ; call rcx
0x0000000000415609 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a143 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c413 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004c0028 : test al, 0x54 ; cmc ; call qword ptr [rcx]
0x000000000041da7d : test al, 0x6c ; add byte ptr [rbp - 0x42], dh ; ret
0x00000000004c6288 : test al, 0x8b ; cli ; call rsi
0x00000000004b8a17 : test al, 0x97 ; xchg eax, esp ; ret
0x000000000047dc3d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c0dc8 : test al, 0xbe ; cmc ; call qword ptr [rcx]
0x00000000004c6868 : test al, 0xd8 ; cli ; jmp rdi
0x0000000000442439 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000043f4b6 : test al, 2 ; cmove eax, edx ; ret
0x00000000004106d3 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000042e4fa : test al, al ; jne 0x42e4e8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000041a630 : test al, dh ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004212b6 : test ax, 1 ; ret
0x000000000044661e : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004190d4 : test bh, dl ; add al, 0 ; add dh, dh ; ret
0x000000000046b0f3 : test bl, bl ; je 0x46b0e6 ; ret
0x000000000045bc93 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000475155 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000047c553 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000047bb29 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046710e : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x00000000004405a1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000440ce4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000475156 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046fc51 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043be5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043b29a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041680a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411dda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442d28 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004167ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e39a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043bc9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004c67dd : test byte ptr [rax], al ; add byte ptr [rax], dl ; xlatb ; cli ; jmp rsi
0x000000000046619c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004191eb : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004661b4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047a956 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004174e6 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047ad4a : test byte ptr [rbx + 0x251c733d], 0 ; jmp rax
0x000000000041e0c7 : test byte ptr [rbx - 0xa000000], cl ; ret
0x000000000044941c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041770e : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000004c6d44 : test byte ptr [rcx + 0xb680000], cl ; sti ; jmp rsi
0x0000000000450012 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049c982 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000466f93 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x0000000000457a7a : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000043ff32 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x0000000000422ca6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c7a4d : test byte ptr [rcx], al ; ret
0x0000000000417f77 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049fb3e : test byte ptr [rdi], 0x84 ; ret
0x00000000004403aa : test byte ptr [rdi], 0x84 ; ret 0
0x00000000004716ee : test byte ptr [rdi], 0x85 ; ret
0x000000000047bc07 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486bad : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000465ddc : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465dc4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004114d4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047384e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046567d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000405a55 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004238dd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044e58d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043e3b2 : test ch, 0xf0 ; je 0x43e3ab ; movzx eax, cl ; pop rbx ; ret
0x000000000041ddbf : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000445d1b : test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a701 : test cl, bh ; add eax, 0xf6410000 ; ret 0xf01
0x000000000043d79f : test cl, cl ; jne 0x43d794 ; ret
0x000000000043d84f : test cl, cl ; jne 0x43d844 ; ret
0x000000000043db0f : test cl, cl ; jne 0x43db08 ; sub rax, 1 ; ret
0x0000000000420736 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000043e3da : test dh, 0xf0 ; je 0x43e3a9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e3da : test dh, 0xf0 ; je 0x43e3ab ; movzx eax, dl ; pop rbx ; ret
0x00000000004687cd : test dh, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446b95 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044dc26 : test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043bce4 : test dl, 0x40 ; jne 0x43bca9 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bd12 : test dl, 4 ; jne 0x43bca9 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000041a685 : test dl, al ; add eax, 0xf6410000 ; ret 0xf01
0x000000000041d0e9 : test dl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000040dba2 : test dl, dl ; jne 0x40db84 ; ret
0x000000000043d9bf : test dl, dl ; jne 0x43d9b8 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000426c19 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000460b4b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047dd04 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x000000000045c6d9 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b18b : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049b18a : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042c58f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f3c7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f816 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047eb79 : test dword ptr [rbx - 0x16000002], esi ; ret
0x0000000000418310 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000451ceb : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000425fca : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426930 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000410086 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f39d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f2ad : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f1bd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004502de : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000041b3ea : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047dbea : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000426b1a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045f780 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047cdf3 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000045b2cc : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c3a5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041f864 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042f0e2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044661f : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440d4d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d522 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c68e : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f5e8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000400708 : test eax, 0x415d002c ; pop rsp ; ret
0x00000000004ba700 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432d56 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004426db : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4be3c0 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402cd2 : test eax, eax ; je 0x402ce6 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f21 : test eax, eax ; je 0x402f3f ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403115 : test eax, eax ; je 0x403133 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403530 : test eax, eax ; je 0x403544 ; mov edi, 0x6cc0a0 ; call rax
0x0000000000403678 : test eax, eax ; je 0x40368c ; mov edi, 0x6cc0a0 ; call rax
0x0000000000417cd8 : test eax, eax ; je 0x417ce3 ; pop rbx ; ret
0x0000000000417db5 : test eax, eax ; je 0x417dbf ; call rax
0x000000000041efd6 : test eax, eax ; je 0x41efe0 ; call rax
0x00000000004236b3 : test eax, eax ; je 0x4236bf ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e626 : test eax, eax ; je 0x43e63a ; mov edi, 0x6cc720 ; call rax
0x000000000043e63e : test eax, eax ; je 0x43e652 ; mov edi, 0x6cc720 ; call rax
0x000000000043fda8 : test eax, eax ; je 0x43fdb3 ; ret
0x0000000000443fdf : test eax, eax ; je 0x443ff3 ; mov edi, 0x6cb140 ; call rax
0x0000000000444166 : test eax, eax ; je 0x444174 ; ret
0x000000000044d99e : test eax, eax ; je 0x44d9b2 ; mov edi, 0x6cc720 ; call rax
0x000000000044d9cd : test eax, eax ; je 0x44d9e9 ; mov edi, 0x6cc720 ; call rax
0x000000000044dace : test eax, eax ; je 0x44dad8 ; call rax
0x000000000044db2d : test eax, eax ; je 0x44db41 ; mov edi, 0x6cc720 ; call rax
0x000000000044dca6 : test eax, eax ; je 0x44dcc1 ; mov edi, 0x6cc720 ; call rax
0x000000000044df86 : test eax, eax ; je 0x44df9a ; mov edi, 0x6cc720 ; call rax
0x000000000044e08a : test eax, eax ; je 0x44e094 ; call rax
0x000000000044ef49 : test eax, eax ; je 0x44ef53 ; call rax
0x0000000000470d52 : test eax, eax ; je 0x470d66 ; mov edi, 0x6cb100 ; call rax
0x0000000000474d46 : test eax, eax ; je 0x474d5a ; mov edi, 0x6cb140 ; call rax
0x0000000000474d6e : test eax, eax ; je 0x474d82 ; mov edi, 0x6cb140 ; call rax
0x0000000000474de4 : test eax, eax ; je 0x474df8 ; mov edi, 0x6cb140 ; call rax
0x00000000004768b1 : test eax, eax ; je 0x476929 ; mov edi, 0x6cb140 ; call rax
0x000000000047826c : test eax, eax ; je 0x47823b ; mov edi, 0x6cb140 ; call rax
0x00000000004783ca : test eax, eax ; je 0x4783de ; mov edi, 0x6cb140 ; call rax
0x000000000047b110 : test eax, eax ; je 0x47b128 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e7e6 : test eax, eax ; je 0x47e7fa ; mov edi, 0x6cb140 ; call rax
0x000000000047e812 : test eax, eax ; je 0x47e826 ; mov edi, 0x6cb140 ; call rax
0x0000000000487f90 : test eax, eax ; je 0x487fa4 ; mov edi, 0x6cb140 ; call rax
0x0000000000488038 : test eax, eax ; je 0x48804c ; mov edi, 0x6cb140 ; call rax
0x000000000049e9b8 : test eax, eax ; je 0x49e9cc ; mov edi, 0x6cb100 ; call rax
0x000000000049ea79 : test eax, eax ; je 0x49ea8d ; mov edi, 0x6cb100 ; call rax
0x00000000004a071c : test eax, eax ; je 0x4a072b ; call rax
0x00000000004164b4 : test eax, eax ; jne 0x4164ad ; ret
0x0000000000426007 : test eax, eax ; jne 0x426067 ; xor rax, rax ; ret
0x0000000000442800 : test eax, eax ; jne 0x4427fb ; pop rdx ; pop r10 ; ret
0x000000000047402e : test eax, eax ; jne 0x474005 ; ret
0x000000000049e117 : test eax, eax ; jne 0x49e125 ; ret
0x000000000049e132 : test eax, eax ; jne 0x49e145 ; ret
0x000000000049e352 : test eax, eax ; jne 0x49e365 ; ret
0x0000000000471320 : test eax, eax ; js 0x47132d ; pop rbx ; ret
0x000000000047a76b : test eax, eax ; js 0x47a77d ; ret
0x000000000046b0e2 : test eax, eax ; mov rax, r9 ; jne 0x46b140 ; ret
0x00000000004bdce1 : test ebp, edi ; jmp qword ptr [rax]
0x0000000000425f30 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000445c8a : test ebx, ebx ; jne 0x445c65 ; jmp 0x445c57
0x000000000047aa8e : test ebx, ebx ; jne 0x47aaa8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049eb40 : test ebx, ebx ; mov rdi, rbx ; jne 0x49eb38 ; pop rbx ; ret
0x000000000041a68f : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bcd2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000466e59 : test ecx, ecx ; jne 0x466e18 ; mov rax, rdx ; ret
0x000000000046b131 : test ecx, ecx ; jne 0x46b0e7 ; xor eax, eax ; ret
0x000000000041e574 : test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421260 : test edi, edi ; je 0x421279 ; mov eax, 0x16 ; ret
0x000000000042004c : test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000423892 : test edx, edx ; je 0x4238a0 ; bsf eax, edx ; ret
0x0000000000423892 : test edx, edx ; je 0x4238a1 ; bsf eax, edx ; ret
0x000000000042393b : test edx, edx ; je 0x423957 ; bsf rax, rdx ; ret
0x000000000042393b : test edx, edx ; je 0x423958 ; bsf rax, rdx ; ret
0x00000000004656ea : test edx, edx ; je 0x465717 ; bsf rax, rdx ; ret
0x00000000004656ea : test edx, edx ; je 0x465718 ; bsf rax, rdx ; ret
0x00000000004133e3 : test edx, edx ; jne 0x4133f4 ; ret
0x0000000000414b5f : test edx, edx ; jne 0x414b55 ; ret
0x0000000000463a0f : test edx, edx ; jne 0x463a05 ; ret
0x0000000000466e9a : test edx, edx ; jne 0x466e95 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000040ed9b : test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d0f3 : test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bcc5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004655e1 : test esi, esi ; jne 0x4655f0 ; xor rax, rax ; ret
0x000000000043bcdf : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000046b0f2 : test r11b, r11b ; je 0x46b0e7 ; ret
0x000000000047402d : test r8, r8 ; jne 0x474006 ; ret
0x00000000004236b2 : test r8d, r8d ; je 0x4236c0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b0e1 : test r8d, r8d ; mov rax, r9 ; jne 0x46b141 ; ret
0x0000000000466e58 : test r9d, r9d ; jne 0x466e19 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000417cd7 : test rax, rax ; je 0x417ce4 ; pop rbx ; ret
0x0000000000417db4 : test rax, rax ; je 0x417dc0 ; call rax
0x000000000041efd5 : test rax, rax ; je 0x41efe1 ; call rax
0x000000000043fda7 : test rax, rax ; je 0x43fdb4 ; ret
0x000000000044dacd : test rax, rax ; je 0x44dad9 ; call rax
0x000000000044e089 : test rax, rax ; je 0x44e095 ; call rax
0x000000000044ef48 : test rax, rax ; je 0x44ef54 ; call rax
0x000000000047b10f : test rax, rax ; je 0x47b129 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a071b : test rax, rax ; je 0x4a072c ; call rax
0x00000000004164b3 : test rax, rax ; jne 0x4164ae ; ret
0x0000000000445c89 : test rbx, rbx ; jne 0x445c66 ; jmp 0x445c58
0x000000000047aa8d : test rbx, rbx ; jne 0x47aaa9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049eb3f : test rbx, rbx ; mov rdi, rbx ; jne 0x49eb39 ; pop rbx ; ret
0x000000000042393a : test rdx, rdx ; je 0x423958 ; bsf rax, rdx ; ret
0x000000000042393a : test rdx, rdx ; je 0x423959 ; bsf rax, rdx ; ret
0x00000000004656e9 : test rdx, rdx ; je 0x465718 ; bsf rax, rdx ; ret
0x00000000004656e9 : test rdx, rdx ; je 0x465719 ; bsf rax, rdx ; ret
0x00000000004133e2 : test rdx, rdx ; jne 0x4133f5 ; ret
0x0000000000414b5e : test rdx, rdx ; jne 0x414b56 ; ret
0x0000000000463a0e : test rdx, rdx ; jne 0x463a06 ; ret
0x00000000004655e0 : test rsi, rsi ; jne 0x4655f1 ; xor rax, rax ; ret
0x00000000004135f5 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043581a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000432b3a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432a70 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432839 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043dc20 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043297f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000004327a3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432806 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043dbca : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000435806 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004357ed : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043dd9b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dd9f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dc35 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043dc39 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435b23 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004359bc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004357be : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000435782 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435c85 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043df58 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043debb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043dd5a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042acb1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004055b5 : vpsubsb xmm12, xmm15, xmmword ptr [rdx + 0x29480001] ; ret
0x000000000043dcc9 : vzeroupper ; ret
0x000000000047352d : xadd ebp, edi ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004234bf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429f5f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004230af : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422bbb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004233cb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bbac : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b3cc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b7bc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afdc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004978bd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004423d7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004963c1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004975c1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496cc1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496fc1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004966b9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049a132 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000049a142 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000049a109 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042aabf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a29f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422e3f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429a7f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042317f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000042349b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b17b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042356b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5df : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429dbf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042959f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a77f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042331f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422b0f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049ba6c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000004a37ec : xchg byte ptr [rcx + rdi*8], bl ; call qword ptr [rsi]
0x0000000000422f0f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b66c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae8c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bf9c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049ae82 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004233ef : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422bdf : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004298df : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c81 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422fdf : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496966 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429a15 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a715 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497866 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496f66 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496c66 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a235 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b56d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049665e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be9d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042324f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004956ef : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049550f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495ee7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494e07 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495d07 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aa55 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d55 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429875 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a575 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b6bd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aedd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ca5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004455fc : xchg dword ptr [rax - 0x39], ecx ; ret
0x00000000004c6b9d : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x11], al ; cli ; jmp qword ptr [rdx]
0x00000000004c6af5 : xchg dword ptr [rax], eax ; add byte ptr [rax], cl ; in al, -6 ; jmp qword ptr [rdx]
0x0000000000470d16 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000445196 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x0000000000476911 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045df4d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484985 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044e695 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b83cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000408635 : xchg dword ptr [rcx + 1], ebx ; add cl, ch ; ret 0xffe2
0x00000000004829bb : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x00000000004497a2 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004878f3 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000004427fe : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4427fd ; pop rdx ; pop r10 ; ret
0x000000000046e478 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485709 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b856b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494a48 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000447bcb : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464836 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000411482 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004530d2 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x000000000041aeaa : xchg eax, ebp ; ret
0x000000000047bcf1 : xchg eax, ebp ; ret 0x3840
0x0000000000462ca7 : xchg eax, ebp ; ret 0x5389
0x000000000041c249 : xchg eax, ebp ; ret 0x8348
0x0000000000466fae : xchg eax, ebp ; ret 0x8b4c
0x000000000048a735 : xchg eax, ebp ; ret 0x941
0x0000000000403937 : xchg eax, ebp ; ret 0x953d
0x0000000000467c9b : xchg eax, ebp ; ret 0xb60f
0x0000000000467151 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b71f : xchg eax, ebp ; ret 0xc084
0x000000000045b155 : xchg eax, ebp ; ret 0xc283
0x0000000000442f88 : xchg eax, ebp ; ret 0xc985
0x000000000048904a : xchg eax, ebp ; ret 0xd348
0x000000000046700c : xchg eax, ebp ; ret 0xd721
0x000000000040f804 : xchg eax, ebp ; ret 0xdaf7
0x00000000004441a1 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466c40 : xchg eax, ebp ; ret 0xe883
0x000000000049b8fd : xchg eax, ebp ; ret 0xf45
0x0000000000467c0f : xchg eax, ebp ; ret 0xf748
0x000000000041695d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485b19 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004151b2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a140 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e530 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004c8681 : xchg eax, ebx ; cld ; call qword ptr [rax]
0x0000000000440129 : xchg eax, ebx ; fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043b15c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042fcb2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000044fad0 : xchg eax, ebx ; ret 0x3948
0x000000000045062e : xchg eax, ebx ; ret 0x3949
0x000000000041125f : xchg eax, ebx ; ret 0x840
0x0000000000450b03 : xchg eax, ebx ; ret 0x8548
0x00000000004642a4 : xchg eax, ebx ; ret 0xd108
0x00000000004bdd05 : xchg eax, ebx ; std ; jmp qword ptr [rax + 0x20fffd94]
0x0000000000421047 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042ab61 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000049d403 : xchg eax, ecx ; mul dword ptr [rdx] ; add cl, ch ; ret
0x00000000004bdd01 : xchg eax, ecx ; std ; jmp qword ptr [rax]
0x0000000000444163 : xchg eax, ecx ; sub byte ptr [rax], al ; test eax, eax ; je 0x444177 ; ret
0x000000000042928f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004098b5 : xchg eax, edi ; ret
0x000000000044243b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004bdd11 : xchg eax, edi ; std ; jmp qword ptr [rax]
0x00000000004b8a18 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000485b2f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000041780a : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004ba2dd : xchg eax, edx ; jae 0x4ba2ba ; push rsi ; pop rdx ; je 0x4ba2af ; ret 0xacfc
0x00000000004749b9 : xchg eax, edx ; ret 0x8348
0x0000000000475226 : xchg eax, edx ; ret 0xb60f
0x000000000044243e : xchg eax, edx ; ret 0xd029
0x00000000004b83cf : xchg eax, edx ; ret 0xf869
0x00000000004a3874 : xchg eax, edx ; sbb edi, ecx ; jmp qword ptr [rdx]
0x00000000004236b7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042e830 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000469806 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434567 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000042e8ed : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a351c : xchg eax, esi ; mov esi, 0xbf96fff8 ; clc ; call qword ptr [rsi]
0x000000000042e84b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bac6c : xchg eax, esi ; ret 0xcd11
0x000000000042e89c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bdd0d : xchg eax, esi ; std ; jmp qword ptr [rax + 0x20fffd97]
0x0000000000444198 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004435f8 : xchg eax, esp ; push rcx ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004bae7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bae10 ; ret 0x48f
0x0000000000458a14 : xchg eax, esp ; ret
0x000000000046d7e7 : xchg eax, esp ; ret 0x1f0f
0x000000000047c33e : xchg eax, esp ; ret 0x3840
0x000000000047ba7c : xchg eax, esp ; ret 0x5438
0x000000000041b3d9 : xchg eax, esp ; ret 0x7ae9
0x00000000004618e5 : xchg eax, esp ; ret 0x7f3c
0x000000000043e09f : xchg eax, esp ; ret 0x8341
0x0000000000449d55 : xchg eax, esp ; ret 0x8348
0x000000000043e13f : xchg eax, esp ; ret 0x8444
0x000000000046f441 : xchg eax, esp ; ret 0x8545
0x000000000047adce : xchg eax, esp ; ret 0x950f
0x0000000000455a78 : xchg eax, esp ; ret 0x9522
0x0000000000402878 : xchg eax, esp ; ret 0xb60f
0x000000000046bb7c : xchg eax, esp ; ret 0xc283
0x000000000047bc09 : xchg eax, esp ; ret 0xd021
0x0000000000485a36 : xchg eax, esp ; ret 0xd309
0x000000000047b9cf : xchg eax, esp ; ret 0xda38
0x000000000047a810 : xchg eax, esp ; ret 0xdaf7
0x000000000049b89c : xchg eax, esp ; ret 0xf45
0x0000000000459b38 : xchg eax, esp ; ret 0xfa80
0x000000000043e0c2 : xchg eax, esp ; ret 0xfe83
0x000000000046ac8f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004bfe54 : xchg eax, esp ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x4e], cl ; cmc ; jmp qword ptr [rcx]
0x00000000004bdd09 : xchg eax, esp ; std ; jmp qword ptr [rax]
0x00000000004117a1 : xchg eax, r8d ; jmp 0x4116ad
0x00000000004bdce5 : xchg ebp, edi ; jmp qword ptr [rax + 0x20fffd88]
0x0000000000418d84 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x000000000043eb9f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000411481 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000444162 : xchg rax, rcx ; sub byte ptr [rax], al ; test eax, eax ; je 0x444178 ; ret
0x00000000004190d5 : xlatb ; add al, 0 ; add dh, dh ; ret
0x0000000000469dc5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b12d9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042fb8c : xlatb ; add r9, r11 ; jmp r9
0x000000000043e9a1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004c67e1 : xlatb ; cli ; jmp rsi
0x000000000046ad6f : xlatb ; ja 0x46ad9c ; ret
0x00000000004b9443 : xlatb ; jo 0x4b94bf ; mov ebp, 0xfb67d10d ; ret
0x0000000000452182 : xlatb ; mov byte ptr [rsi], al ; jne 0x452168 ; mov rax, rsi ; ret
0x0000000000421409 : xlatb ; ret
0x00000000004ba8e6 : xlatb ; ret 0x4e27
0x00000000004659c7 : xlatb ; ret 0x94c
0x0000000000425e2f : xlatb ; ret 0xc085
0x0000000000421400 : xlatb ; ret 0xc148
0x00000000004238b4 : xlatb ; ret 0xf66
0x0000000000472705 : xlatb ; ret 0xfffc
0x000000000042cd61 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043bc86 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004228c6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000422786 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422646 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000422506 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004223c6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000422286 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422146 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000422006 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421ec6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421d86 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421c46 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421b06 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004219c6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000421886 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421746 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043bc82 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465965 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465976 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004bded9 : xlatb ; std ; call rsp
0x00000000004b83ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004c04f4 : xor al, 0x21 ; add byte ptr [rax], al ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rax]
0x00000000004c19f4 : xor al, 0x36 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x000000000045b702 : xor al, 0x4b ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a6ee : xor al, 0x4b ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c6af4 : xor al, 0x87 ; add byte ptr [rax], al ; or ah, ah ; cli ; jmp qword ptr [rdx]
0x000000000040553d : xor al, 0x89 ; ret 0x5525
0x0000000000462107 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b95aa : xor al, 0xd8 ; ret
0x0000000000440088 : xor al, 0xdf ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044529a : xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x00000000004a3640 : xor bh, ah ; clc ; call qword ptr [rax]
0x00000000004a3690 : xor bh, bl ; clc ; push rax ; loopne 0x4a3696 ; call rax
0x000000000042608c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000425f4d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000049e8f4 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000421311 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000467aed : xor byte ptr [rax - 0x39], cl ; ret
0x0000000000449b3b : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004237bf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000046dc93 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000464972 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000410c2d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040ea12 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e9ca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e47c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c26a0 : xor byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004648ba : xor byte ptr [rax], al ; je 0x4648c4 ; ret
0x00000000004a3bc0 : xor byte ptr [rax], dl ; stc ; jmp qword ptr [rax + 0x10fff90f]
0x0000000000415870 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403573 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049fb3b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000049e44e : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c0cff : xor byte ptr [rbx + 0xaea0206], al ; ret
0x0000000000426b7b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415bbe : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000443d99 : xor byte ptr [rcx + 0x28892005], cl ; add cl, ch ; ret
0x0000000000420928 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458a47 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004bdcc8 : xor byte ptr [rcx - 3], bh ; call qword ptr [rax]
0x00000000004a3314 : xor byte ptr [rcx - 8], ah ; call rax
0x0000000000410c2e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f8f5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000411c55 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; sbb byte ptr [rdx + rcx*2], 0 ; pop rbx ; ret
0x0000000000463ad0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458a12 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004c1da7 : xor byte ptr [rdx], al ; int 0xa
0x00000000004c15e7 : xor byte ptr [rdx], al ; ret
0x00000000004a3bd8 : xor byte ptr [rip + 0x14a0fff9], dl ; stc ; jmp qword ptr [rax]
0x000000000042e5df : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046592c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000425f4e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e09a : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004a3334 : xor byte ptr [rsi - 8], ch ; call rax
0x00000000004a3674 : xor cl, ah ; clc ; call qword ptr [rax]
0x0000000000465fab : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000473146 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d58f : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000455faa : xor cl, byte ptr [rbx] ; jmp rax
0x0000000000440e72 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000476e6e : xor dl, dh ; jmp r11
0x0000000000476f80 : xor dl, dh ; ret
0x0000000000420c65 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000045a39d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x000000000041de5a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000441313 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000049e1c9 : xor eax, 0x22eb82 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049e071 : xor eax, 0x22ecda ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004172d9 : xor eax, 0x3948002b ; ret
0x000000000048e579 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ea0f : xor eax, dword ptr [0x30] ; call rax
0x000000000049cebd : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000478737 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047880f : xor eax, eax ; add rsp, 0x68 ; ret
0x000000000047485a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451ba9 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000465157 : xor eax, eax ; call rbx
0x000000000046ad6b : xor eax, eax ; cmp rdi, rdx ; ja 0x46ada0 ; ret
0x00000000004427d7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004429d5 : xor eax, eax ; leave ; ret
0x0000000000463099 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044084b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044294f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041ebad : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b518 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ec1d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042384c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004123ec : xor eax, eax ; pop rbx ; ret
0x0000000000401550 : xor eax, eax ; ret
0x000000000042e4fe : xor eax, eax ; sub eax, ecx ; ret
0x000000000043e3d8 : xor eax, eax ; test dh, 0xf0 ; je 0x43e3ab ; movzx eax, dl ; pop rbx ; ret
0x000000000046b0f0 : xor eax, eax ; test r11b, r11b ; je 0x46b0e9 ; ret
0x00000000004133e0 : xor eax, eax ; test rdx, rdx ; jne 0x4133f7 ; ret
0x00000000004c2f51 : xor eax, edi ; jmp rsp
0x0000000000467a23 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004740f8 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044048b : xor ebx, ebx ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000046a89d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000447fc1 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000466435 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004a34ec : xor ecx, eax ; clc ; push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x000000000044f082 : xor ecx, eax ; ret 0x4809
0x0000000000473bee : xor edi, edi ; call 0x43fe04
0x000000000040e9c7 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004a34f4 : xor edx, eax ; clc ; inc ecx ; ret 0xfff8
0x0000000000444a03 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000044419c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44418c
0x000000000045a3f3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047aab9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a8be : xor edx, edx ; jmp 0x46a888
0x0000000000473e64 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004154d9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004178bc : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004881b3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440ce1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000401665 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047ad49 : xor esi, esi ; mov edi, dword ptr [rip + 0x251c73] ; jmp rax
0x000000000043ff31 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440ce3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440d08 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440d2d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440d51 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440d71 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000465156 : xor r8d, r8d ; call rbx
0x000000000040ea0e : xor rax, qword ptr [0x30] ; call rax
0x000000000040ea0d : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000425fcf : xor rax, rax ; ret
0x000000000040e9c6 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e9c5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 8983
