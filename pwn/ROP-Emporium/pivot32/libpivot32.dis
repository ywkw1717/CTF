
libpivot32.so:     ファイル形式 elf32-i386


セクション .init の逆アセンブル:

000005c0 <_init>:
 5c0:	53                   	push   ebx
 5c1:	83 ec 08             	sub    esp,0x8
 5c4:	e8 77 00 00 00       	call   640 <__x86.get_pc_thunk.bx>
 5c9:	81 c3 37 1a 00 00    	add    ebx,0x1a37
 5cf:	8b 83 f4 ff ff ff    	mov    eax,DWORD PTR [ebx-0xc]
 5d5:	85 c0                	test   eax,eax
 5d7:	74 05                	je     5de <_init+0x1e>
 5d9:	e8 5a 00 00 00       	call   638 <exit@plt+0x18>
 5de:	83 c4 08             	add    esp,0x8
 5e1:	5b                   	pop    ebx
 5e2:	c3                   	ret    

セクション .plt の逆アセンブル:

000005f0 <printf@plt-0x10>:
 5f0:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 5f6:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 5fc:	00 00                	add    BYTE PTR [eax],al
	...

00000600 <printf@plt>:
 600:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 606:	68 00 00 00 00       	push   0x0
 60b:	e9 e0 ff ff ff       	jmp    5f0 <_init+0x30>

00000610 <system@plt>:
 610:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
 616:	68 08 00 00 00       	push   0x8
 61b:	e9 d0 ff ff ff       	jmp    5f0 <_init+0x30>

00000620 <exit@plt>:
 620:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 626:	68 10 00 00 00       	push   0x10
 62b:	e9 c0 ff ff ff       	jmp    5f0 <_init+0x30>

セクション .plt.got の逆アセンブル:

00000630 <.plt.got>:
 630:	ff a3 f0 ff ff ff    	jmp    DWORD PTR [ebx-0x10]
 636:	66 90                	xchg   ax,ax
 638:	ff a3 f4 ff ff ff    	jmp    DWORD PTR [ebx-0xc]
 63e:	66 90                	xchg   ax,ax

セクション .text の逆アセンブル:

00000640 <__x86.get_pc_thunk.bx>:
 640:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 643:	c3                   	ret    
 644:	66 90                	xchg   ax,ax
 646:	66 90                	xchg   ax,ax
 648:	66 90                	xchg   ax,ax
 64a:	66 90                	xchg   ax,ax
 64c:	66 90                	xchg   ax,ax
 64e:	66 90                	xchg   ax,ax

00000650 <deregister_tm_clones>:
 650:	e8 17 01 00 00       	call   76c <__x86.get_pc_thunk.dx>
 655:	81 c2 ab 19 00 00    	add    edx,0x19ab
 65b:	8d 8a 1c 00 00 00    	lea    ecx,[edx+0x1c]
 661:	8d 82 1f 00 00 00    	lea    eax,[edx+0x1f]
 667:	29 c8                	sub    eax,ecx
 669:	83 f8 06             	cmp    eax,0x6
 66c:	76 17                	jbe    685 <deregister_tm_clones+0x35>
 66e:	8b 82 ec ff ff ff    	mov    eax,DWORD PTR [edx-0x14]
 674:	85 c0                	test   eax,eax
 676:	74 0d                	je     685 <deregister_tm_clones+0x35>
 678:	55                   	push   ebp
 679:	89 e5                	mov    ebp,esp
 67b:	83 ec 14             	sub    esp,0x14
 67e:	51                   	push   ecx
 67f:	ff d0                	call   eax
 681:	83 c4 10             	add    esp,0x10
 684:	c9                   	leave  
 685:	f3 c3                	repz ret 
 687:	89 f6                	mov    esi,esi
 689:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000690 <register_tm_clones>:
 690:	e8 d7 00 00 00       	call   76c <__x86.get_pc_thunk.dx>
 695:	81 c2 6b 19 00 00    	add    edx,0x196b
 69b:	55                   	push   ebp
 69c:	8d 8a 1c 00 00 00    	lea    ecx,[edx+0x1c]
 6a2:	8d 82 1c 00 00 00    	lea    eax,[edx+0x1c]
 6a8:	89 e5                	mov    ebp,esp
 6aa:	53                   	push   ebx
 6ab:	29 c8                	sub    eax,ecx
 6ad:	c1 f8 02             	sar    eax,0x2
 6b0:	83 ec 04             	sub    esp,0x4
 6b3:	89 c3                	mov    ebx,eax
 6b5:	c1 eb 1f             	shr    ebx,0x1f
 6b8:	01 d8                	add    eax,ebx
 6ba:	d1 f8                	sar    eax,1
 6bc:	74 14                	je     6d2 <register_tm_clones+0x42>
 6be:	8b 92 fc ff ff ff    	mov    edx,DWORD PTR [edx-0x4]
 6c4:	85 d2                	test   edx,edx
 6c6:	74 0a                	je     6d2 <register_tm_clones+0x42>
 6c8:	83 ec 08             	sub    esp,0x8
 6cb:	50                   	push   eax
 6cc:	51                   	push   ecx
 6cd:	ff d2                	call   edx
 6cf:	83 c4 10             	add    esp,0x10
 6d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 6d5:	c9                   	leave  
 6d6:	c3                   	ret    
 6d7:	89 f6                	mov    esi,esi
 6d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000006e0 <__do_global_dtors_aux>:
 6e0:	55                   	push   ebp
 6e1:	89 e5                	mov    ebp,esp
 6e3:	53                   	push   ebx
 6e4:	e8 57 ff ff ff       	call   640 <__x86.get_pc_thunk.bx>
 6e9:	81 c3 17 19 00 00    	add    ebx,0x1917
 6ef:	83 ec 04             	sub    esp,0x4
 6f2:	80 bb 1c 00 00 00 00 	cmp    BYTE PTR [ebx+0x1c],0x0
 6f9:	75 27                	jne    722 <__do_global_dtors_aux+0x42>
 6fb:	8b 83 f0 ff ff ff    	mov    eax,DWORD PTR [ebx-0x10]
 701:	85 c0                	test   eax,eax
 703:	74 11                	je     716 <__do_global_dtors_aux+0x36>
 705:	83 ec 0c             	sub    esp,0xc
 708:	ff b3 18 00 00 00    	push   DWORD PTR [ebx+0x18]
 70e:	e8 1d ff ff ff       	call   630 <exit@plt+0x10>
 713:	83 c4 10             	add    esp,0x10
 716:	e8 35 ff ff ff       	call   650 <deregister_tm_clones>
 71b:	c6 83 1c 00 00 00 01 	mov    BYTE PTR [ebx+0x1c],0x1
 722:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 725:	c9                   	leave  
 726:	c3                   	ret    
 727:	89 f6                	mov    esi,esi
 729:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000730 <frame_dummy>:
 730:	e8 37 00 00 00       	call   76c <__x86.get_pc_thunk.dx>
 735:	81 c2 cb 18 00 00    	add    edx,0x18cb
 73b:	8d 82 08 ff ff ff    	lea    eax,[edx-0xf8]
 741:	8b 08                	mov    ecx,DWORD PTR [eax]
 743:	85 c9                	test   ecx,ecx
 745:	75 09                	jne    750 <frame_dummy+0x20>
 747:	e9 44 ff ff ff       	jmp    690 <register_tm_clones>
 74c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 750:	8b 92 f8 ff ff ff    	mov    edx,DWORD PTR [edx-0x8]
 756:	85 d2                	test   edx,edx
 758:	74 ed                	je     747 <frame_dummy+0x17>
 75a:	55                   	push   ebp
 75b:	89 e5                	mov    ebp,esp
 75d:	83 ec 14             	sub    esp,0x14
 760:	50                   	push   eax
 761:	ff d2                	call   edx
 763:	83 c4 10             	add    esp,0x10
 766:	c9                   	leave  
 767:	e9 24 ff ff ff       	jmp    690 <register_tm_clones>

0000076c <__x86.get_pc_thunk.dx>:
 76c:	8b 14 24             	mov    edx,DWORD PTR [esp]
 76f:	c3                   	ret    

00000770 <foothold_function>:
 770:	55                   	push   ebp
 771:	89 e5                	mov    ebp,esp
 773:	53                   	push   ebx
 774:	83 ec 04             	sub    esp,0x4
 777:	e8 19 02 00 00       	call   995 <__x86.get_pc_thunk.ax>
 77c:	05 84 18 00 00       	add    eax,0x1884
 781:	83 ec 0c             	sub    esp,0xc
 784:	8d 90 b0 e9 ff ff    	lea    edx,[eax-0x1650]
 78a:	52                   	push   edx
 78b:	89 c3                	mov    ebx,eax
 78d:	e8 6e fe ff ff       	call   600 <printf@plt>
 792:	83 c4 10             	add    esp,0x10
 795:	90                   	nop
 796:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 799:	c9                   	leave  
 79a:	c3                   	ret    

0000079b <void_function_01>:
 79b:	55                   	push   ebp
 79c:	89 e5                	mov    ebp,esp
 79e:	53                   	push   ebx
 79f:	83 ec 04             	sub    esp,0x4
 7a2:	e8 99 fe ff ff       	call   640 <__x86.get_pc_thunk.bx>
 7a7:	81 c3 59 18 00 00    	add    ebx,0x1859
 7ad:	83 ec 0c             	sub    esp,0xc
 7b0:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 7b6:	50                   	push   eax
 7b7:	e8 44 fe ff ff       	call   600 <printf@plt>
 7bc:	83 c4 10             	add    esp,0x10
 7bf:	83 ec 0c             	sub    esp,0xc
 7c2:	6a 01                	push   0x1
 7c4:	e8 57 fe ff ff       	call   620 <exit@plt>

000007c9 <void_function_02>:
 7c9:	55                   	push   ebp
 7ca:	89 e5                	mov    ebp,esp
 7cc:	53                   	push   ebx
 7cd:	83 ec 04             	sub    esp,0x4
 7d0:	e8 6b fe ff ff       	call   640 <__x86.get_pc_thunk.bx>
 7d5:	81 c3 2b 18 00 00    	add    ebx,0x182b
 7db:	83 ec 0c             	sub    esp,0xc
 7de:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 7e4:	50                   	push   eax
 7e5:	e8 16 fe ff ff       	call   600 <printf@plt>
 7ea:	83 c4 10             	add    esp,0x10
 7ed:	83 ec 0c             	sub    esp,0xc
 7f0:	6a 01                	push   0x1
 7f2:	e8 29 fe ff ff       	call   620 <exit@plt>

000007f7 <void_function_03>:
 7f7:	55                   	push   ebp
 7f8:	89 e5                	mov    ebp,esp
 7fa:	53                   	push   ebx
 7fb:	83 ec 04             	sub    esp,0x4
 7fe:	e8 3d fe ff ff       	call   640 <__x86.get_pc_thunk.bx>
 803:	81 c3 fd 17 00 00    	add    ebx,0x17fd
 809:	83 ec 0c             	sub    esp,0xc
 80c:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 812:	50                   	push   eax
 813:	e8 e8 fd ff ff       	call   600 <printf@plt>
 818:	83 c4 10             	add    esp,0x10
 81b:	83 ec 0c             	sub    esp,0xc
 81e:	6a 01                	push   0x1
 820:	e8 fb fd ff ff       	call   620 <exit@plt>

00000825 <void_function_04>:
 825:	55                   	push   ebp
 826:	89 e5                	mov    ebp,esp
 828:	53                   	push   ebx
 829:	83 ec 04             	sub    esp,0x4
 82c:	e8 0f fe ff ff       	call   640 <__x86.get_pc_thunk.bx>
 831:	81 c3 cf 17 00 00    	add    ebx,0x17cf
 837:	83 ec 0c             	sub    esp,0xc
 83a:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 840:	50                   	push   eax
 841:	e8 ba fd ff ff       	call   600 <printf@plt>
 846:	83 c4 10             	add    esp,0x10
 849:	83 ec 0c             	sub    esp,0xc
 84c:	6a 01                	push   0x1
 84e:	e8 cd fd ff ff       	call   620 <exit@plt>

00000853 <void_function_05>:
 853:	55                   	push   ebp
 854:	89 e5                	mov    ebp,esp
 856:	53                   	push   ebx
 857:	83 ec 04             	sub    esp,0x4
 85a:	e8 e1 fd ff ff       	call   640 <__x86.get_pc_thunk.bx>
 85f:	81 c3 a1 17 00 00    	add    ebx,0x17a1
 865:	83 ec 0c             	sub    esp,0xc
 868:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 86e:	50                   	push   eax
 86f:	e8 8c fd ff ff       	call   600 <printf@plt>
 874:	83 c4 10             	add    esp,0x10
 877:	83 ec 0c             	sub    esp,0xc
 87a:	6a 01                	push   0x1
 87c:	e8 9f fd ff ff       	call   620 <exit@plt>

00000881 <void_function_06>:
 881:	55                   	push   ebp
 882:	89 e5                	mov    ebp,esp
 884:	53                   	push   ebx
 885:	83 ec 04             	sub    esp,0x4
 888:	e8 b3 fd ff ff       	call   640 <__x86.get_pc_thunk.bx>
 88d:	81 c3 73 17 00 00    	add    ebx,0x1773
 893:	83 ec 0c             	sub    esp,0xc
 896:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 89c:	50                   	push   eax
 89d:	e8 5e fd ff ff       	call   600 <printf@plt>
 8a2:	83 c4 10             	add    esp,0x10
 8a5:	83 ec 0c             	sub    esp,0xc
 8a8:	6a 01                	push   0x1
 8aa:	e8 71 fd ff ff       	call   620 <exit@plt>

000008af <void_function_07>:
 8af:	55                   	push   ebp
 8b0:	89 e5                	mov    ebp,esp
 8b2:	53                   	push   ebx
 8b3:	83 ec 04             	sub    esp,0x4
 8b6:	e8 85 fd ff ff       	call   640 <__x86.get_pc_thunk.bx>
 8bb:	81 c3 45 17 00 00    	add    ebx,0x1745
 8c1:	83 ec 0c             	sub    esp,0xc
 8c4:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 8ca:	50                   	push   eax
 8cb:	e8 30 fd ff ff       	call   600 <printf@plt>
 8d0:	83 c4 10             	add    esp,0x10
 8d3:	83 ec 0c             	sub    esp,0xc
 8d6:	6a 01                	push   0x1
 8d8:	e8 43 fd ff ff       	call   620 <exit@plt>

000008dd <void_function_08>:
 8dd:	55                   	push   ebp
 8de:	89 e5                	mov    ebp,esp
 8e0:	53                   	push   ebx
 8e1:	83 ec 04             	sub    esp,0x4
 8e4:	e8 57 fd ff ff       	call   640 <__x86.get_pc_thunk.bx>
 8e9:	81 c3 17 17 00 00    	add    ebx,0x1717
 8ef:	83 ec 0c             	sub    esp,0xc
 8f2:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 8f8:	50                   	push   eax
 8f9:	e8 02 fd ff ff       	call   600 <printf@plt>
 8fe:	83 c4 10             	add    esp,0x10
 901:	83 ec 0c             	sub    esp,0xc
 904:	6a 01                	push   0x1
 906:	e8 15 fd ff ff       	call   620 <exit@plt>

0000090b <void_function_09>:
 90b:	55                   	push   ebp
 90c:	89 e5                	mov    ebp,esp
 90e:	53                   	push   ebx
 90f:	83 ec 04             	sub    esp,0x4
 912:	e8 29 fd ff ff       	call   640 <__x86.get_pc_thunk.bx>
 917:	81 c3 e9 16 00 00    	add    ebx,0x16e9
 91d:	83 ec 0c             	sub    esp,0xc
 920:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 926:	50                   	push   eax
 927:	e8 d4 fc ff ff       	call   600 <printf@plt>
 92c:	83 c4 10             	add    esp,0x10
 92f:	83 ec 0c             	sub    esp,0xc
 932:	6a 01                	push   0x1
 934:	e8 e7 fc ff ff       	call   620 <exit@plt>

00000939 <void_function_10>:
 939:	55                   	push   ebp
 93a:	89 e5                	mov    ebp,esp
 93c:	53                   	push   ebx
 93d:	83 ec 04             	sub    esp,0x4
 940:	e8 fb fc ff ff       	call   640 <__x86.get_pc_thunk.bx>
 945:	81 c3 bb 16 00 00    	add    ebx,0x16bb
 94b:	83 ec 0c             	sub    esp,0xc
 94e:	8d 83 05 ea ff ff    	lea    eax,[ebx-0x15fb]
 954:	50                   	push   eax
 955:	e8 a6 fc ff ff       	call   600 <printf@plt>
 95a:	83 c4 10             	add    esp,0x10
 95d:	83 ec 0c             	sub    esp,0xc
 960:	6a 01                	push   0x1
 962:	e8 b9 fc ff ff       	call   620 <exit@plt>

00000967 <ret2win>:
 967:	55                   	push   ebp
 968:	89 e5                	mov    ebp,esp
 96a:	53                   	push   ebx
 96b:	83 ec 04             	sub    esp,0x4
 96e:	e8 cd fc ff ff       	call   640 <__x86.get_pc_thunk.bx>
 973:	81 c3 8d 16 00 00    	add    ebx,0x168d
 979:	83 ec 0c             	sub    esp,0xc
 97c:	8d 83 19 ea ff ff    	lea    eax,[ebx-0x15e7]
 982:	50                   	push   eax
 983:	e8 88 fc ff ff       	call   610 <system@plt>
 988:	83 c4 10             	add    esp,0x10
 98b:	83 ec 0c             	sub    esp,0xc
 98e:	6a 00                	push   0x0
 990:	e8 8b fc ff ff       	call   620 <exit@plt>

00000995 <__x86.get_pc_thunk.ax>:
 995:	8b 04 24             	mov    eax,DWORD PTR [esp]
 998:	c3                   	ret    

セクション .fini の逆アセンブル:

0000099c <_fini>:
 99c:	53                   	push   ebx
 99d:	83 ec 08             	sub    esp,0x8
 9a0:	e8 9b fc ff ff       	call   640 <__x86.get_pc_thunk.bx>
 9a5:	81 c3 5b 16 00 00    	add    ebx,0x165b
 9ab:	83 c4 08             	add    esp,0x8
 9ae:	5b                   	pop    ebx
 9af:	c3                   	ret    
